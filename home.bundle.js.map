{"version":3,"sources":["webpack://webpack-app/./src/components/Modal.js","webpack://webpack-app/./src/components/zaruDashboard/Dashboard.js","webpack://webpack-app/./src/components/zaruDashboard/DashboardAddButton.js","webpack://webpack-app/./src/components/zaruDashboard/DashboardCreateForm.js","webpack://webpack-app/./src/components/zaruDashboard/DashboardPlaceholder.js","webpack://webpack-app/./src/components/zaruDashboard/Dashboards.js","webpack://webpack-app/./src/components/zaruDashboard/DashboardsConfirmDeleteModal.js","webpack://webpack-app/./src/components/zaruDashboard/PrintWidget.js","webpack://webpack-app/./src/components/zaruDashboard/SelectorItem.js","webpack://webpack-app/./src/components/zaruDashboard/SelectorModal.js","webpack://webpack-app/./src/components/zaruDashboard/WidgetSwitch.js","webpack://webpack-app/./src/pages/MockIframe.js","webpack://webpack-app/./src/pages/StaticDashboard.js","webpack://webpack-app/./src/pages/ZaruDashboard.js","webpack://webpack-app/./src/assets/images/FourRWidget.png","webpack://webpack-app/./src/assets/images/ap_spend.png","webpack://webpack-app/./src/assets/images/budget_vs_actual.png","webpack://webpack-app/./src/assets/images/cost-widget.png","webpack://webpack-app/./src/assets/images/vendor_spend.png"],"names":["Modal","props","show","className","title","children","type","onClick","onClose","secondaryActionText","primaryButtonClass","onSubmit","primaryActionText","defaultProps","propTypes","PropTypes","Dashboard","error","this","company","isFullScreen","id","admin","dashboardId","match","params","Component","connect","state","dashboard","fullscreenOpen","onDeletePress","setSelectedDashboard","filteredProps","key","DashboardCreateForm","value","inputValue","onChange","event","onInputChange","target","style","display","React","moveCursorToEnd","e","temp_value","PlaceholderTitle","index","editingTitle","selectedDashboard","items","preventDefault","onBlur","setEditingDashboardTitle","editDashboardTitle","onFocus","autoFocus","dashboards","Link","to","drawLayout","map","item","i","x","y","parseInt","w","h","static","Dashboards","layout","modalIsOpen","confirmDeleteModalIsOpen","addDashboard","bind","onLayoutChange","sortItems","hideModal","showModal","onCreateSubmit","hideConfirmDeleteModal","showConfirmDeleteModal","onDeleteSubmit","fetchDashboards","setState","nextProps","deleteDashboard","createDashboard","titleInput","el","styles","container","rowHeight","width","isResizable","draggableCancel","slice","createElement","setTitleInput","cols","lg","md","sm","xs","xxs","height","overflowY","setDashboardsItems","DashboardsConfirmDeleteModal","widgetTitles","vendor_spend","ap_spend","cost","four_r","PrintWidget","setTimeout","window","print","localStorage","removeItem","URLSearchParams","location","search","encryptedState","getItem","_","decryptedText","CryptoJS","process","toString","reduxState","JSON","parse","widgetId","get","widget","widgets","find","reports","startDate","endDate","document","name","moment","format","Date","forEach","restoreState","fullscreen","printView","source","disabled","opacity","inUse","alt","src","SelectorModal","handleSelectorItemClick","selectorItemDisabled","createWidget","includes","visible","close","apSpendWidgetThumbnail","vendorSpendThumbnail","costThumbnail","FourRWidgetThumbnail","BudgetVsActualWidgetThumbnail","addWidgetToDashboard","WidgetSwitch","onCompressClick","onExpandClick","commonProps","StaticDashboard","fetchLocations","ZaruDashboard","selectorModalOpen","didFetch","isLoading","isDataFetching","openSelector","Route","exact","path","component","authorize"],"mappings":"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","file":"home.bundle.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport 'styles/Modal.css'\n\nfunction Modal(props) {\n  if (!props.show) {\n    return null\n  }\n\n  return (\n    <div className=\"backdrop\">\n      <div className=\"dialog\">\n        <div className=\"dialog-header\">\n          <span className=\"dialog-title\">{props.title}</span>\n        </div>\n\n        {props.children}\n\n        <div className=\"dialog-footer\">\n          <button type=\"button\" className=\"btn\" onClick={props.onClose}>\n            {props.secondaryActionText}\n          </button>\n          <button\n            type=\"button\"\n            className={`btn btn-primary ${props.primaryButtonClass}`}\n            onClick={props.onSubmit}\n          >\n            {props.primaryActionText}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nModal.defaultProps = {\n  primaryButtonClass: '',\n}\n\nModal.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  primaryActionText: PropTypes.string.isRequired,\n  primaryButtonClass: PropTypes.string,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Modal\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/Dashboard.css'\nimport DashboardGrid from './DashboardGrid'\n\nclass Dashboard extends Component {\n  render() {\n    const { error } = this.props.company\n    const { isFullScreen } = this.props\n    return (\n      <div\n        className={\n          isFullScreen\n            ? 'dashboard-container fullscreen'\n            : 'dashboard-container'\n        }\n      >\n        {this.props.company.error ? (\n          <div className=\"general-error\">\n            <i className=\"fa fa-exclamation-circle\" id=\"error-icon\"></i>\n            <div>{error}</div>\n          </div>\n        ) : (\n          <DashboardGrid admin dashboardId={this.props.match.params.id} />\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isFullScreen: state.dashboard.fullscreenOpen,\n  company: state.company,\n})\n\nexport default connect(mapStateToProps)(Dashboard)\n","import React from 'react'\nimport 'styles/DashboardAddButton.css'\n\nconst DashboardAddButton = (props) => {\n  const { onDeletePress, setSelectedDashboard, ...filteredProps } = props\n  return (\n    <div\n      id=\"placeholder-container\"\n      key={props.key}\n      {...filteredProps}\n      onClick={props.onClick}\n    >\n      <div className=\"add-container\">{props.children}</div>\n      <div className=\"placeholder-footer\">\n        <div className=\"placeholder-title\">{props.title}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardAddButton\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport 'styles/DashboardCreateForm.css'\n\nclass DashboardCreateForm extends React.Component {\n  render() {\n    return (\n      <form className=\"dashboard-create-form\" onSubmit={this.props.onSubmit}>\n        <div className=\"dashboard-create-label\">\n          What would you like to call it?\n        </div>\n        <input\n          id=\"dashboard-create-input\"\n          value={this.props.inputValue}\n          onChange={(event) => this.props.onInputChange(event.target.value)}\n        />\n        <input type=\"submit\" style={{ display: 'none' }} />\n      </form>\n    )\n  }\n}\n\nDashboardCreateForm.propTypes = {\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n}\n\nexport default DashboardCreateForm\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {\n  editDashboardTitle,\n  setEditingDashboardTitle,\n  setSelectedDashboard,\n} from 'actions'\nimport 'styles/DashboardPlaceholder.css'\n\nconst moveCursorToEnd = (e) => {\n  const temp_value = e.target.value\n  e.target.value = ''\n  e.target.value = temp_value\n}\n\nconst PlaceholderTitle = (props) => {\n  const { index, editingTitle, selectedDashboard, items } = props\n  if (editingTitle && selectedDashboard === index) {\n    return (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault()\n        }}\n      >\n        <input\n          className=\"placeholder-title-input\"\n          onBlur={() => props.setEditingDashboardTitle(false)}\n          onChange={(event) =>\n            props.editDashboardTitle(event.target.value, props.index)\n          }\n          value={items[props.index].title}\n          onFocus={moveCursorToEnd}\n          autoFocus\n        />\n        <input type=\"submit\" style={{ display: 'none' }} />\n      </form>\n    )\n  }\n\n  return (\n    <div className=\"placeholder-title\">\n      {props.title !== '' ? props.title : 'Untitled'}\n    </div>\n  )\n}\n\nconst DashboardPlaceholder = (props) => {\n  const {\n    onDeletePress,\n    setSelectedDashboard,\n    setEditingDashboardTitle,\n    editDashboardTitle,\n    editingTitle,\n    selectedDashboard,\n    title,\n    ...filteredProps\n  } = props\n\n  return (\n    <div\n      id=\"placeholder-container\"\n      key={props.key}\n      {...filteredProps}\n      onClick={() => setSelectedDashboard(props.index)}\n    >\n      <Link className=\"add-container\" to=\"/\">\n        {props.children}\n      </Link>\n      <div className=\"placeholder-footer\">\n        <PlaceholderTitle {...props} />\n        <div className=\"placeholder-edit-options\">\n          <div\n            className=\"fa fa-pencil\"\n            id=\"placeholder-edit\"\n            aria-hidden=\"true\"\n            onClick={() => props.setEditingDashboardTitle(true)}\n          />\n          <div\n            className=\"fa fa-trash-o\"\n            id=\"placeholder-delete\"\n            aria-hidden=\"true\"\n            onClick={onDeletePress}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { items, editingTitle, selectedDashboard } = state.dashboards\n  return { items, editingTitle, selectedDashboard }\n}\nexport default connect(mapStateToProps, {\n  setSelectedDashboard,\n  setEditingDashboardTitle,\n  editDashboardTitle,\n})(DashboardPlaceholder)\n","import {\r\n  createDashboard,\r\n  deleteDashboard,\r\n  fetchDashboards,\r\n  setDashboardsItems,\r\n  setTitleInput,\r\n} from 'actions'\r\nimport Modal from 'components/Modal'\r\nimport React, { Component } from 'react'\r\nimport ReactGridLayout from 'react-grid-layout'\r\nimport { connect } from 'react-redux'\r\nimport DashboardAddButton from './DashboardAddButton'\r\nimport DashboardCreateForm from './DashboardCreateForm'\r\nimport DashboardPlaceholder from './DashboardPlaceholder'\r\nimport DashboardsConfirmDeleteModal from './DashboardsConfirmDeleteModal'\r\n\r\nconst drawLayout = (items) =>\r\n  items.map((item, index) => ({\r\n    i: item.id,\r\n    x: (index % 3) * 3,\r\n    y: parseInt(index / 3, 10) * 2,\r\n    w: 3,\r\n    h: 2,\r\n    static: true, // index === 0\r\n  }))\r\n\r\nclass Dashboards extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      layout: [],\r\n      modalIsOpen: false,\r\n      confirmDeleteModalIsOpen: false,\r\n    }\r\n    this.addDashboard = this.addDashboard.bind(this)\r\n    this.onLayoutChange = this.onLayoutChange.bind(this)\r\n    this.sortItems = this.sortItems.bind(this)\r\n    this.hideModal = this.hideModal.bind(this)\r\n    this.showModal = this.showModal.bind(this)\r\n    this.onCreateSubmit = this.onCreateSubmit.bind(this)\r\n    this.hideConfirmDeleteModal = this.hideConfirmDeleteModal.bind(this)\r\n    this.showConfirmDeleteModal = this.showConfirmDeleteModal.bind(this)\r\n    this.onDeleteSubmit = this.onDeleteSubmit.bind(this)\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.fetchDashboards()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ layout: drawLayout(this.props.items) })\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    this.setState({ layout: drawLayout(nextProps.items) })\r\n  }\r\n\r\n  onLayoutChange(layout) {\r\n    this.sortItems(layout)\r\n  }\r\n\r\n  showModal() {\r\n    this.setState({ modalIsOpen: true })\r\n  }\r\n\r\n  showConfirmDeleteModal() {\r\n    this.setState({ confirmDeleteModalIsOpen: true })\r\n  }\r\n\r\n  hideModal() {\r\n    this.setState({ modalIsOpen: false })\r\n  }\r\n\r\n  hideConfirmDeleteModal() {\r\n    this.setState({ confirmDeleteModalIsOpen: false })\r\n  }\r\n\r\n  onDeleteSubmit() {\r\n    const { id } = this.props.items[this.props.selectedDashboard]\r\n    this.hideConfirmDeleteModal()\r\n    this.props.deleteDashboard(id)\r\n  }\r\n\r\n  onCreateSubmit() {\r\n    this.hideModal()\r\n    this.addDashboard()\r\n  }\r\n\r\n  sortItems(layout) {\r\n    this.setState({ layout })\r\n  }\r\n\r\n  addDashboard() {\r\n    this.props.createDashboard(this.props.titleInput)\r\n  }\r\n\r\n  createElement(el, index) {\r\n    const { title, id } = this.props.items[index + 1]\r\n    return (\r\n      <DashboardPlaceholder\r\n        title={title}\r\n        key={id}\r\n        index={index + 1}\r\n        onDeletePress={this.showConfirmDeleteModal}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactGridLayout\r\n          layout={this.state.layout}\r\n          onLayoutChange={this.onLayoutChange}\r\n          style={styles.container}\r\n          className=\"layout\"\r\n          rowHeight={100}\r\n          width={1200}\r\n          isResizable={false}\r\n          draggableCancel=\"input,textarea\"\r\n        >\r\n          <DashboardAddButton\r\n            title=\"Create A Dashboard\"\r\n            key=\"add\"\r\n            onClick={this.showModal}\r\n          >\r\n            <div className=\"fa fa-plus fa-lg\" id=\"add\" />\r\n          </DashboardAddButton>\r\n          {this.props.items\r\n            .slice(1)\r\n            .map((el, index) => this.createElement(el, index))}\r\n        </ReactGridLayout>\r\n\r\n        <Modal\r\n          show={this.state.modalIsOpen}\r\n          onClose={this.hideModal}\r\n          onSubmit={this.onCreateSubmit}\r\n          title=\"Create a dashboard\"\r\n          primaryActionText=\"Create\"\r\n          secondaryActionText=\"Nevermind\"\r\n        >\r\n          <DashboardCreateForm\r\n            onInputChange={this.props.setTitleInput}\r\n            inputValue={this.props.titleInput}\r\n            onSubmit={this.onCreateSubmit}\r\n          />\r\n        </Modal>\r\n\r\n        <DashboardsConfirmDeleteModal\r\n          show={this.state.confirmDeleteModalIsOpen}\r\n          onClose={this.hideConfirmDeleteModal}\r\n          onSubmit={this.onDeleteSubmit}\r\n          primaryActionText=\"Do It\"\r\n          secondaryActionText=\"Don't You Dare\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nDashboards.defaultProps = {\r\n  className: 'layout',\r\n  cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\r\n  rowHeight: 100,\r\n}\r\nconst styles = {\r\n  container: {\r\n    height: '90vh',\r\n    overflowY: 'scroll',\r\n  },\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, titleInput, selectedDashboard } = state.dashboards\r\n\r\n  return { items, titleInput, selectedDashboard }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  setDashboardsItems,\r\n  setTitleInput,\r\n  deleteDashboard,\r\n  fetchDashboards,\r\n  createDashboard,\r\n})(Dashboards)\r\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport 'styles/DashboardsConfirmDeleteModal.css'\nimport Modal from 'components/Modal'\n// import 'styles/DashboardCreateForm.css'\n\nclass DashboardsConfirmDeleteModal extends React.Component {\n  render() {\n    return (\n      <Modal\n        onSubmit={this.props.onSubmit}\n        onClose={this.props.onClose}\n        show={this.props.show}\n        primaryActionText={this.props.primaryActionText}\n        secondaryActionText={this.props.secondaryActionText}\n        title=\"Delete This Dashboard\"\n        primaryButtonClass=\"btn-danger\"\n      >\n        <div className=\"dashboards-confirm-delete-message\">Are you sure?</div>\n      </Modal>\n    )\n  }\n}\n\nDashboardsConfirmDeleteModal.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n}\n\nexport default DashboardsConfirmDeleteModal\n","import CryptoJS from 'crypto-js'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { restoreState } from 'actions'\nimport WidgetSwitch from './WidgetSwitch'\n\nconst widgetTitles = {\n  vendor_spend: 'Vendor Spend',\n  ap_spend: 'Ap Spend',\n  cost: 'Cost of Sales',\n  four_r: 'Four R',\n}\n\nclass PrintWidget extends Component {\n  componentDidMount() {\n    setTimeout(() => {\n      window.print()\n      localStorage.removeItem('zaru-widgets')\n    }, 2000)\n  }\n\n  render() {\n    const params = new URLSearchParams(window.location.search)\n    const encryptedState = localStorage.getItem('zaru-widgets')\n    if (_.isEmpty(encryptedState)) return <div />\n    const decryptedBytes = CryptoJS.AES.decrypt(\n      encryptedState,\n      process.env.REACT_APP_SECRET_KEY,\n    )\n    const decryptedText = decryptedBytes.toString(CryptoJS.enc.Utf8)\n    const reduxState = JSON.parse(decryptedText)\n    const widgetId = params.get('widget_id')\n    const widget = this.props.widgets.find((widget) => widget.id === widgetId)\n    if (!_.isEmpty(widget)) {\n      const { startDate, endDate } = this.props.reports\n      document.title = `${widgetTitles[widget.name]} ${moment(startDate).format(\n        'MM-DD-YYYY',\n      )} - ${moment(endDate).format('MM-DD-YYYY')}`\n    }\n\n    if (_.isEmpty(this.props.widgets)) {\n      const { startDate, endDate } = reduxState.reports\n      reduxState.reports.startDate = moment(Date.parse(startDate))\n      reduxState.reports.endDate = moment(Date.parse(endDate))\n      reduxState.widgets.widgets.forEach((widget) => {\n        if (!_.isEmpty(widget.startDate) && !_.isEmpty(widget.endDate)) {\n          widget.startDate = moment(Date.parse(widget.startDate))\n          widget.endDate = moment(Date.parse(widget.endDate))\n        }\n      })\n      this.props.restoreState(reduxState)\n    }\n\n    if (_.isEmpty(widget)) return <div />\n    return <WidgetSwitch widget={widget} fullscreen printView />\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  company: state.company,\n  widgets: state.widgets.widgets,\n  reports: state.reports,\n})\n\nexport default connect(mapStateToProps, { restoreState })(PrintWidget)\n","import React from 'react'\nimport 'styles/SelectorItem.css'\n\nconst SelectorItem = ({ onClick, source, title, type, disabled }) => {\n  const opacity = disabled ? 0.35 : 1\n  const inUse = disabled ? ' (In Use)' : ''\n  return (\n    <div\n      className=\"selector-item-container\"\n      onClick={disabled ? null : () => onClick(type)}\n      style={{ opacity }}\n    >\n      <img className=\"selector-item\" alt=\"selector-item\" src={source} />\n      <div className=\"selector-item-title\">{title + inUse}</div>\n    </div>\n  )\n}\n\nexport default SelectorItem\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addWidgetToDashboard, createWidget } from 'actions'\nimport apSpendWidgetThumbnail from 'assets/images/ap_spend.png'\nimport BudgetVsActualWidgetThumbnail from 'assets/images/budget_vs_actual.png'\nimport costThumbnail from 'assets/images/cost-widget.png'\nimport FourRWidgetThumbnail from 'assets/images/FourRWidget.png'\nimport vendorSpendThumbnail from 'assets/images/vendor_spend.png'\nimport 'styles/SelectorModal.css'\nimport FullScreen from './FullScreen'\nimport SelectorItem from './SelectorItem'\n\nclass SelectorModal extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSelectorItemClick = this.handleSelectorItemClick.bind(this)\n    this.selectorItemDisabled = this.selectorItemDisabled.bind(this)\n  }\n\n  handleSelectorItemClick(type) {\n    this.props.createWidget(type)\n  }\n\n  selectorItemDisabled(type) {\n    const types = this.props.widgets.map((widget) => widget.name)\n    return types.includes(type)\n  }\n\n  render() {\n    return (\n      <FullScreen visible={this.props.visible} close={this.props.close}>\n        <div className=\"selector-container\">\n          <div\n            id=\"close-selector-btn\"\n            onClick={this.props.close}\n            className=\"fa fa-close  fa-lg icon-active\"\n          />\n          <div className=\"selector-title\">\n            Select a widget to add to your dashboard\n          </div>\n          <div className=\"selector-items-container\">\n            <SelectorItem\n              type=\"ap_spend\"\n              title=\"AP Spend\"\n              source={apSpendWidgetThumbnail}\n              onClick={this.handleSelectorItemClick}\n              disabled={this.selectorItemDisabled('ap_spend')}\n            />\n            <SelectorItem\n              type=\"vendor_spend\"\n              title=\"Vendor Spend\"\n              source={vendorSpendThumbnail}\n              onClick={this.handleSelectorItemClick}\n              disabled={this.selectorItemDisabled('vendor_spend')}\n            />\n            <SelectorItem\n              type=\"cost\"\n              title=\"Cost of Sales\"\n              source={costThumbnail}\n              onClick={this.handleSelectorItemClick}\n              disabled={this.selectorItemDisabled('cost')}\n            />\n            <SelectorItem\n              type=\"four_r\"\n              title=\"4R\"\n              source={FourRWidgetThumbnail}\n              onClick={this.handleSelectorItemClick}\n              disabled={this.selectorItemDisabled('four_r')}\n            />\n            <SelectorItem\n              type=\"budget_vs_actual\"\n              title=\"Budget vs. Actual\"\n              source={BudgetVsActualWidgetThumbnail}\n              onClick={this.handleSelectorItemClick}\n              disabled={this.selectorItemDisabled('budget_vs_actual')}\n            />\n          </div>\n        </div>\n      </FullScreen>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({ widgets: state.widgets.widgets })\n\nexport default connect(mapStateToProps, { addWidgetToDashboard, createWidget })(\n  SelectorModal,\n)\n","import React, { Component } from 'react'\nimport APSpendWidget from './ap_spend/APSpendWidget'\nimport BudgetVsActualWidget from './budget_vs_actual/BudgetVsActualWidget'\nimport CostWidget from './cost/CostWidget'\nimport FourRWidget from './four_r/FourRWidget'\nimport VendorWidget from './vendor_spend/VendorWidget'\n\nclass WidgetSwitch extends Component {\n  render() {\n    const { widget, onCompressClick, admin, onExpandClick, printView } =\n      this.props\n    const commonProps = {\n      fullscreen: true,\n      onCompressClick,\n      admin,\n      key: widget.id,\n      onExpandClick,\n      id: widget.id,\n      printView,\n    }\n\n    switch (widget.name) {\n      case 'vendor_spend':\n        return <VendorWidget {...commonProps} />\n      case 'ap_spend':\n        return <APSpendWidget {...commonProps} />\n      case 'cost':\n        return <CostWidget {...commonProps} />\n      case 'four_r':\n        return <FourRWidget {...commonProps} />\n      case 'budget_vs_actual':\n        return <BudgetVsActualWidget {...commonProps} />\n      default:\n        return <APSpendWidget {...commonProps} />\n    }\n  }\n}\n\nWidgetSwitch.defaultProps = {\n  fullscreen: false,\n  onExpandClick: () => null,\n  onCompressClick: () => null,\n  admin: false,\n  printView: false,\n}\n\nexport default WidgetSwitch\n","import React from 'react'\nimport 'styles/MockIframe.css'\n\nconst MockIframe = () => (\n  <div className=\"mock-iframe-container\">\n    <div className=\"mock-topbar\" />\n    <div className=\"mock-body\">\n      <div className=\"mock-sidebar\" />\n      <iframe\n        title=\"test-iframe\"\n        className=\"mock-iframe\"\n        src=\"http://localhost:3001?user_id=370&unit_id=4071\"\n      />\n    </div>\n  </div>\n)\n\nexport default MockIframe\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchLocations } from 'actions'\nimport 'styles/StaticDashboard.css'\nimport DashboardGrid from 'zaruDashboard/DashboardGrid'\nimport SideBar from 'zaruDashboard/SideBar'\nimport StartAndEndDatePicker from 'zaruDashboard/StartAndEndDatePicker'\n\nclass StaticDashboard extends Component {\n  render() {\n    const { id } = this.props.match.params\n    return (\n      <div className=\"static-dashboard\">\n        <SideBar />\n        <div className=\"static-main flex\">\n          <StartAndEndDatePicker />\n          <DashboardGrid dashboardId={id} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { fetchLocations })(StaticDashboard)\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { authorize, fetchLocations } from 'actions'\nimport 'styles/ZaruDashboard.css'\nimport Dashboard from 'zaruDashboard/Dashboard'\nimport Dashboards from 'zaruDashboard/Dashboards'\nimport PrintWidget from 'zaruDashboard/PrintWidget'\nimport SelectorModal from 'zaruDashboard/SelectorModal'\nimport SideBar from 'zaruDashboard/SideBar'\nimport LoadingIndicator from 'components/LoadingIndicator'\n\nclass ZaruDashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { selectorModalOpen: false }\n  }\n\n  UNSAFE_componentWillUpdate(nextProps) {\n    const { widgets, didFetch } = nextProps.widgets\n    if (_.isEmpty(widgets) && didFetch && !this.state.selectorModalOpen) {\n      this.setState({ selectorModalOpen: true })\n    }\n  }\n\n  render() {\n    const { selectorModalOpen } = this.state\n    const params = new URLSearchParams(window.location.search)\n    if (params.get('print_widget')) return <PrintWidget />\n    return (\n      <div className=\"main-wrap\">\n        <div className=\"main-container\">\n          <div className=\"spinner-overlay\">\n            <LoadingIndicator isLoading={this.props.isDataFetching} />\n          </div>\n          <SelectorModal\n            visible={selectorModalOpen}\n            close={() => this.setState({ selectorModalOpen: false })}\n          />\n          <SideBar\n            openSelector={() => this.setState({ selectorModalOpen: true })}\n          />\n          <Route exact path=\"/zarudashboard\" component={Dashboard} />\n          <Route\n            exact\n            path=\"/zarudashboard/dashboards\"\n            component={Dashboards}\n          />\n          <Route\n            exact\n            path=\"/zarudashboard/dashboards/:id\"\n            component={Dashboard}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { isDataFetching } = state.dashboards\n\n  return { widgets: state.widgets, isDataFetching }\n}\n\nexport default connect(mapStateToProps, { fetchLocations, authorize })(\n  ZaruDashboard,\n)\n","export default __webpack_public_path__ + \"images/FourRWidget.png\";","export default __webpack_public_path__ + \"images/ap_spend.png\";","export default __webpack_public_path__ + \"images/budget_vs_actual.png\";","export default __webpack_public_path__ + \"images/cost-widget.png\";","export default __webpack_public_path__ + \"images/vendor_spend.png\";"],"sourceRoot":""}