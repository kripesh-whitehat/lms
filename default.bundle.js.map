{"version":3,"sources":["webpack://webpack-app/./src/actions/APSpendActions.js","webpack://webpack-app/./src/actions/BudgetVsActualActions.js","webpack://webpack-app/./src/actions/CogsActions.js","webpack://webpack-app/./src/actions/FourRActions.js","webpack://webpack-app/./src/actions/WidgetSettingsActions.js","webpack://webpack-app/./src/components/LoadingIndicator.js","webpack://webpack-app/./src/components/zaruDashboard/BreadCrumbs.js","webpack://webpack-app/./src/components/zaruDashboard/Chart.js","webpack://webpack-app/./src/components/zaruDashboard/ChartWrapper.jsx","webpack://webpack-app/./src/components/zaruDashboard/DashboardGrid.js","webpack://webpack-app/./src/components/zaruDashboard/DownloadCSV.js","webpack://webpack-app/./src/components/zaruDashboard/FullScreen.js","webpack://webpack-app/./src/components/zaruDashboard/InvoiceDateToggle.js","webpack://webpack-app/./src/components/zaruDashboard/LocationPicker.jsx","webpack://webpack-app/./src/components/zaruDashboard/SideBar.jsx","webpack://webpack-app/./src/components/zaruDashboard/StartAndEndDatePicker.jsx","webpack://webpack-app/./src/components/zaruDashboard/Stats.jsx","webpack://webpack-app/./src/components/zaruDashboard/Table.js","webpack://webpack-app/./src/components/zaruDashboard/Widget.js","webpack://webpack-app/./src/components/zaruDashboard/Wrapper.js","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/APSpendWidget.js","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/AggregateItemsSpendContainer.js","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/AggregateItemsSpendTable.js","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/GlSubcategorySpendChart.js","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/ItemDataTable.jsx","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/ItemTrendChart.jsx","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/ItemTrendChartByDate.jsx","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/MultiLocationSpendChart.js","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/RegionSpendChart.jsx","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/VendorByGLLocationChart.js","webpack://webpack-app/./src/components/zaruDashboard/ap_spend/VendorSpendChart.js","webpack://webpack-app/./src/components/zaruDashboard/budget_vs_actual/BudgetHeader.js","webpack://webpack-app/./src/components/zaruDashboard/budget_vs_actual/BudgetVsActualWidget.js","webpack://webpack-app/./src/components/zaruDashboard/budget_vs_actual/CompanyChart.js","webpack://webpack-app/./src/components/zaruDashboard/budget_vs_actual/DivisionsChart.js","webpack://webpack-app/./src/components/zaruDashboard/budget_vs_actual/UnitsChart.js","webpack://webpack-app/./src/components/zaruDashboard/cost/APSpendTable.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsAcrossUnit.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsAcrossUnitPieChart.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsAcrossUnitTable.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsAcrossUnitTabularGroup.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsAcrossUnitTrend.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsAcrossUnitTrendGroup.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsItemUsageTable.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsItemUsageTabular.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsItemUsageTrend.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsReport.js","webpack://webpack-app/./src/components/zaruDashboard/cost/CogsTable.js","webpack://webpack-app/./src/components/zaruDashboard/cost/CostAcrossCompanyChart.js","webpack://webpack-app/./src/components/zaruDashboard/cost/CostAcrossUnitsChart.js","webpack://webpack-app/./src/components/zaruDashboard/cost/CostByCategoryChart.js","webpack://webpack-app/./src/components/zaruDashboard/cost/CostWidget.js","webpack://webpack-app/./src/components/zaruDashboard/cost/GLDataTable.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/InventoryCountsContainer.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/InventoryCountsTable.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/InvoicesByItem.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/InvoicesTable.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/ItemDataTable.jsx","webpack://webpack-app/./src/components/zaruDashboard/cost/TrendChart.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/BarChart.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/BubbleChart.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/BubbleChartWrapper.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/FourRMenuRecipeByTypeCompany.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/FourRTable.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/FourRWidget.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/RecipeTypeSelect.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/Select.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/TrendChart.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/UnitTrendTable.js","webpack://webpack-app/./src/components/zaruDashboard/four_r/UnitsBarChart.js","webpack://webpack-app/./src/components/zaruDashboard/vendor_spend/GlSpend.js","webpack://webpack-app/./src/components/zaruDashboard/vendor_spend/InvoiceTable.js","webpack://webpack-app/./src/components/zaruDashboard/vendor_spend/MultiUnitVendorSpend.js","webpack://webpack-app/./src/components/zaruDashboard/vendor_spend/SpendByUnit.jsx","webpack://webpack-app/./src/components/zaruDashboard/vendor_spend/SpendByWeek.js","webpack://webpack-app/./src/components/zaruDashboard/vendor_spend/VendorWidget.js","webpack://webpack-app/./src/assets/images/rsi-logo.jpeg","webpack://webpack-app/./node_modules/moment/locale|sync|/ja|it"],"names":["setDefaultTrendBy","trendBy","type","SET_DEFAULT_TREND_BY","setTotalBudgetAmount","budgetedAmount","SET_TOTAL_BUDGET_AMOUNT","fetchTrendUnitGroupByGl","params","FETCH_TREND_UNIT_GROUP_BY_GL","setGlFilters","glFilters","SET_GL_FILTERS","updateGLFilters","glFilter","isChecked","UPDATE_GL_FILTERS","selectAllGLFilters","SELECT_ALL_GL_FILTERS","fetchItemGL","glName","glCode","updateDataOnly","byInvoiceDate","FETCH_ITEM_GL","itemSelectAll","SELECT_ALL_ITEMS","switchToSingleGL","SWITCH_TO_SINGLE_GL","switchChartType","chartType","SWITCH_CHART_TYPE","fetchInventoryItemLoc","startDate","unitInventoryItemId","FETCH_ITEM_INV_LOC","fetchInvoicesGL","FETCH_INVOICES_GL","setItems","itemsTid","SET_ITEMS_TID","updateItemCheckbox","itemTid","UPDATE_ITEM_TID","fetchInvoicesByItem","FETCH_INVOICES_BY_ITEM","setItemsUsageDisplay","displayType","SET_ITEMS_USAGE_DISPLAY","setSelectedRecipes","selectedRecipes","SET_SELECTED_RECIPES","updatedSelectedRecipes","recipeId","checked","UPDATE_SELECTED_RECIPES","setByInvoiceDate","widgetName","SET_BY_INVOICE_DATE","LoadingIndicator","display","isLoading","className","style","name","color","id","defaultProps","BreadCrumbs","props","mapHistory","bind","handleClick","history","this","slice","map","step","index","content","breadcrumb","String","replace","toUpperCase","length","key","Math","random","onClick","event","preventDefault","widgetId","printView","setChartType","sliceHistory","Component","connect","Chart","state","chartId","handleDataClick","updateCategories","updatePlotLines","updateFourRBubbleChart","barXAxisConfig","config","modules","theme","HighchartsMore","Highcharts","forEach","module","colors","chart","backgroundColor","fontFamily","animation","duration","title","fontSize","fontWeight","textTransform","xAxis","gridLineWidth","yAxis","minorTickInterval","labels","plotOptions","candlestick","lineColor","background2","plotOptionSeries","point","events","click","getSize","width","height","configWithSize","series","onDataClick","categories","setCategories","fullscreen","highchartsType","_","commonAtts","whiteSpace","force","formatter","value","substring","maxChars","axis","plotLines","options","label","text","update","newSeries","remove","addSeries","drilldown","widgetHeight","widgetWidth","widthRatio","heightRatio","fullscreenHeightRatio","elements","document","getElementsByClassName","element","offsetWidth","offsetHeight","setSize","prevProps","setDimensions","redraw","updateSeries","setTitle","updateDrilldown","ChartWrapper","dataIsPresent","emptyDataMessage","reports","is_bubble","message","errors","DashboardGrid","widget","fullscreenOpen","mapWidgets","handleLayoutChange","getWidget","widgetsToLayout","layoutToWidgets","onExpandClick","onCompressClick","nextProps","company","token","fetchDashboards","dashboardId","widgets","filter","w","x","y","h","i","layout","layoutItem","find","fullscreenProps","admin","setState","setDashboardState","activeWidget","updatedInFullscreen","connectDropTarget","locations","styles","container","cols","rowHeight","draggableCancel","onLayoutChange","isDraggable","isResizable","widgetContainer","visible","close","overflowY","isStatic","propTypes","PropTypes","flow","DropTarget","drop","monitor","dropTarget","isOver","canDrop","dashboard","fetchDashboard","updateWidgets","isReactTable","exportReactTable","tableSelector","fileName","exportTableToCSV","downloadToCSV","FullScreen","_handleKeyDown","e","code","addEventListener","removeEventListener","sidebarOpen","children","React","primaryButtonClass","InvoiceDateToggle","target","isInvoiceDateToggle","widget_settings","inputGroupName","onChange","handleDateToggleChange","defaultChecked","htmlFor","LocationPicker","handleRegionCheckboxChange","setReduxLocations","locations_by_region","buildState","currentState","Object","entries","loc","setLocations","nextState","l","region","values","initialState","division_id","location","unit_id","checkRegions","handleLocationCheckboxChange","mapLocations","mapLocationsByRegion","fetchLocations","Sidebar","hovering","onSetSidebarToggle","offHover","onHover","collapseClass","iconColor","onMouseLeave","onMouseEnter","openSelector","disabled","allowedFormats","currentYear","moment","format","StartAndEndDatePicker","handleKeyPress","handleBlur","handleDayPickerHide","fetchCalendarRanges","handleRangeChange","handleRangeStartDateChange","handleRangeEndDateChange","handleYearChange","mapDates","mapYears","year","unitIds","selectedUnits","fetchDates","attribute","setFetching","Date","relatedTarget","getAttribute","fieldValue","date","isValid","setGlobalReportAttribute","typedValue","getInput","blur","toDate","focus","currentRange","calendarRanges","setCompanyData","startRange","endRange","isBefore","range","StartDate","EndDate","endDate","isAfter","yearChanged","selectedYear","numYears","Number","Array","keys","diff","ranges","displayHash","week","WeekNumber","periodAndDate","PeriodNumber","displayDate","undefined","formatDate","parseDate","parseDay","ref","el","onDayPickerHide","placeholder","inputProps","onKeyPress","onBlur","handleIconClick","computeStats","ratesAndDates","mean","sum","min","max","change","totalQuantity","rates","parseFloat","rate","amounts","qty","sortedRates","sort","a","b","reduce","total","stats","formatIntoDollars","getColorPosOrNeg","formatPercent","Table","rowInfo","data","columns","subComponent","error","filterable","showPagination","defaultPageSize","SubComponent","defaultSorted","getTrProps","column","instance","Widget","settingsVisible","toggleSettingsVisible","dataIsAvailable","renderChildrenWhenLoaded","printDocument","shouldFetch","fetchReport","urlParams","isNotFetching","reduxState","JSON","stringify","encryptedState","CryptoJS","process","toString","localStorage","setItem","window","open","cogsIsLoading","fetchingData","showDatesCanvas","dates","displayDates","datesStyle","containerClass","headerClass","querySelectorAll","button","group_name","selectedDivisions","division","split","destroyWidget","iconRef","src","Watermark","alt","showDates","cogs","setDrilldownIndex","match","join","pixelsFromString","dimensions","childrenWithProps","child","contextRoutes","ap_divisions_spend","ap_location_spend","gl_subcategory_spend","aggregate_item_spend","item_trend_report","item_stats_table","vendor_spend_chart","APSpendWidget","renderChart","wrapChart","getChart","handleRegionSpendChartClick","handleMultiLocationClick","handleWeeklySpendClick","handleGLSpendClick","handleAggregateItemsSpendTableClick","handleItemTrendClick","getDateParams","toggleChart","handleVendorSpendClick","fetchApDivisionsSpend","goToRegionSpendChart","goToInvoicesByVendorGL","invoicesByVendorGlParams","goToInitialChart","fetchInitialChart","byInvoiceDateChanged","lastActiveWidgetId","fullscreenDidClose","drillUp","dateChanged","locationsChanged","chartTypeChanged","intitialChartType","setWidgetState","addReport","aggItemsParams","divisions","allDivisions","pushHistory","regionSpendChartParams","userId","group_id","includes","locationSpendParams","glSpendParams","itemTrendParams","agg_report","category","divisionName","marginBottom","item_name","gl_code","gl_name","vendor_name","vendor_id","ap_vendor_by_gl_location","vendor","setTimeout","user_id","unit_ids","division_name","idx","findIndex","r","setReportAttribute","gl","gl_spend","original","inventory_item_id","imageLink","items","ap_spend","toLowerCase","margin","AggregateItemsSpendTable","parseTableData","d","product_id","product_name","pack_size","item_rate","item_spend","total_spend","percent_change","price_change","Header","accessor","Cell","textAlign","row","getChartData","report","dataIsEmpty","subtitle","pie","dataLabels","enabled","tooltip","colorByPoint","subcat","gl_amount","APSpendDrilldownGlSubcategorySpendChart","dateStr","trend_by","dataMap","item","totalSpend","submittedDate","href","asc","ItemTrendChart","byDate","parse","queryKey","average","numItems","total_qty","total_rate","isAverage","downloadName","generateItems","updateChart","itemTrendChartByDate","legend","line","marker","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","align","verticalAlign","points","averageText","toolTip","toFixed","shared","useHTML","xDateFormat","APSpendDrilldownMultiLocationSpendChart","calculateSum","vendor_hash_data","parseData","unitData","unit","unit_name","overflow","valueSuffix","valuePrefix","bar","allowOverlap","credits","RegionSpendChart","sortedDivisions","sortDivisions","div","amount","buildConfig","vendors","round","percentage","APVendorByGLLocationChart","VendorSpendChart","BudgetHeader","handleBudgetChange","initialBudget","budget","rawValue","totalBudget","selected_gls","Details","parseInt","Id","budgetedAmounts","TotalSalesBudgetedPercent","acc","curr","Budget","SpentAmount","budgetedSpend","spent","Sales","thumbnailId","variancePercent","spendingVariance","varianceClass","numeral","prefix","signBeforePrefix","rawValueTrimPrefix","numeralDecimalScale","CostWidget","handleGlClick","handleDivisionClick","handleUnitsClick","handleVendorClick","selectedGls","budgetVsActualParams","byDivisonsParams","byUnitsParams","chartTypeSplit","isTable","totalBudgetAmount","budget_vs_actual_company","Description","budget_vs_actual_divisions","budget_vs_actual_units","divisionId","unitId","dateParams","vendorId","units","description","unitName","initialReport","selectDisplay","displayHeader","marginLeft","marginRight","isMulti","budget_vs_actual","CompanyChart","calcBudgetedAmount","abs","that","reversedStacks","budgetAmount","getBudgetAmount","BudgetedPercent","stacking","states","inactive","generateSeries","filteredData","budgetVsActual","DivisionsChart","details","UnitsChart","APSpendTable","invoicesGL","cost_of_goods_gl_invoices","cost","CogsAcrossUnit","switchChart","fetchData","handleFetchOnMount","getFetching","widget_id","renderUnitChart","cogsAcrossUnitChartType","CogsAcrossUnitPieChart","handlePieChartClick","percent","previousUnitId","CogsAcrossUnitTable","handleCheckboxChange","handleGLClick","handleInputClick","navigateToAPSpend","handleSelectAll","inputLastClick","currentTarget","setGLs","shiftKey","selectAll","sortable","beg_inv","purchases","end_inv","glFilterSelectAll","CogsAcrossUnitTabularGroup","cost_trend_unit_group_by_gl","seriesMap","group_gl_code","starting_week","ending_week","add","startOf","UTC","month","usage","isVisible","showInLegend","pointInterval","glMap","s","marginTop","float","formatName","currentGL","isFetching","CogsAcrossUnitTrend","prevState","updateData","cogsItemUsageDisplay","renderDisplay","currentCogsItemGLCode","currentCogsItemGL","floatValue","CogsAcrossUnitTrendGroup","updateDisplay","selSeries","userOptions","cogsAcrossUnitTrendGroup","startOfWeek","tickInterval","tickmarkPlacement","itemStyle","cursor","itemHoverStyle","pointIntervalUnit","legendItemClick","setDisplay","CogsItemUsageTable","handleCheckBoxClick","navigateToInvoicesByItem","navigateToInventoryCountsTable","beginning","ending","purchasesQty","countingUnit","averageDollar","begInv","begInvQty","endInv","endInvQty","averageBeginning","calculateAverage","averageEnding","itemIds","item_level_trend","tId","itemName","itemId","startingPoint","periodData","sortedData","valueOf","unit_inventory_item_id","items_select_all","beg_inv_quantity","purchase_quantity","end_inv_quantity","t_id","counting_unit","usage_qty","calculateUsage","average_dollar","calculateAverageFromBE","calculateAverageDollar","roundTwo","desc","CogsItemUsageTabular","pd","dateToUTC","CogsItemUsageTrend","currentItemTid","tid","itemUsageTrend","generateLabel","price","toLocaleLowerCase","biLabel","piLabel","eiLabel","usageLabel","clickable","CogsReport","CogsTable","formatData","invoice","minWidth","MultiUnitVendorSpend","cost_across_units","cost_across_company_by_category","fetchChartData","handleCostAcrossCompanyClick","handleCostByCategoryClick","handleCostAcrossUnitsClick","costByCategoryParams","toggleDivisionChart","unitIdsByDivision","fetchCostAcrossUnits","fetchCogsAcrossUnit","setCostDates","costAcrossCompanyParams","costDatesInvalid","isNaN","costAcrossUnitsParams","costTrendDivisionParams","glParams","glUnitParams","byDivision","formattedCategory","encodeURIComponent","cost_across_company","show_trend","toggleCompanyByCatChart","cogs_across_unit","toggleBack","cost_trend_across_company","cost_trend_across_division","cost_trend_gl_unit","cogs_across_company","cogs_across_division","u","toRow","val","bi","ei","cost_percent","InventoryCountsContainer","navigateBack","invoices_by_item","InventoryCountsTable","item_inventory_level_by_location","inv_location","itemPrice","InvoicesByItem","invoiceNumber","invoiceDate","checkNumber","checkDate","InvoicesTable","defaultSort","getTime","invDate","qty_dollar","handleRadioChange","isDollar","pointFormat","FourRBarChart","selected","handleSelect","reportData","DivisionName","marginPercent","costPercent","percentType","Recipe","GrossPrice","Value","DivisionId","MarginPercent","FormattedValue","FoodCostPercent","Impact","NetCost","annotations","BubbleChart","buildData","zeroBubble","recipe","QuantitySold","z","Name","CorporateRecipeId","xAverage","yAverage","unshift","enableMouseTracking","seriesData","plotBorderWidth","zoomType","dashStyle","rotation","fontStyle","zIndex","startOnTick","endOnTick","lineWidth","minorGridLineWidth","minorTickLength","tickLength","maxPadding","headerFormat","footerFormat","bubble","minSize","maxSize","renderBubbleChart","FourRMenuRecipeByTypeCompany","initialSelectedRecipes","handleRecipeTypeSelect","byCompanyClick","onRecipeSelectAll","recipeTypes","menu_recipe_types","selectedTypeId","selectAllChecked","fourRTableSelectAllChecked","onCellClick","four_r","FourRTable","handleRecipeChange","canSelectAllBeChecked","every","FourRWidget","byCompanyParams","byDivisionParams","companyReportSuccess","byDivisionsClick","byUnitsClick","trendParams","showCompanyTrendClick","showDivisionTrendClick","companyRecipeIndex","RecipeTypes","recipeType","RecipeTypeId","mapSelectedRecipes","Recipes","recipes","thisCompanyReport","nextCompanyReport","payload","recipeName","handleOneUnitSelected","handleOneDivisionSelected","recipeIdParam","console","log","CorporateRecipeUsageTypeID","alignSelf","option","crosshair","opposite","TrendChart","UnitTrendTable","PurchasePrice","MarginDollars","UnitName","UnitId","re","RegExp","fromByUnitChart","GlSpend","fromByUnit","StatsByLocationPerItemTable","invoices_by_vendor_gl","url","select","handleSelectChange","numVendors","defaultValue","vendor_spend","SpendByUnit","SpendByWeek","weeks","complete","top_vendor_spend_by_company","vendor_spend_by_week","VendorWidget","handleMultiUnitClick","handleByUnitClick","handleByWeekClick","multiUnitParams","byUnitParams","byWeekParams","invoicesParams","startWeek","endWeek","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","resolve","exports"],"mappings":"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","file":"default.bundle.js","sourcesContent":["import { SET_DEFAULT_TREND_BY } from './types'\nexport const setDefaultTrendBy = (trendBy) => ({\n  type: SET_DEFAULT_TREND_BY,\n  trendBy,\n})\n","import { SET_TOTAL_BUDGET_AMOUNT } from './types'\n\nexport const setTotalBudgetAmount = (budgetedAmount) => ({\n  type: SET_TOTAL_BUDGET_AMOUNT,\n  budgetedAmount,\n})\n","import {\n  FETCH_TREND_UNIT_GROUP_BY_GL,\n  SET_GL_FILTERS,\n  UPDATE_GL_FILTERS,\n  FETCH_ITEM_GL,\n  SWITCH_TO_SINGLE_GL,\n  SWITCH_CHART_TYPE,\n  FETCH_ITEM_INV_LOC,\n  FETCH_INVOICES_GL,\n  SET_ITEMS_TID,\n  UPDATE_ITEM_TID,\n  SELECT_ALL_GL_FILTERS,\n  SELECT_ALL_ITEMS,\n  FETCH_INVOICES_BY_ITEM,\n  SET_ITEMS_USAGE_DISPLAY,\n} from './types'\n\nexport const fetchTrendUnitGroupByGl = (params) => ({\n  type: FETCH_TREND_UNIT_GROUP_BY_GL,\n  params,\n})\nexport const setGlFilters = (glFilters) => ({ type: SET_GL_FILTERS, glFilters })\nexport const updateGLFilters = (glFilter, isChecked) => ({\n  type: UPDATE_GL_FILTERS,\n  glFilter,\n  isChecked,\n})\nexport const selectAllGLFilters = (isChecked) => ({\n  type: SELECT_ALL_GL_FILTERS,\n  isChecked,\n})\nexport const fetchItemGL = (\n  glName,\n  glCode,\n  updateDataOnly = false,\n  byInvoiceDate = false,\n) => ({ type: FETCH_ITEM_GL, glName, glCode, updateDataOnly, byInvoiceDate })\nexport const itemSelectAll = (isChecked) => ({\n  type: SELECT_ALL_ITEMS,\n  isChecked,\n})\nexport const switchToSingleGL = (glName) => ({\n  type: SWITCH_TO_SINGLE_GL,\n  glName,\n})\nexport const switchChartType = (chartType) => ({\n  type: SWITCH_CHART_TYPE,\n  chartType,\n})\nexport const fetchInventoryItemLoc = (\n  startDate,\n  unitInventoryItemId,\n  byInvoiceDate = false,\n) => ({\n  type: FETCH_ITEM_INV_LOC,\n  startDate,\n  unitInventoryItemId,\n  byInvoiceDate,\n})\nexport const fetchInvoicesGL = (glCode, byInvoiceDate = false) => ({\n  type: FETCH_INVOICES_GL,\n  glCode,\n  byInvoiceDate,\n})\nexport const setItems = (itemsTid) => ({ type: SET_ITEMS_TID, itemsTid })\nexport const updateItemCheckbox = (itemTid, isChecked) => ({\n  type: UPDATE_ITEM_TID,\n  itemTid,\n  isChecked,\n})\nexport const fetchInvoicesByItem = (params) => ({\n  type: FETCH_INVOICES_BY_ITEM,\n  params,\n})\nexport const setItemsUsageDisplay = (displayType) => ({\n  type: SET_ITEMS_USAGE_DISPLAY,\n  displayType,\n})\n","import { SET_SELECTED_RECIPES, UPDATE_SELECTED_RECIPES } from './types'\n\nexport const setSelectedRecipes = (selectedRecipes) => ({\n  type: SET_SELECTED_RECIPES,\n  selectedRecipes,\n})\nexport const updatedSelectedRecipes = (recipeId, checked) => ({\n  type: UPDATE_SELECTED_RECIPES,\n  recipeId,\n  checked,\n})\n","import { SET_BY_INVOICE_DATE } from './types'\nexport const setByInvoiceDate = (widgetName, byInvoiceDate) => ({\n  type: SET_BY_INVOICE_DATE,\n  widgetName,\n  byInvoiceDate,\n})\n","import React from 'react'\nimport Spinner from 'react-spinkit'\nimport 'styles/LoadingIndicator.css'\n\nconst LoadingIndicator = ({ isLoading }) => {\n  const display = isLoading ? 'flex' : 'none'\n\n  return (\n    <div className=\"spinner-container\" style={{ display }}>\n      <Spinner name=\"ball-pulse-rise\" color=\"orange\" id=\"spinner\" />\n    </div>\n  )\n}\n\nLoadingIndicator.defaultProps = {\n  isLoading: false,\n}\n\nexport default LoadingIndicator\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setChartType, sliceHistory } from 'actions'\nimport 'styles/BreadCrumbs.css'\n\nclass BreadCrumbs extends Component {\n  constructor(props) {\n    super(props)\n    this.mapHistory = this.mapHistory.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  mapHistory() {\n    // history is an array of objects of chart types and breadcrumbs in redux\n    const { history } = this.props\n    return history.slice().map((step, index) => {\n      const crumb = step.breadcrumb\n        ? String(step.breadcrumb).replace(/_/gi, ' ')\n        : step.chartType\n      const content = crumb.toUpperCase()\n      // set bread crumbs on drilldown\n      if (index === history.length - 1) {\n        return (\n          <div className=\"bread-crumb\" id=\"active\" key={Math.random()}>\n            <a\n              id=\"active\"\n              className=\"bread-crumb-text\"\n              onClick={(event) =>\n                this.handleClick(event, step.chartType, index)\n              }\n            >\n              {content}\n            </a>\n          </div>\n        )\n        // set bread crumbs on drilling back up\n      }\n      return (\n        <div className=\"bread-crumb\" key={Math.random()}>\n          <a\n            className=\"bread-crumb-text\"\n            onClick={(event) => this.handleClick(event, step.chartType, index)}\n          >\n            {content}\n          </a>\n          <div className=\"bread-crumb-arrow\"> {'=>'} </div>\n        </div>\n      )\n    })\n  }\n\n  handleClick(event, chartType, index) {\n    event.preventDefault()\n    const { widgetId, printView } = this.props\n    if (printView) return\n    this.props.setChartType(widgetId, chartType)\n    this.props.sliceHistory(widgetId, index)\n  }\n\n  render() {\n    return <div id=\"bread-crumbs-container\">{this.mapHistory()}</div>\n  }\n}\n\nBreadCrumbs.defaultProps = {\n  history: [],\n}\n\nexport default connect(null, { setChartType, sliceHistory })(BreadCrumbs)\n","import Highcharts from 'highcharts'\nimport HighchartsMore from 'highcharts-more'\nimport _ from 'lodash'\nimport React, { Component } from 'react'\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { display: 'flex', chartId: String(Math.random()) }\n    this.handleDataClick = this.handleDataClick.bind(this)\n    this.updateCategories = this.updateCategories.bind(this)\n    this.updatePlotLines = this.updatePlotLines.bind(this)\n    this.updateFourRBubbleChart = this.updateFourRBubbleChart.bind(this)\n    this.barXAxisConfig = this.barXAxisConfig.bind(this)\n  }\n\n  componentDidMount() {\n    const { config, modules, theme, printView } = this.props\n    HighchartsMore(Highcharts)\n    if (modules) {\n      modules.forEach(function (module) {\n        module(Highcharts)\n      })\n    }\n\n    Highcharts.theme = {\n      colors: theme,\n      chart: {\n        backgroundColor: null,\n        style: {\n          fontFamily: 'Dosis, sans-serif',\n        },\n        animation: printView ? { duration: 100 } : true,\n      },\n      title: {\n        style: {\n          fontSize: '16px',\n          fontWeight: 'bold',\n          textTransform: 'uppercase',\n        },\n      },\n      xAxis: {\n        gridLineWidth: 1,\n      },\n      yAxis: {\n        minorTickInterval: 'auto',\n        title: {\n          style: {\n            textTransform: 'uppercase',\n          },\n        },\n        labels: {\n          style: {\n            fontSize: '12px',\n          },\n        },\n      },\n      plotOptions: {\n        candlestick: {\n          lineColor: '#404048',\n        },\n      },\n\n      background2: 'whitesmoke',\n    }\n\n    // Apply the theme\n    Highcharts.setOptions(Highcharts.theme)\n\n    const plotOptionSeries = {\n      point: { events: { click: this.handleDataClick } },\n    }\n    const { width, height } = this.getSize()\n\n    const configWithSize = {\n      ...config,\n      xAxis: { ...config.xAxis, labels: this.barXAxisConfig() },\n      chart: { ...config.chart, width, height },\n      plotOptions: { ...config.plotOptions, series: plotOptionSeries },\n    }\n    this.chart = new Highcharts.Chart(this.state.chartId, configWithSize)\n  }\n\n  handleDataClick(event) {\n    const { onDataClick, printView } = this.props\n    if (!printView) onDataClick(event)\n  }\n\n  updateCategories(config) {\n    const categoriesPresent = config.xAxis && config.xAxis.categories\n    if (!categoriesPresent) return\n    this.chart.xAxis[0].setCategories(config.xAxis.categories)\n  }\n\n  barXAxisConfig() {\n    const { config, fullscreen } = this.props\n    const highchartsType = _.isEmpty(config.chart) ? null : config.chart.type\n    let commonAtts = { style: { fontSize: '12px', whiteSpace: 'nowrap' } }\n    if (config && config.force && config.xAxis && config.xAxis.labels) {\n      commonAtts = { ...commonAtts, ...config.xAxis.labels }\n    }\n    return highchartsType === 'bar'\n      ? {\n          ...commonAtts,\n          formatter() {\n            if (!(typeof this.value.substring === 'function')) return this.value\n            const maxChars = fullscreen ? 35 : 14\n            if (this.value.length > maxChars) {\n              return `${this.value.substring(0, maxChars)}...`\n            }\n            return this.value\n          },\n        }\n      : commonAtts\n  }\n\n  updatePlotLines(config) {\n    ;['xAxis', 'yAxis'].forEach((axis) => {\n      const plotLinesPresent =\n        config[axis] && config[axis].plotLines && config[axis].plotLines[0]\n      if (plotLinesPresent) {\n        this.chart[axis][0].options.plotLines[0].label.text =\n          config[axis].plotLines[0].label.text\n        this.chart[axis][0].options.plotLines[0].value =\n          config[axis].plotLines[0].value\n        this.chart[axis][0].update()\n      }\n    })\n  }\n\n  updateFourRBubbleChart(newSeries) {\n    while (this.chart.series.length > 0) this.chart.series[0].remove(true)\n    newSeries.forEach((series) => {\n      this.chart.addSeries(series)\n    })\n  }\n\n  updateSeries(newSeries) {\n    if (this.chart.series.length === 0) {\n      newSeries.forEach((series) => {\n        this.chart.addSeries(series)\n      })\n    } else {\n      this.chart.series.forEach((series, index) => {\n        series.update(newSeries[index])\n      })\n    }\n  }\n\n  updateDrilldown(config) {\n    if (this.chart.options.drilldown && config.drilldown) {\n      this.chart.options.drilldown.series = config.drilldown.series\n    }\n  }\n\n  getSize() {\n    const {\n      widgetHeight,\n      widgetWidth,\n      widthRatio,\n      heightRatio,\n      fullscreen,\n      fullscreenHeightRatio,\n      printView,\n    } = this.props\n    if (printView) {\n      return {\n        width: 900,\n        height: heightRatio * 850,\n      }\n    }\n    if (!fullscreen) {\n      return {\n        width: widthRatio * widgetWidth,\n        height: heightRatio * widgetHeight,\n      }\n    }\n    const elements = document.getElementsByClassName('fruit-main-chart')\n    const element = elements[elements.length - 1]\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight * fullscreenHeightRatio,\n    }\n  }\n\n  setDimensions() {\n    // this takes the size of of the container on resize and resizes\n    // the chart using the highcharts api\n    const { width, height } = this.getSize()\n    this.chart.setSize(width, height)\n  }\n\n  componentDidUpdate(prevProps) {\n    // a series of operations defined by the highcharts api to\n    // update charts when data or size changes\n    const { config, type, theme } = this.props\n    this.setDimensions()\n    Highcharts.theme = { colors: theme }\n    Highcharts.setOptions(Highcharts.theme)\n    if (!_.isEqual(config, prevProps.config)) {\n      if (type === '4r_menu_recipe_by_type_company') {\n        this.updateFourRBubbleChart(config.series)\n        return this.chart.redraw()\n      }\n      this.updateSeries(config.series)\n\n      this.chart.setTitle({ text: config.title.text })\n      this.updateDrilldown(config)\n      this.updateCategories(config)\n      this.updatePlotLines(config)\n      this.chart.redraw()\n    }\n  }\n\n  render() {\n    // id is passed down from the grid layout as container prop and tells\n    // highcharts what element to attach to\n    return (\n      <div\n        style={{ display: 'flex' }}\n        id={this.state.chartId}\n        className=\"chart\"\n      />\n    )\n  }\n}\n\nChart.defaultProps = {\n  type: 'Chart',\n  widthRatio: 1,\n  heightRatio: 1,\n  fullscreenHeightRatio: 0.85,\n  theme: [],\n  onDataClick: () => null,\n}\n\nexport default Chart\n","import React from 'react'\nimport 'styles/ChartWrapper.css'\nimport Chart from './Chart'\nimport BubbleChartWrapper from \"./four_r/BubbleChartWrapper\"\n\n// component to display message to user instead of rendering\n// chart if no data is present\nconst ChartWrapper = (props) => {\n  const { dataIsPresent, emptyDataMessage, type, reports, id, is_bubble } = props\n  const error = reports[id].errors ? reports[id].errors[type] : null\n  const message = error || emptyDataMessage\n  if (dataIsPresent) {\n    if (is_bubble){\n      return <BubbleChartWrapper {...props}/>\n    } else {\n      return <Chart {...props} />\n    }\n  } else {\n    return (\n      <div className='chart-wrapper'>\n        <div className='chart-wrapper-message'>{ message }</div>\n      </div>\n    )\n  }\n}\n\nChartWrapper.defaultProps = {\n  dataIsPresent: true,\n  emptyDataMessage: 'No Data Available'\n}\n\nexport default ChartWrapper\n","import _ from 'lodash'\nimport flow from 'lodash/flow'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { DropTarget } from 'react-dnd'\nimport ReactGridLayout from 'react-grid-layout'\nimport { connect } from 'react-redux'\nimport {\n  fetchDashboard,\n  fetchDashboards,\n  setDashboardState,\n  updateWidgets,\n} from 'actions'\nimport 'styles/Dashboard.css'\nimport APSpendWidget from './ap_spend/APSpendWidget'\nimport BudgetVsActualWidget from './budget_vs_actual/BudgetVsActualWidget'\nimport CostWidget from './cost/CostWidget'\nimport FourRWidget from './four_r/FourRWidget'\nimport FullScreen from './FullScreen'\nimport VendorWidget from './vendor_spend/VendorWidget'\nimport Wrapper from './Wrapper'\n\nconst boxTarget = {\n  drop() {\n    return { name: 'Dustbin' }\n  },\n}\n\nclass DashboardGrid extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { widget: {}, fullscreenOpen: false }\n    this.mapWidgets = this.mapWidgets.bind(this)\n    this.handleLayoutChange = this.handleLayoutChange.bind(this)\n    this.getWidget = this.getWidget.bind(this)\n    this.widgetsToLayout = this.widgetsToLayout.bind(this)\n    this.layoutToWidgets = this.layoutToWidgets.bind(this)\n    this.onExpandClick = this.onExpandClick.bind(this)\n    this.onCompressClick = this.onCompressClick.bind(this)\n  }\n\n  UNSAFE_componentWillUpdate(nextProps) {\n    const { token } = this.props.company\n    if (token !== nextProps.company.token) {\n      this.props.fetchDashboards(this.props.dashboardId)\n    }\n  }\n\n  mapWidgets() {\n    // create array of dom elements to display as widgets\n    const { widgets } = this.props\n    const filteredWidgets = widgets.filter((w) => !_.isEmpty(w.id))\n    return filteredWidgets.map((widget) => (\n      <Wrapper key={widget.id}>{this.getWidget(widget)}</Wrapper>\n    ))\n  }\n\n  widgetsToLayout() {\n    // convert layout in redux state to data for grid library\n    const f = this.props.widgets.map((widget) => {\n      const { x, y, w, h, id } = widget\n      return { x, y, w, h, i: id }\n    })\n    return f\n  }\n\n  layoutToWidgets(layout) {\n    // convert layout from grid library into data to send to api and save\n    const { widgets } = this.props\n    return layout.map((layoutItem) => {\n      const { x, y, w, h } = layoutItem\n      return {\n        ...widgets.find((widget) => widget.id === layoutItem.i),\n        x,\n        y,\n        w,\n        h,\n      }\n    })\n  }\n\n  getWidget(widget, fullscreen = false) {\n    // return widget based on name in redux state\n    const fullscreenProps = fullscreen\n      ? {\n          admin: false,\n          fullscreen: true,\n          onCompressClick: this.onCompressClick,\n        }\n      : {}\n\n    switch (widget.name) {\n      case 'vendor_spend':\n        return (\n          <VendorWidget\n            admin={this.props.admin}\n            key={widget.id}\n            onExpandClick={this.onExpandClick}\n            id={widget.id}\n            {...fullscreenProps}\n          />\n        )\n      case 'ap_spend':\n        return (\n          <APSpendWidget\n            admin={this.props.admin}\n            key={widget.id}\n            onExpandClick={this.onExpandClick}\n            id={widget.id}\n            {...fullscreenProps}\n          />\n        )\n      case 'cost':\n        return (\n          <CostWidget\n            admin={this.props.admin}\n            key={widget.id}\n            onExpandClick={this.onExpandClick}\n            id={widget.id}\n            {...fullscreenProps}\n          />\n        )\n      case 'four_r':\n        return (\n          <FourRWidget\n            admin={this.props.admin}\n            key={widget.id}\n            onExpandClick={this.onExpandClick}\n            id={widget.id}\n            {...fullscreenProps}\n          />\n        )\n      case 'budget_vs_actual':\n        return (\n          <BudgetVsActualWidget\n            admin={this.props.admin}\n            key={widget.id}\n            onExpandClick={this.onExpandClick}\n            id={widget.id}\n            {...fullscreenProps}\n          />\n        )\n      default:\n        return (\n          <APSpendWidget\n            admin={this.props.admin}\n            key={widget.id}\n            onExpandClick={this.onExpandClick}\n            id={widget.id}\n            {...fullscreenProps}\n          />\n        )\n    }\n  }\n\n  handleLayoutChange(layout) {}\n\n  onExpandClick(widgetId) {\n    const widget = this.props.widgets.find((w) => w.id === widgetId)\n    this.setState({ fullscreenOpen: true, widget })\n    this.props.setDashboardState({\n      fullscreenOpen: true,\n      activeWidget: widget,\n    })\n  }\n\n  onCompressClick() {\n    this.setState({ fullscreenOpen: false })\n    this.props.setDashboardState({\n      fullscreenOpen: false,\n      activeWidget: null,\n      updatedInFullscreen: false,\n    })\n  }\n\n  render() {\n    // functions from the drag and drop library\n    // allows for dropping widgets onto canvas\n    // check out WidgetSelector and WidgetThumbnail components\n    const { connectDropTarget } = this.props\n    const layout = this.widgetsToLayout()\n\n    const backgroundColor = 'inherit'\n\n    const { widget } = this.state\n\n    if (_.isEmpty(this.props.company.locations)) return <div />\n\n    return connectDropTarget(\n      <div className=\"wd-100\">\n        <div className=\"dashboard-drop-container\" style={{ backgroundColor }}>\n          <ReactGridLayout\n            style={styles.container}\n            className=\"layout\"\n            layout={layout}\n            cols={38}\n            rowHeight={30}\n            width={1200}\n            draggableCancel=\"input,textarea, button, a, rect, path\"\n            onLayoutChange={this.handleLayoutChange}\n            isDraggable={false}\n            isResizable={false}\n          >\n            {this.mapWidgets()}\n          </ReactGridLayout>\n          <FullScreen\n            widgetContainer\n            visible={this.state.fullscreenOpen}\n            close={() => this.setState({ fullscreenOpen: false })}\n          >\n            {this.getWidget(widget, true)}\n          </FullScreen>\n        </div>\n      </div>,\n    )\n  }\n}\n\nconst styles = {\n  container: {\n    height: '100%',\n    overflowY: 'scroll',\n  },\n}\n\nDashboardGrid.defaultProps = {\n  isStatic: false,\n}\n\nDashboardGrid.propTypes = {\n  layout: PropTypes.array.isRequired,\n  widgets: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  layout: state.dashboard.layout,\n  widgets: state.widgets.widgets,\n  company: state.company,\n})\n\n// export default connect(mapStateToProps, { setDashboardLayout })(Dashboard)\n\nexport default flow(\n  DropTarget('widget', boxTarget, (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop(),\n  })),\n  connect(mapStateToProps, {\n    fetchDashboards,\n    fetchDashboard,\n    updateWidgets,\n    setDashboardState,\n  }),\n)(DashboardGrid)\n","import React, { Component } from 'react'\r\nimport { exportReactTable, exportTableToCSV } from \"utils\"\r\n\r\nclass DownloadCSV extends Component {\r\n    downloadToCSV = () => {\r\n        if (this.props.isReactTable){\r\n            exportReactTable(this.props.tableSelector, this.props.fileName)\r\n        } else {\r\n            exportTableToCSV(this.props.tableSelector, this.props.fileName)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (<div style={{...this.props.style}}>\r\n            <a onClick={this.downloadToCSV}>(CSV)</a>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default DownloadCSV\r\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/FullScreen.css'\n\nclass FullScreen extends React.Component {\n  constructor(props) {\n    super(props)\n    this._handleKeyDown = this._handleKeyDown.bind(this)\n  }\n\n  _handleKeyDown(e) {\n    if (e.code === 'Escape') {\n      this.props.close()\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this._handleKeyDown)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this._handleKeyDown)\n  }\n\n  render() {\n    const { widgetContainer, sidebarOpen } = this.props\n    const className =\n      sidebarOpen && widgetContainer\n        ? 'backdrop backdrop-sidebar-open'\n        : 'backdrop'\n    if (!this.props.visible) {\n      return null\n    }\n\n    return (\n      <div className={className}>\n        <div className=\"dialog\">{this.props.children}</div>\n      </div>\n    )\n  }\n}\n\nFullScreen.defaultProps = {\n  primaryButtonClass: '',\n  widgetContainer: false,\n}\n\nFullScreen.propTypes = {\n  close: PropTypes.func.isRequired,\n  visible: PropTypes.bool,\n}\n\nconst mapStateToProps = (state) => ({\n  sidebarOpen: state.dashboard.sidebarOpen,\n})\n\nexport default connect(mapStateToProps)(FullScreen)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setByInvoiceDate } from \"actions/WidgetSettingsActions\";\nimport \"./InvoiceDateToggle.css\";\n\nclass InvoiceDateToggle extends Component {\n  handleDateToggleChange = (event) => {\n    this.props.setByInvoiceDate(\n      this.props.widget.name,\n      event.target.value === \"invoice_date\"\n    );\n  };\n\n  render() {\n    const { widgetId, widget, widget_settings } = this.props;\n    const isInvoiceDateToggle = widget_settings[widget.name].byInvoiceDate;\n    const inputGroupName = `invoice_date_toggle-${widget.name}-${widgetId}`;\n    return (\n      <div\n        className={\"invoice-date-toggle\"}\n        onChange={this.handleDateToggleChange}\n      >\n        <div className={\"invoice-date-toggle-input\"}>\n          <input\n            type={\"radio\"}\n            name={inputGroupName}\n            value={\"submitted_date\"}\n            defaultChecked={!isInvoiceDateToggle}\n          />\n          <label className=\"wd-80 white-space-nowrap\" htmlFor=\"invoice_date_toggle\">\n            Submitted Date\n          </label>\n        </div>\n        <div className={\"invoice-date-toggle-input\"}>\n          <input\n            type={\"radio\"}\n            name={inputGroupName}\n            value={\"invoice_date\"}\n            defaultChecked={isInvoiceDateToggle}\n          />\n          <label className=\"wd-80 white-space-nowrap\" htmlFor=\"invoice_date_toggle\">\n            Invoice Date\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { widget_settings } = state;\n  return {\n    widget_settings,\n  };\n};\n\nexport default connect(mapStateToProps, { setByInvoiceDate })(\n  InvoiceDateToggle\n);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchLocations, setLocations } from 'actions'\nimport 'styles/LocationPicker.css'\n\nclass LocationPicker extends Component {\n  constructor(props) {\n    super(props)\n    this.handleRegionCheckboxChange = this.handleRegionCheckboxChange.bind(this)\n    this.setReduxLocations = this.setReduxLocations.bind(this)\n  }\n\n  componentDidUpdate() {\n    this.setReduxLocations()\n  }\n\n  UNSAFE_componentWillUpdate(nextProps) {\n    if (nextProps.locations_by_region !== this.props.locations_by_region) {\n      this.setState(this.buildState(nextProps))\n    }\n  }\n\n  setReduxLocations() {\n    const currentState = this.state || {}\n    const locations = Object.entries(currentState).map((loc) => {\n      return { ...loc[1], name: loc[0] }\n    })//.filter(loc => loc.type == 'location' && loc.checked)\n    this.props.setLocations(locations)\n  }\n\n  checkRegions(loc) {\n    const nextState = { ...this.state, ...loc }\n    const regions = Object.entries(nextState).filter(loc => loc[1].type === 'region').map(l => l[0])\n    regions.forEach((region) => {\n      const locations = Object.values(nextState)\n        .filter(loc => loc.region === region && loc.checked)\n      if (locations.length === 0) {\n        this.setState({ [region]: { ...this.state[region], checked: false }})\n      } else {\n        this.setState({ [region]: { ...this.state[region], checked: true }})\n      }\n\n    })\n  }\n\n  buildState(nextProps) {\n    const { locations_by_region } = nextProps\n    const initialState = {}\n    locations_by_region.forEach((region) => {\n      initialState[region.name] = { checked: true, type: 'region', division_id: region.division_id }\n      region.locations.forEach((location) => {\n        initialState[location.name] = { checked: true, type: 'location', region: region.name, unit_id: location.unit_id }\n      })\n    })\n\n    return initialState\n  }\n\n  handleRegionCheckboxChange(event, region, locations) {\n    const { checked } = this.state[region]\n    this.setState({[region]: { ...this.state[region], checked: !checked }})\n    locations.forEach((location) => {\n      this.setState({[location.name]: { ...this.state[location.name], checked: !checked }})\n    })\n  }\n\n  handleLocationCheckboxChange(event, location) {\n    const { checked } = this.state[location]\n    const nextState = {[location]: { ...this.state[location], checked: !checked }}\n    this.setState(nextState)\n    this.checkRegions(nextState)\n  }\n\n  mapLocations(locations) {\n    return locations.map((location) => (\n      <div className='location-checkbox-container' key={location.name}>\n        <input\n          className='location-checkbox'\n          type=\"checkbox\"\n          id={location.name}\n          value={location.name}\n          checked={this.state[location.name]?.checked}\n          onChange={(event) => this.handleLocationCheckboxChange(event, location.name)}\n        />\n        <label className='location-checkbox-label' htmlFor={location.name}>{location.name}</label>\n      </div>\n    ))\n  }\n\n  mapLocationsByRegion() {\n    const { locations_by_region } = this.props\n    if (locations_by_region === []) { return <div></div> }\n    return locations_by_region.map((region) => {\n      return (\n        <div className='region-checkbox-container' key={region.name}>\n          <input\n            type=\"checkbox\"\n            id={region.name}\n            value={region.name}\n            checked={this.state[region.name]?.checked}\n            onChange={event => this.handleRegionCheckboxChange(event, region.name, region.locations)}\n          />\n          <label className='region-checkbox-label' htmlFor={region.name}>{region.name}</label>\n          { this.mapLocations(region.locations) }\n        </div>\n      )\n    })\n  }\n\n  render() {\n    if (this.state === null) return <div></div>\n    return (\n      <div className='location-picker-container'>\n        <div className='location-picker-title'>\n          Locations:\n        </div>\n        { this.mapLocationsByRegion() }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return { locations_by_region: state.company.locations_by_region }\n}\nexport default connect(mapStateToProps, { fetchLocations, setLocations })(LocationPicker)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setDashboardState } from 'actions'\nimport 'styles/SideBar.css'\nimport LocationPicker from './LocationPicker'\nimport StartAndEndDatePicker from './StartAndEndDatePicker'\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      sidebarOpen: false,\n      hovering: false\n    }\n\n    this.onSetSidebarToggle = this.onSetSidebarToggle.bind(this)\n    this.offHover = this.offHover.bind(this)\n    this.onHover = this.onHover.bind(this)\n  }\n\n  onSetSidebarToggle() {\n    const { sidebarOpen } = this.state\n    this.setState({ sidebarOpen: !sidebarOpen, hovering: false })\n    this.props.setDashboardState({ sidebarOpen: !sidebarOpen })\n  }\n\n  offHover() {\n    const { sidebarOpen } = this.state\n    this.setState({ hovering: false })\n    if (!sidebarOpen) {\n      this.props.setDashboardState({ sidebarOpen: false })\n    }\n  }\n\n  onHover() {\n    this.setState({ hovering: true })\n    this.props.setDashboardState({ sidebarOpen: true })\n  }\n\n\n\n  render() {\n    const { sidebarOpen, hovering } = this.state\n    const collapseClass = sidebarOpen || hovering ? 'sidebar-open' : 'sidebar-collapsed'\n    const iconColor = sidebarOpen ? 'black' : 'darkgrey'\n    return (\n      <div className={`sidebar-container ${collapseClass}`} id='sidebar' onMouseLeave={this.offHover} >\n        <div\n          className=\"fa fa-bars  fa-lg sidebar-toggle\"\n          style={{ color: iconColor }}\n          onClick={this.onSetSidebarToggle}\n          onMouseEnter={this.onHover}\n          // onMouseLeave={this.offHover}\n        />\n        <div className='sidebar-content'>\n          <button\n            className={`btn btn-lg btn-primary btn-toggle`}\n            id=\"add-widget-btn\"\n            onClick={this.props.openSelector}\n            disabled={this.props.fullscreenOpen}\n          >\n            Add Widget\n          </button>\n          <StartAndEndDatePicker />\n          <LocationPicker />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({ fullscreenOpen: state.dashboard.fullscreenOpen })\n\nexport default connect(mapStateToProps, { setDashboardState })(Sidebar)\n","import { fetchDates, setCompanyData, setGlobalReportAttribute } from 'actions'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport 'moment/locale/it'\nimport React, { Component } from 'react'\nimport DayPickerInput from 'react-day-picker/DayPickerInput'\nimport 'react-day-picker/lib/style.css'\nimport { formatDate } from 'react-day-picker/moment'\nimport { connect } from 'react-redux'\nimport 'styles/StartAndEndDatePicker.css'\nimport { selectedUnits, setFetching } from 'utils'\n\nconst allowedFormats = [\n  'MM/DD/YYYY',\n  'MM/D/YYYY',\n  'M/DD/YYYY',\n  'M/D/YYYY',\n  'MM/DD/YY',\n  'MM/D/YY',\n  'M/DD/YY',\n  'M/D/YY',\n]\nconst currentYear = moment().format('YYYY')\n\nclass StartAndEndDatePicker extends Component {\n  constructor(props) {\n    super(props)\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n    this.handleBlur = this.handleBlur.bind(this)\n    this.handleDayPickerHide = this.handleDayPickerHide.bind(this)\n    this.fetchCalendarRanges = this.fetchCalendarRanges.bind(this)\n    this.handleRangeChange = this.handleRangeChange.bind(this)\n    this.handleRangeStartDateChange = this.handleRangeStartDateChange.bind(this)\n    this.handleRangeEndDateChange = this.handleRangeEndDateChange.bind(this)\n    this.handleYearChange = this.handleYearChange.bind(this)\n    this.mapDates = this.mapDates.bind(this)\n    this.mapYears = this.mapYears.bind(this)\n  }\n\n  UNSAFE_componentWillUpdate(nextProps) {\n    if (!_.isEqual(this.props.company.locations, nextProps.company.locations)) {\n      this.fetchCalendarRanges(nextProps)\n    }\n  }\n\n  fetchCalendarRanges(props = this.props, year = currentYear) {\n    const { locations } = props.company\n    const unitIds = selectedUnits(locations).map((loc) => loc.unit_id)\n    this.props.fetchDates(unitIds, year)\n  }\n\n  handleBlur(event, attribute) {\n    setFetching(false)\n    const value = new Date(event.relatedTarget?.getAttribute('aria-label'))\n    const fieldValue = moment(this.props[attribute]).format('MM/DD/YYYY')\n    if (fieldValue !== value) {\n      const date = moment(value, allowedFormats, true)\n      if (date.isValid()) {\n        this.props.setGlobalReportAttribute({\n          [attribute]: date || this.props[attribute],\n        })\n        this[attribute].setState({\n          value: date.format('MM/DD/YYYY'),\n          typedValue: date.format('MM/DD/YYYY'),\n        })\n      } else {\n        this[attribute].setState({\n          value: fieldValue,\n          typedValue: fieldValue,\n        })\n      }\n    }\n  }\n\n  handleDayPickerHide(attribute) {\n    if (this[attribute]) this[attribute].getInput().blur()\n  }\n\n  handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      event.target.blur()\n    }\n  }\n\n  parseDay(value, attribute) {\n    const date = moment(value, allowedFormats, true)\n    if (!date.isValid()) return this.props[attribute].toDate()\n    return date.toDate()\n  }\n\n  handleIconClick(attribute) {\n    if (this[attribute]) this[attribute].getInput().focus()\n  }\n\n  handleRangeChange(event) {\n    const currentRange = event.target.value\n    const { calendarRanges } = this.props.company\n    this.props.setCompanyData({ currentRange })\n    this.props.setGlobalReportAttribute({ startRange: 'none' })\n    this.props.setGlobalReportAttribute({ endRange: 'none' })\n    if (_.isEmpty(calendarRanges[currentRange])) return\n  }\n\n  handleRangeStartDateChange(event) {\n    const {\n      endRange,\n      company: { calendarRanges, currentRange },\n    } = this.props\n    const startRange = event.target.value\n    this.props.setGlobalReportAttribute({ startDate: moment(startRange) })\n    this.props.setGlobalReportAttribute({ startRange })\n    if (endRange === 'none' || moment(endRange).isBefore(startRange)) {\n      const endRange = calendarRanges[currentRange].find(\n        (range) => range.StartDate === startRange,\n      ).EndDate\n      this.props.setGlobalReportAttribute({ endRange })\n      this.props.setGlobalReportAttribute({ endDate: moment(endRange) })\n    }\n  }\n\n  handleRangeEndDateChange(event) {\n    const {\n      startRange,\n      company: { calendarRanges, currentRange },\n    } = this.props\n    const endRange = event.target.value\n    this.props.setGlobalReportAttribute({ endDate: moment(endRange) })\n    this.props.setGlobalReportAttribute({ endRange })\n    if (startRange === 'none' || moment(startRange).isAfter(endRange)) {\n      const startRange = calendarRanges[currentRange].find(\n        (range) => range.EndDate === endRange,\n      ).StartDate\n      this.props.setGlobalReportAttribute({ startRange })\n      this.props.setGlobalReportAttribute({ startDate: moment(startRange) })\n    }\n  }\n\n  handleYearChange(event) {\n    this.fetchCalendarRanges(this.props, event.target.value)\n    this.props.setCompanyData({ yearChanged: true })\n    this.props.setGlobalReportAttribute({ selectedYear: event.target.value })\n    this.props.setGlobalReportAttribute({ startRange: 'none' })\n    this.props.setGlobalReportAttribute({ endRange: 'none' })\n  }\n\n  mapYears() {\n    const numYears = Number(currentYear) - 2010 + 1\n    const years = [...Array(numYears).keys()].map((diff) => currentYear - diff)\n    return years.map((year) => (\n      <option key={year} value={String(year)}>\n        {year}\n      </option>\n    ))\n  }\n\n  mapDates(type) {\n    const { currentRange, calendarRanges } = this.props.company\n    const ranges = calendarRanges[currentRange] || []\n\n    const displayHash = {}\n    const options = _.compact(\n      ranges.map((range) => {\n        const date = moment(range[type]).format('MM/DD/YYYY')\n        const week =\n          currentRange === 'WeeklyRanges' ? ` - Week ${range.WeekNumber}` : ''\n        const periodAndDate = `Period ${range.PeriodNumber}${week}: ${date}`\n        const displayDate =\n          currentRange === 'YearlyRanges' ? date : periodAndDate\n        if (displayHash[displayDate] === undefined) {\n          displayHash[displayDate] = displayDate\n          return (\n            <option key={`${range[type]}-${Math.random()}`} value={range[type]}>\n              {displayDate}\n            </option>\n          )\n        } else {\n          return undefined\n        }\n      }),\n    )\n\n    return [\n      <option key={`no-range-${type}`} value=\"none\" disabled></option>,\n      ...options,\n    ]\n  }\n\n  render() {\n    const {\n      company: { currentRange },\n      startRange,\n      endRange,\n      selectedYear,\n    } = this.props\n    return (\n      <div className=\"start-end-date-picker-container\">\n        <div>Custom Start Date</div>\n        <div className=\"date-picker-row\">\n          <DayPickerInput\n            value={moment(this.props.startDate).format('MM/DD/YYYY')}\n            formatDate={formatDate}\n            parseDate={(value) => this.parseDay(value, 'startDate')}\n            ref={(el) => (this.startDate = el)}\n            onDayPickerHide={() => this.handleDayPickerHide('startDate')}\n            placeholder=\"MM/DD/YYYY\"\n            inputProps={{\n              onKeyPress: (event) => this.handleKeyPress(event),\n              onBlur: (event) => this.handleBlur(event, 'startDate'),\n              className: 'date-picker-input',\n            }}\n          />\n          <i\n            className=\"fa fa-calendar fa-lg icon-inactive date-icon\"\n            onClick={() => this.handleIconClick('startDate')}\n          />\n        </div>\n        <div>Custom End Date</div>\n        <div className=\"date-picker-row\">\n          <DayPickerInput\n            value={moment(this.props.endDate).format('MM/DD/YYYY')}\n            formatDate={formatDate}\n            parseDate={(value) => this.parseDay(value, 'endDate')}\n            ref={(el) => (this.endDate = el)}\n            onDayPickerHide={() => this.handleDayPickerHide('endDate')}\n            placeholder=\"MM/DD/YYYY\"\n            inputProps={{\n              onKeyPress: (event) => this.handleKeyPress(event),\n              onBlur: (event) => this.handleBlur(event, 'endDate'),\n              className: 'date-picker-input',\n            }}\n          />\n          <i\n            className=\"fa fa-calendar fa-lg icon-inactive date-icon\"\n            onClick={() => this.handleIconClick('endDate')}\n          />\n        </div>\n        <br />\n        <div>Reporting Year</div>\n        <select\n          className=\"date-select\"\n          value={selectedYear}\n          onChange={this.handleYearChange}\n        >\n          {this.mapYears()}\n        </select>\n        <div>Range</div>\n        <select\n          onChange={this.handleRangeChange}\n          value={currentRange}\n          className=\"date-select\"\n        >\n          <option value=\"WeeklyRanges\">Week</option>\n          <option value=\"PeriodRanges\">Period</option>\n          <option value=\"YearlyRanges\">Year</option>\n        </select>\n        <div>Start Date</div>\n        <select\n          className=\"date-select\"\n          onChange={this.handleRangeStartDateChange}\n          value={startRange}\n        >\n          {this.mapDates('StartDate')}\n        </select>\n        <div>End Date</div>\n        <select\n          className=\"date-select\"\n          onChange={this.handleRangeEndDateChange}\n          value={endRange}\n        >\n          {this.mapDates('EndDate')}\n        </select>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { startDate, endDate, startRange, endRange, selectedYear } =\n    state.reports\n\n  return {\n    startDate,\n    endDate,\n    startRange,\n    endRange,\n    selectedYear,\n    company: state.company,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  setGlobalReportAttribute,\n  fetchDates,\n  setCompanyData,\n})(StartAndEndDatePicker)\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport 'styles/Stats.css'\nimport {\n  formatIntoDollars, formatPercent, getColorPosOrNeg\n} from 'utils'\n\n\nclass Stats extends Component {\n  constructor(props) {\n    super(props)\n    this.computeStats = this.computeStats.bind(this)\n  }\n\n  computeStats() {\n    const { ratesAndDates } = this.props\n    if (_.isEmpty(ratesAndDates)) {\n      return { mean: 0, sum: 0, min: 0, max: 0, change: 0, totalQuantity: 0 }\n    }\n\n    const rates = ratesAndDates.map(i => parseFloat(i.rate))\n    const amounts = ratesAndDates.map(i => parseFloat(i.rate) * parseFloat(i.qty))\n    const sortedRates = rates.slice().sort((a,b) => a - b)\n    const sum = rates.reduce((a, b) =>  a + b)\n    const total = amounts.reduce((a, b) => a + b)\n    const mean = sum / rates.length\n    const min = sortedRates[0]\n    const max = sortedRates[sortedRates.length - 1]\n    const change = ((rates[0] - rates[rates.length - 1]) / rates[0]) * (-100)\n    return { mean, sum, min, max, change, total }\n  }\n\n  render() {\n    const stats = this.computeStats()\n    return (\n      <div>\n        <div className='stats-container'>\n          <div className='stat-group'>\n            <div className='stat-label'>Low</div>\n            <div className='stat'>{formatIntoDollars(stats.min)}</div>\n          </div>\n          <div className='stat-group'>\n            <div className='stat-label'>Mean</div>\n            <div className='stat'>{formatIntoDollars(stats.mean)}</div>\n          </div>\n          <div className='stat-group'>\n            <div className='stat-label'>High</div>\n            <div className='stat'>{formatIntoDollars(stats.max)}</div>\n          </div>\n          <div className='stat-group'>\n            <div className='stat-label'>Total Amount</div>\n            <div className='stat'>{formatIntoDollars(stats.total)}</div>\n          </div>\n          <div className='stat-group'>\n            <div className='stat-label'>Change</div>\n            <div className='stat' style={{ color: getColorPosOrNeg(stats.change) }}>{ stats.change > 0 ? '+' : ''}{formatPercent(stats.change)}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Stats\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport ReactTable from 'react-table'\nimport 'react-table/react-table.css'\nimport 'styles/ChartWrapper.css'\nimport 'styles/Table.css'\n\nclass Table extends Component {\n  constructor(props) {\n    super(props)\n    this.handleDataClick = this.handleDataClick.bind(this)\n  }\n\n  componentDidUpdate() {\n    // const { container, config, modules, type, theme } = this.props\n  }\n\n  handleDataClick(rowInfo) {\n    this.props.onDataClick(rowInfo)\n  }\n\n  render() {\n    const {\n      data,\n      printView,\n      columns,\n      subComponent,\n      error,\n      emptyDataMessage,\n      filterable,\n      showPagination,\n      defaultPageSize,\n      heightRatio,\n    } = this.props\n\n    if (_.isEmpty(data)) {\n      return (\n        <div className=\"chart-wrapper\">\n          <div className=\"chart-wrapper-message\">\n            {error || emptyDataMessage}\n          </div>\n        </div>\n      )\n    }\n\n    const style = heightRatio ? { height: `${heightRatio * 100}%` } : {}\n    return (\n      <ReactTable\n        data={data}\n        columns={columns}\n        SubComponent={subComponent}\n        filterable={printView ? false : filterable}\n        showPagination={printView ? false : showPagination}\n        defaultSorted={this.props.defaultSorted}\n        defaultPageSize={printView ? data.length : defaultPageSize}\n        style={style}\n        getTrProps={(state, rowInfo, column, instance) => ({\n          onClick: (e) => this.handleDataClick(rowInfo),\n        })}\n      />\n    )\n  }\n}\n\nTable.defaultProps = {\n  onDataClick: () => null,\n  filterable: false,\n  showPagination: true,\n  emptyDataMessage: 'No Data Available',\n  defaultPageSize: 20,\n}\n\nTable.propTypes = {}\n\nexport default Table\n","import CryptoJS from 'crypto-js'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { destroyWidget, fetchReport, setDrilldownIndex } from 'actions'\nimport Watermark from 'assets/images/rsi-logo.jpeg'\nimport 'styles/Widget.css'\nimport { selectedDivisions, selectedUnits } from 'utils'\nimport LoadingIndicator from 'components/LoadingIndicator'\nimport BreadCrumbs from './BreadCrumbs'\nimport InvoiceDateToggle from './InvoiceDateToggle'\n\nclass Widget extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { settingsVisible: false }\n    this.toggleSettingsVisible = this.toggleSettingsVisible.bind(this)\n    this.dataIsAvailable = this.dataIsAvailable.bind(this)\n    this.renderChildrenWhenLoaded = this.renderChildrenWhenLoaded.bind(this)\n    this.printDocument = this.printDocument.bind(this)\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.shouldFetch) {\n      this.props.fetchReport(\n        this.props.id,\n        this.props.type,\n        this.props.urlParams,\n      )\n    }\n  }\n\n  UNSAFE_componentWillUpdate(nextProps) {\n    if (this.props.shouldFetch) {\n      const newUrlParams = nextProps.urlParams !== this.props.urlParams\n      if (\n        newUrlParams ||\n        (!this.dataIsAvailable(nextProps) && this.isNotFetching(this.props))\n      ) {\n        this.props.fetchReport(\n          nextProps.id,\n          nextProps.type,\n          this.props.urlParams,\n        )\n      }\n    }\n  }\n\n  printDocument(event) {\n    const reduxState = JSON.stringify(this.props.state)\n    const encryptedState = CryptoJS.AES.encrypt(\n      reduxState,\n      process.env.REACT_APP_SECRET_KEY,\n    ).toString()\n    localStorage.setItem('zaru-widgets', encryptedState)\n    window.open(`/?print_widget=true&widget_id=${this.props.id}`)\n  }\n\n  renderChildrenWhenLoaded() {\n    if (this.dataIsAvailable(this.props) && !this.props.cogsIsLoading) {\n      return this.props.children\n    }\n  }\n\n  isNotFetching(props) {\n    const { reports, id, type } = props\n    return reports[id] && [type] && !reports[id].fetchingData\n  }\n\n  dataIsAvailable(props) {\n    return this.isNotFetching(props)\n  }\n\n  toggleSettingsVisible() {\n    this.setState({ settingsVisible: !this.state.settingsVisible })\n  }\n\n  render() {\n    const {\n      reports,\n      title,\n      id,\n      admin,\n      onExpandClick,\n      onCompressClick,\n      fullscreen,\n      showDatesCanvas,\n      dates,\n      widgets,\n      printView,\n      company,\n    } = this.props\n\n    // show dates passed in by props or datepicker dates\n    const displayDates = showDatesCanvas\n      ? dates\n      : {\n          startDate: moment(reports.startDate).format('MM/DD/YYYY'),\n          endDate: moment(reports.endDate).format('MM/DD/YYYY'),\n        }\n    const datesStyle = {\n      display:\n        (showDatesCanvas || fullscreen) && !_.isEmpty(displayDates.startDate)\n          ? 'flex'\n          : 'none',\n    }\n    const containerClass = printView\n      ? 'widget-container print-view'\n      : 'widget-container'\n    const widget = widgets.find((w) => w.id === id)\n    const headerClass = printView\n      ? 'widget-header print-header'\n      : 'widget-header'\n    if (printView)\n      document.querySelectorAll(':button').forEach((button) => {\n        button.style.display = 'none'\n      })\n\n    const { cogsIsLoading } = this.props\n    return (\n      <div\n        className={containerClass}\n        id={`${id}${fullscreen ? '-fullscreen' : ''}`}\n      >\n        <div className={headerClass}>\n          <div className=\"widget-title\">{title}</div>\n          <div\n            className=\"widget-group-name\"\n            style={{ display: printView ? 'flex' : 'none' }}\n          >\n            {company.group_name}\n          </div>\n          <div className=\"widget-dates\" style={datesStyle}>\n            {displayDates.startDate} - {displayDates.endDate}\n          </div>\n          <div\n            className=\"widget-dates\"\n            style={{ display: printView ? 'flex' : 'none' }}\n          >\n            <div className=\"header-label\">Report Generated: </div>\n            {moment().format('MM/DD/YYYY h:mm A')}\n          </div>\n          <div\n            className=\"widget-dates\"\n            style={{ display: printView ? 'flex' : 'none' }}\n          >\n            <div className=\"header-label\">Divisions Reporting: </div>\n            {`  ${selectedDivisions(company.locations).map(\n              (division) => ` ${division.name}`,\n            )}`}\n          </div>\n          <div\n            className=\"widget-dates\"\n            style={{ display: printView ? 'flex' : 'none' }}\n          >\n            <div className=\"header-label\">Units Reporting: </div>\n            {`  ${selectedUnits(company.locations).map(\n              (loc) => ` ${loc.name.split(' ')[0]}`,\n            )}`}\n          </div>\n          <div className=\"widget-btns\">\n            <i\n              className=\"fa fa-trash widget-settings-icon\"\n              aria-hidden=\"true\"\n              style={{ display: admin ? 'flex' : 'none' }}\n              onClick={() => {\n                this.props.destroyWidget(id)\n              }}\n              ref={(iconRef) => (this.iconRef = iconRef)}\n            />\n            <i\n              className=\"fa fa-print widget-settings-icon\"\n              aria-hidden=\"true\"\n              onClick={this.printDocument}\n              style={{ display: fullscreen && !printView ? 'flex' : 'none' }}\n              ref={(iconRef) => (this.iconRef = iconRef)}\n            />\n            <i\n              className=\"fa fa-expand widget-settings-icon\"\n              aria-hidden=\"true\"\n              style={{ display: fullscreen ? 'none' : 'flex' }}\n              onClick={() => onExpandClick(id)}\n              ref={(iconRef) => (this.iconRef = iconRef)}\n            />\n            <i\n              className=\"fa fa-close widget-settings-icon\"\n              aria-hidden=\"true\"\n              style={{ display: fullscreen && !printView ? 'flex' : 'none' }}\n              onClick={onCompressClick}\n              ref={(iconRef) => (this.iconRef = iconRef)}\n            />\n          </div>\n        </div>\n        <BreadCrumbs\n          history={widget.history}\n          widgetId={id}\n          printView={printView}\n        />\n        {fullscreen && <InvoiceDateToggle widget={widget} widgetId={id} />}\n        <div className=\"widget-body\">\n          <LoadingIndicator\n            isLoading={!this.dataIsAvailable(this.props) || cogsIsLoading}\n          />\n          {!cogsIsLoading && this.renderChildrenWhenLoaded()}\n        </div>\n        <img\n          className=\"watermark\"\n          style={{ display: printView ? 'fixed' : 'none' }}\n          src={Watermark}\n          alt=\"watermark\"\n        />\n      </div>\n    )\n  }\n}\n\nWidget.defaultProps = {\n  fetchReport: () => null,\n  type: null,\n  urlParams: '?start_date=01/01/2017&end_date=02/01/2017&user_id=140',\n  shouldFetch: true,\n  admin: false,\n  fullscreen: false,\n  showDates: false,\n}\n\nconst mapStateToProps = (state) => ({\n  reports: state.reports,\n  widgets: state.widgets.widgets,\n  state,\n  company: state.company,\n  cogsIsLoading: state.cogs.isLoading,\n})\n\nexport default connect(mapStateToProps, {\n  fetchReport,\n  setDrilldownIndex,\n  destroyWidget,\n})(Widget)\n","import React, { Component } from 'react'\n\nclass Wrapper extends Component {\n  pixelsFromString(style) {\n    return style.match(/\\d/g).join('')\n  }\n\n  dimensions() {\n    const { height, width } = this.props.style\n    return {\n      widgetHeight: this.pixelsFromString(height),\n      widgetWidth: this.pixelsFromString(width),\n    }\n  }\n\n  render() {\n    const { widgetHeight, widgetWidth } = this.dimensions()\n    const childrenWithProps = React.Children.map(this.props.children, (child) =>\n      React.cloneElement(child, { widgetHeight, widgetWidth }),\n    )\n    return <div {...this.props}>{childrenWithProps}</div>\n  }\n}\n\nexport default Wrapper\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  addReport,\n  fetchReport,\n  pushHistory,\n  setChartType,\n  setCompanyData,\n  setDrilldownIndex,\n  setReportAttribute,\n  setWidgetState,\n  sliceHistory,\n} from 'actions'\nimport { setDefaultTrendBy } from 'actions/APSpendActions'\nimport 'styles/FruitConsumptionWidget.css'\nimport { allDivisions } from 'utils'\nimport moment from 'moment'\nimport InvoiceTable from '../vendor_spend/InvoiceTable'\nimport Widget from '../Widget'\nimport AggregateItemsSpendContainer from './AggregateItemsSpendContainer'\nimport GlSubcategorySpendChart from './GlSubcategorySpendChart'\nimport ItemTrendChart from './ItemTrendChart'\nimport MultiLocationSpendChart from './MultiLocationSpendChart'\nimport RegionSpendChart from './RegionSpendChart'\nimport VendorByGLLocationChart from './VendorByGLLocationChart'\nimport VendorSpendChart from './VendorSpendChart'\n\nconst contextRoutes = {\n  ap_divisions_spend: 'ap_divisions_spend',\n  ap_location_spend: 'ap_location_spend',\n  gl_subcategory_spend: 'gl_subcategory_spend',\n  aggregate_item_spend: 'aggregate_item_spend',\n  item_trend_report: 'item_trend_report',\n  item_stats_table: 'item_trend_report',\n  vendor_spend_chart: 'vendor_spend_report',\n}\n\nclass APSpendWidget extends Component {\n  constructor(props) {\n    super(props)\n    this.renderChart = this.renderChart.bind(this)\n    this.wrapChart = this.wrapChart.bind(this)\n    this.getChart = this.getChart.bind(this)\n    this.drilldown = this.drilldown.bind(this)\n    this.handleRegionSpendChartClick =\n      this.handleRegionSpendChartClick.bind(this)\n    this.handleMultiLocationClick = this.handleMultiLocationClick.bind(this)\n    this.handleWeeklySpendClick = this.handleWeeklySpendClick.bind(this)\n    this.handleGLSpendClick = this.handleGLSpendClick.bind(this)\n    this.handleAggregateItemsSpendTableClick =\n      this.handleAggregateItemsSpendTableClick.bind(this)\n    this.handleItemTrendClick = this.handleItemTrendClick.bind(this)\n    this.getDateParams = this.getDateParams.bind(this)\n    this.toggleChart = this.toggleChart.bind(this)\n    this.handleVendorSpendClick = this.handleVendorSpendClick.bind(this)\n    this.fetchApDivisionsSpend = this.fetchApDivisionsSpend.bind(this)\n    this.goToRegionSpendChart = this.goToRegionSpendChart.bind(this)\n    this.goToInvoicesByVendorGL = this.goToInvoicesByVendorGL.bind(this)\n    this.invoicesByVendorGlParams = this.invoicesByVendorGlParams.bind(this)\n    this.onCompressClick = this.onCompressClick.bind(this)\n    this.goToInitialChart = this.goToInitialChart.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.setDefaultTrendBy(\n      this.props.byInvoiceDate ? 'invoice_date' : 'submitted_date',\n    )\n  }\n\n  UNSAFE_componentWillMount() {\n    // set breadcrumb in redux state\n    if (!this.props.fullscreen) {\n      this.fetchInitialChart()\n    }\n  }\n\n  UNSAFE_componentWillUpdate(nextProps) {\n    // call the api with new dates or locations if changed\n    const {\n      id,\n      reports,\n      dashboard: { fullscreenOpen },\n      byInvoiceDate,\n    } = nextProps\n    const byInvoiceDateChanged = this.props.byInvoiceDate !== byInvoiceDate\n    const lastActiveWidgetId = this.props.dashboard.activeWidget\n      ? this.props.dashboard.activeWidget.id\n      : null\n    const fullscreenDidClose =\n      !fullscreenOpen &&\n      this.props.dashboard.fullscreenOpen &&\n      this.props.dashboard.updatedInFullscreen &&\n      this.props.id !== lastActiveWidgetId\n    const { drillUp } = this.widget(nextProps)\n    const dateChanged =\n      this.props.startDate !== nextProps.startDate ||\n      this.props.endDate !== nextProps.endDate\n    const locationsChanged = !_.isEqual(\n      this.props.company.locations,\n      nextProps.company.locations,\n    )\n    const chartTypeChanged =\n      !_.isEqual(\n        this.widget(this.props).chartType,\n        this.widget(nextProps).chartType,\n      ) && drillUp\n    const { chartType } = this.widget(nextProps)\n    if (nextProps.fullscreen) return\n\n    if (locationsChanged) {\n      this.goToInitialChart(nextProps)\n      const { intitialChartType } = this.widget(nextProps)\n      if (this.widget(nextProps).chartType === intitialChartType) {\n        this.props.setWidgetState(id, { drillUp: false })\n        this.props.fetchReport(\n          this.props.id,\n          intitialChartType,\n          this.params(nextProps, intitialChartType),\n        )\n      }\n    }\n\n    if (byInvoiceDateChanged) {\n      this.props.setDefaultTrendBy(\n        byInvoiceDate ? 'invoice_date' : 'submitted_date',\n      )\n    }\n\n    if (\n      dateChanged ||\n      chartTypeChanged ||\n      fullscreenDidClose ||\n      byInvoiceDateChanged\n    ) {\n      this.props.fetchReport(\n        this.props.id,\n        this.widget(nextProps).chartType,\n        this.params(nextProps),\n      )\n\n      this.props.setWidgetState(id, { drillUp: false })\n    }\n\n    // Auto Nav for after gl click\n    if (\n      chartType !== 'aggregate_item_spend' &&\n      chartType !== 'ap_vendor_by_gl_location' &&\n      reports[id] &&\n      reports[id].aggregate_item_spend\n    ) {\n      const error = reports[id].errors.aggregate_item_spend\n      if (_.isEmpty(error)) {\n        this.props.addReport(id, 'aggregate_item_spend', null)\n      }\n    }\n\n    if (chartType === 'aggregate_item_spend') {\n      if (\n        reports[id].aggregate_item_spend &&\n        reports[id].aggregate_item_spend.length === 0\n      ) {\n        const error = reports[id].errors.aggregate_item_spend\n        if (!_.isEmpty(error)) return\n        this.props.setChartType(id, 'ap_vendor_by_gl_location')\n        this.props.fetchReport(\n          this.props.id,\n          'ap_vendor_by_gl_location',\n          this.aggItemsParams(),\n        )\n      }\n    }\n    if (_.isEmpty(chartType)) {\n      this.fetchInitialChart(nextProps)\n    }\n  }\n\n  fetchInitialChart(props = this.props) {\n    const { company, id } = props\n    if (!_.isEmpty(company.locations)) {\n      const divisions = allDivisions(company.locations)\n      if (divisions.length === 1) {\n        this.props.setWidgetState(id, {\n          chartType: 'ap_location_spend',\n          intitialChartType: 'ap_location_spend',\n        })\n        this.goToRegionSpendChart(divisions[0])\n      } else {\n        this.props.pushHistory(id, 'ap_divisions_spend', 'Divisions')\n        // set which chart is shown in redux state\n        this.props.setWidgetState(id, {\n          intitialChartType: 'ap_divisions_spend',\n        })\n        this.props.setChartType(id, 'ap_divisions_spend')\n        // call the api for the first chart\n        this.fetchApDivisionsSpend(props)\n      }\n    }\n  }\n\n  fetchApDivisionsSpend(props = this.props) {\n    this.props.fetchReport(\n      this.props.id,\n      'ap_divisions_spend',\n      this.regionSpendChartParams(props),\n    )\n  }\n\n  urlParams(userId, chartType) {\n    const { group_id } = this.props.company\n    const chartTypeToParams = {\n      ap_divisions_spend: `?unit_id=${userId}&group_id=${group_id}`,\n      ap_location_spend: `?unit_id=${userId}&group_id=${group_id}`,\n      gl_subcategory_spend: `?unit_id=${userId}&group_id=${group_id}`,\n      aggregate_item_spend: `?unit_id=${userId}&group_id=${group_id}`,\n      item_trend_report: `?unit_id=${userId}&group_id=${group_id}`,\n      item_stats_table: `?unit_id=${userId}&group_id=${group_id}`,\n      vendor_spend_chart: `?unit_id=${userId}&group_id=${group_id}`,\n    }\n\n    return chartTypeToParams[chartType]\n  }\n\n  unit_ids(props = this.props, division = this.widget().division) {\n    // return array of relevant selected user ids\n    const { locations } = props.company\n    if (_.isEmpty(division)) {\n      return locations\n        .filter((l) => l.type === 'location' && l.checked)\n        .map((l) => l.unit_id)\n    }\n    return locations\n      .filter(\n        (l) => l.type === 'location' && l.checked && l.region === division.name,\n      )\n      .map((l) => l.unit_id)\n  }\n\n  widget(props = this.props) {\n    const { id, widgets } = props\n    return widgets.find((w) => w.id === id)\n  }\n\n  getDateParams(props = this.props) {\n    // format date parameters from redux state\n    if (_.isEmpty(props.reports)) return ''\n    const { startDate, endDate } = props.reports\n    return `&start_date=${moment(startDate).format(\n      'MM/DD/YYYY',\n    )}&end_date=${moment(endDate).format('MM/DD/YYYY')}`\n  }\n\n  wrapChart(chart) {\n    // wrap chart in container for high charts functionality and styling\n    const tables = ['aggregate_item_spend', 'invoices_by_vendor_gl']\n    if (tables.includes(this.widget().chartType)) return chart\n    return (\n      <div\n        className=\"fruit-main-chart\"\n        style={{ height: this.props.widgetHeight * 0.65 || 0 }}\n      >\n        {chart}\n      </div>\n    )\n  }\n\n  renderChart() {\n    // put chart in container if its not a table\n    const { chartType } = this.widget()\n    const chart = this.getChart(chartType)\n    return this.wrapChart(chart)\n  }\n\n  params(props = this.props, chartType = null) {\n    const chart = chartType || this.widget(props).chartType\n    switch (chart) {\n      case 'ap_divisions_spend':\n        return this.regionSpendChartParams(props)\n      case 'ap_location_spend':\n        return this.locationSpendParams(props)\n      case 'gl_subcategory_spend':\n        return this.glSpendParams(props)\n      case 'aggregate_item_spend':\n        return this.aggItemsParams(props)\n      case 'item_trend_report':\n        return this.itemTrendParams(props)\n      case 'ap_vendor_by_gl_location':\n        return this.aggItemsParams(props)\n      case 'invoices_by_vendor_gl':\n        return this.invoicesByVendorGlParams(props)\n      default:\n        return ''\n    }\n  }\n\n  getChart(chartType) {\n    // return chart based on chart type in redux state\n    const container = `chart-${this.props.id}`\n    const { reports, id } = this.props\n    const { division } = this.widget()\n    const agg_report = reports[id].aggregate_item_spend\n    switch (chartType) {\n      case 'ap_divisions_spend':\n        return (\n          <RegionSpendChart\n            onDataClick={(event) =>\n              this.handleRegionSpendChartClick(event.point.category)\n            }\n            container={container}\n            type={chartType}\n            widthRatio={0.85}\n            heightRatio={0.45}\n            fullscreenHeightRatio={0.75}\n            {...this.props}\n          />\n        )\n      case 'ap_location_spend':\n        return (\n          <MultiLocationSpendChart\n            onDataClick={this.handleMultiLocationClick}\n            container={container}\n            divisionName={division ? division.name : ''}\n            type={chartType}\n            widthRatio={0.85}\n            heightRatio={0.5}\n            fullscreenHeightRatio={0.75}\n            {...this.props}\n          />\n        )\n      case 'gl_subcategory_spend':\n        return (\n          <div>\n            <GlSubcategorySpendChart\n              onDataClick={this.handleGLSpendClick}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.65}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'vendor_spend_chart':\n        return (\n          <div>\n            <button\n              className=\"btn btn-small btn-primary\"\n              onClick={() => this.toggleChart('gl_subcategory_spend')}\n            >\n              Show GL Subcategory Report\n            </button>\n            <VendorSpendChart\n              onDataClick={this.handleVendorSpendClick}\n              container={container}\n              type=\"vendor_spend_report\"\n              widthRatio={0.85}\n              heightRatio={0.65}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'aggregate_item_spend':\n        return (\n          <AggregateItemsSpendContainer\n            chartType={chartType}\n            toggleChart={this.toggleChart}\n            handleAggregateItemsSpendTableClick={\n              this.handleAggregateItemsSpendTableClick\n            }\n            {...this.props}\n          />\n        )\n      case 'ap_vendor_by_gl_location':\n        const invoiceTableToggleVisible = agg_report\n          ? agg_report.length > 0\n          : true\n        const display = invoiceTableToggleVisible ? 'inherit' : 'none'\n        return (\n          <div style={{ height: '60%' }}>\n            <button\n              className=\"btn btn-small btn-primary\"\n              onClick={() => this.toggleChart('aggregate_item_spend')}\n              style={{ marginBottom: '1em', display }}\n            >\n              Show Item Spend\n            </button>\n            <VendorByGLLocationChart\n              type={chartType}\n              container={container}\n              onDataClick={this.goToInvoicesByVendorGL}\n              widthRatio={0.85}\n              heightRatio={0.55}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'item_trend_report':\n        return (\n          <ItemTrendChart\n            type={chartType}\n            item_name={this.widget().item_name}\n            container={container}\n            widthRatio={0.9}\n            heightRatio={0.4}\n            fullscreenHeightRatio={0.75}\n            onDataClick={this.handleItemTrendClick}\n            {...this.props}\n          />\n        )\n      case 'invoices_by_vendor_gl':\n        return (\n          <InvoiceTable\n            container={container}\n            type={chartType}\n            widthRatio={0.85}\n            heightRatio={0.75}\n            showPagination={!!this.props.fullscreen}\n            {...this.props}\n          />\n        )\n      default:\n        return <div>Whoops!</div>\n    }\n  }\n\n  drilldown(chartType, breadcrumb) {\n    // set chart type and breadcrumbs in redux\n    // called in every chart click with drilldown functionality\n    const { id } = this.props\n    this.props.onExpandClick(id)\n    this.props.setChartType(id, chartType)\n    this.props.pushHistory(id, chartType, breadcrumb)\n  }\n\n  // below are functions for handling drilldown events and\n  // defining parameters to be sent in api calls\n\n  toggleChart(chartType) {\n    const { id } = this.props\n    const { unit_id } = this.props.reports[id]\n    const { gl_code, gl_name } = this.widget()\n    this.props.setChartType(id, chartType)\n    this.props.sliceHistory(id, this.widget().history.length - 2)\n    this.props.pushHistory(id, chartType, gl_name)\n    this.props.fetchReport(\n      id,\n      chartType,\n      `?unit_id=${unit_id}&gl_code=${gl_code}${this.getDateParams()}`,\n    )\n  }\n\n  goToInvoicesByVendorGL(event) {\n    const { id, reports } = this.props\n    const vendor_name = event.point.x\n    const { vendor_id } = reports[id].ap_vendor_by_gl_location.find(\n      (vendor) => vendor.name === vendor_name,\n    )\n    this.props.fetchReport(\n      id,\n      'invoices_by_vendor_gl',\n      this.invoicesByVendorGlParams(this.props, vendor_id),\n    )\n    setTimeout(() => {\n      this.props.setWidgetState(id, { vendor_id })\n      this.drilldown('invoices_by_vendor_gl', vendor_name)\n    }, 100)\n  }\n\n  invoicesByVendorGlParams(props, vendor_id = this.widget().vendor_id) {\n    const { id } = this.props\n    const { unit_id } = this.props.reports[id]\n    const { gl_code } = this.widget()\n    return `?unit_ids=${unit_id}&vendor_id=${vendor_id}&gl_code=${gl_code}${this.getDateParams(\n      props,\n    )}`\n  }\n\n  regionSpendChartParams(props = this.props, division_id) {\n    const { group_id, user_id } = this.props.company\n    return `?group_id=${group_id}&user_id=${user_id}&unit_ids=${this.unit_ids(\n      props,\n      null,\n    )}${this.getDateParams(props)}`\n  }\n\n  handleRegionSpendChartClick(division_name) {\n    const { id, reports } = this.props\n    const { ap_divisions_spend } = reports[id]\n    const idx = ap_divisions_spend.findIndex((r) => r.name === division_name)\n    const division = ap_divisions_spend[idx]\n    this.props.fetchReport(\n      this.props.id,\n      'ap_location_spend',\n      this.locationSpendParams(this.props, division),\n    )\n    setTimeout(() => {\n      this.props.setWidgetState(id, { division })\n      this.drilldown('ap_location_spend', division_name)\n      this.props.setCompanyData({ region: division_name })\n    }, 100)\n  }\n\n  goToRegionSpendChart(division) {\n    // handle auto navigate to units chart\n    const { id } = this.props\n    const division_name = division.name\n\n    // this.props.setWidgetState(id, { division })\n    this.props.fetchReport(\n      this.props.id,\n      'ap_location_spend',\n      this.locationSpendParams(this.props, division),\n    )\n    setTimeout(() => {\n      this.props.setChartType(id, 'ap_location_spend')\n      this.props.pushHistory(id, 'ap_location_spend', division_name)\n      this.props.setWidgetState(id, { division })\n    }, 100)\n  }\n\n  locationSpendParams(props = this.props, division = this.widget().division) {\n    const { group_id, user_id, locations } = props.company\n    // handle auto navigate to units chart\n    if (!division) {\n      division = allDivisions(locations)[0]\n      this.props.setWidgetState(props.id, { division })\n    }\n    return `?division_id=${\n      division.division_id\n    }&user_id=${user_id}&group_id=${group_id}&unit_ids=${this.unit_ids(\n      props,\n      division,\n    )}${this.getDateParams(props)}`\n  }\n\n  handleMultiLocationClick(event) {\n    const { unit_id } = event.point\n    this.props.fetchReport(\n      this.props.id,\n      'gl_subcategory_spend',\n      `?unit_id=${unit_id}${this.getDateParams()}`,\n    )\n    setTimeout(() => {\n      this.drilldown('gl_subcategory_spend', event.point.category)\n      this.props.setReportAttribute(this.props.id, { unit_id })\n      this.props.setWidgetState(this.props.id, { unit_id })\n    }, 100)\n  }\n\n  glSpendParams(props = this.props) {\n    const { unit_id } = this.widget()\n    return `?unit_id=${unit_id}${this.getDateParams(props)}`\n  }\n\n  handleWeeklySpendClick(event) {\n    const { category } = event.point\n    this.drilldown('gl_subcategory_spend', category)\n    const { unit_id } = this.props.reports[this.props.id]\n    this.props.fetchReport(\n      this.props.id,\n      'gl_subcategory_spend',\n      `?unit_id=${unit_id}${this.getDateParams()}`,\n    )\n  }\n\n  handleGLSpendClick(event) {\n    const { reports, id } = this.props\n    const { name } = event.point\n    const gl = reports[id].gl_subcategory_spend.gl_spend.find(\n      (gl) => gl.gl_name === name,\n    )\n    this.props.fetchReport(\n      this.props.id,\n      'aggregate_item_spend',\n      this.aggItemsParams(this.props, gl.gl_code),\n    )\n\n    setTimeout(() => {\n      this.props.setWidgetState(id, {\n        gl_code: gl.gl_code,\n        gl_name: gl.gl_name,\n      })\n      this.drilldown('aggregate_item_spend', event.point.name)\n    }, 100)\n  }\n\n  handleVendorSpendClick(event) {\n    const vendor_name = event.point.category\n    const { id } = this.props\n    this.props.fetchReport(\n      this.props.id,\n      'aggregate_item_spend',\n      this.aggItemsParams(),\n    )\n    setTimeout(() => {\n      this.props.setWidgetState(id, { vendor_name })\n      this.drilldown('aggregate_item_spend', vendor_name)\n    }, 100)\n  }\n\n  aggItemsParams(props = this.props, gl_code = this.widget().gl_code) {\n    const { unit_id } = this.widget(props)\n    return `?unit_id=${unit_id}&gl_code=${gl_code}${this.getDateParams(props)}`\n  }\n\n  handleAggregateItemsSpendTableClick(rowInfo) {\n    const { inventory_item_id, item_name } = rowInfo.original\n    const { reports, id } = this.props\n    const { vendor_id } = reports[id].aggregate_item_spend[rowInfo.index]\n\n    this.props.fetchReport(\n      this.props.id,\n      'item_trend_report',\n      `?id=${inventory_item_id}&vendor_id=${vendor_id}${this.getDateParams()}`,\n    )\n    setTimeout(() => {\n      this.drilldown('item_trend_report', item_name)\n      this.props.setWidgetState(id, {\n        item_name,\n        inventory_item_id,\n        vendor_id,\n      })\n    }, 100)\n  }\n\n  itemTrendParams(props = this.props) {\n    const { inventory_item_id, vendor_id } = this.widget()\n    return `?id=${inventory_item_id}&vendor_id=${vendor_id}${this.getDateParams(\n      props,\n    )}`\n  }\n\n  handleItemTrendClick(e) {\n    const { id } = this.props\n    const { imageLink } =\n      this.props.reports[id].item_trend_report.items[e.point.index]\n    if (_.isEmpty(imageLink)) {\n      return\n    }\n    window.open(imageLink, '_blank')\n  }\n\n  onCompressClick() {\n    this.goToInitialChart()\n    this.props.onCompressClick()\n  }\n\n  goToInitialChart() {\n    const { id } = this.props\n    const { intitialChartType, division } = this.widget()\n    if (_.isEmpty(division)) return\n    const breadcrumb =\n      intitialChartType === 'ap_divisions_spend' ? 'divisions' : division.name\n    this.props.setChartType(id, intitialChartType)\n    this.props.sliceHistory(id, -1)\n    this.props.pushHistory(id, intitialChartType, breadcrumb)\n  }\n\n  render() {\n    const { id, reports } = this.props\n    const userId = reports[id] ? reports[id].unit_id : ''\n    // const urlParams = `?unit_id=${userId}&group_id=stellands`\n    const { chartType } = this.widget()\n\n    if (!chartType) return <div></div>\n    return (\n      <Widget\n        title=\"AP Spend\"\n        type={contextRoutes[chartType]}\n        urlParams={this.urlParams(userId, chartType)}\n        shouldFetch={false}\n        history={this.props.history}\n        {...this.props}\n        onCompressClick={this.onCompressClick}\n      >\n        {this.renderChart()}\n      </Widget>\n    )\n  }\n}\n\nAPSpendWidget.propTypes = {}\n\nconst mapStateToProps = (state) => ({\n  widgets: state.widgets.widgets,\n  reports: state.reports,\n  startDate: state.reports.startDate,\n  endDate: state.reports.endDate,\n  company: state.company,\n  dashboard: state.dashboard,\n  byInvoiceDate: state.widget_settings.ap_spend.byInvoiceDate,\n})\n\nexport default connect(mapStateToProps, {\n  setDrilldownIndex,\n  setReportAttribute,\n  fetchReport,\n  pushHistory,\n  sliceHistory,\n  setChartType,\n  setCompanyData,\n  setWidgetState,\n  addReport,\n  setDefaultTrendBy,\n})(APSpendWidget)\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport DownloadCSV from '../DownloadCSV'\nimport './AggregateItemsSpendContainer.css'\nimport AggregateItemsSpendTable from './AggregateItemsSpendTable'\n\nclass AggregateItemsSpendContainer extends Component {\n  render() {\n    const {\n      toggleChart,\n      handleAggregateItemsSpendTableClick,\n      chartType,\n      widgets,\n      id,\n    } = this.props\n    const widget = _.find(widgets, { id })\n    const gl_name = widget ? widget.gl_name.toLowerCase() : ''\n\n    return (\n      <div className=\"agg-item-spend\" style={{ height: '95%' }}>\n        <div>\n          <div className=\"agg-item-spend-buttons-container\">\n            <button\n              className=\"btn btn-small btn-primary\"\n              onClick={() => toggleChart('ap_vendor_by_gl_location')}\n              style={{ margin: '1em' }}\n            >\n              Show Vendor Spend\n            </button>\n          </div>\n          <div className=\"agg-item-spend-csv-container\">\n            <DownloadCSV\n              tableSelector=\".layout .agg-item-spend .rt-table\"\n              fileName={`ap_spend_${gl_name}.csv`}\n              isReactTable\n            />\n          </div>\n          <div className=\"clearfix\"></div>\n        </div>\n        <AggregateItemsSpendTable\n          onDataClick={handleAggregateItemsSpendTableClick}\n          showPagination={!!this.props.fullscreen}\n          type={chartType}\n          {...this.props}\n        />\n      </div>\n    )\n  }\n}\n\nexport default AggregateItemsSpendContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/AggregateItemsSpendTable.css'\nimport { formatIntoDollars, formatPercent } from 'utils'\nimport Table from '../Table'\n\nclass AggregateItemsSpendTable extends Component {\n  constructor(props) {\n    super(props)\n    this.parseTableData = this.parseTableData.bind(this)\n  }\n\n  parseTableData() {\n    const reportData =\n      this.props.reports[this.props.id].aggregate_item_spend || []\n    return reportData.map((d) => ({\n      inventory_item_id: d.product_id,\n      vendor_name: d.vendor,\n      item_name: d.product_name,\n      pack_size: d.pack_size,\n      item_rate: parseFloat(d.rate),\n      item_spend: parseFloat(d.total_spend),\n      percent_change: parseFloat(d.price_change),\n    }))\n  }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Vendor Name',\n        accessor: 'vendor_name',\n      },\n      {\n        Header: 'Item Name',\n        accessor: 'item_name',\n      },\n      {\n        Header: 'Item Rate',\n        accessor: 'item_rate',\n        Cell: (data) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatIntoDollars(data.row.item_rate)}\n          </div>\n        ),\n      },\n      {\n        Header: 'Purchase Unit',\n        accessor: 'pack_size',\n        width: 125,\n        Cell: (data) => <div>{data.row.pack_size}</div>,\n      },\n      {\n        Header: 'Total Spend',\n        accessor: 'item_spend',\n        Cell: (data) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatIntoDollars(data.row.item_spend)}\n          </div>\n        ),\n      },\n      {\n        Header: 'Percent Change',\n        accessor: 'percent_change',\n        Cell: (data) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatPercent(data.row.percent_change)}\n          </div>\n        ),\n      },\n    ]\n\n    const { reports, id } = this.props\n    const error = reports[id].errors\n      ? reports[id].errors.aggregate_item_spend\n      : null\n    return (\n      <Table\n        columns={columns}\n        data={this.parseTableData()}\n        reports={this.props.reports[this.props.id].aggregate_item_spend}\n        onDataClick={this.props.onDataClick}\n        error={error}\n        emptyDataMessage=\"No Itemized Invoices\"\n        defaultPageSize={\n          this.props.showPagination ? 20 : this.parseTableData().length\n        }\n        showPagination={this.props.showPagination}\n        heightRatio={this.props.showPagination ? null : 0.7}\n      />\n    )\n  }\n}\n\nAggregateItemsSpendTable.propTypes = {}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(AggregateItemsSpendTable)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction getChartData(report, dataIsEmpty) {\n  if (dataIsEmpty) {\n    return {}\n  }\n  const subcategories = report.gl_subcategory_spend.gl_spend\n  const data = subcategories.map((subcat) => [\n    subcat.gl_name,\n    parseFloat(subcat.gl_amount),\n  ])\n\n  const series = [\n    {\n      name: 'GL Spend',\n      colorByPoint: true,\n      data: data.sort((a, b) => a[1] - b[1]),\n    },\n  ]\n\n  const chartConfig = {\n    chart: {\n      type: 'pie',\n    },\n    title: {\n      text: '',\n    },\n    subtitle: {\n      text: '',\n    },\n    plotOptions: {\n      pie: {\n        dataLabels: {\n          enabled: true,\n          formatter() {\n            return `${this.key}<br>${formatIntoDollars(this.y)}`\n          },\n        },\n      },\n    },\n\n    tooltip: {\n      enabled: true,\n      formatter() {\n        return `${this.key}<br>${formatIntoDollars(this.y)}`\n      },\n    },\n    series,\n  }\n  return chartConfig\n}\nclass APSpendDrilldownGlSubcategorySpendChart extends Component {\n  render() {\n    const theme = [\n      '#058DC7',\n      '#800080',\n      '#24CBE5',\n      '#DDDF00',\n      '#50B432',\n      '#ED561B',\n      '#64E572',\n      '#FF9655',\n      '#6AF9C4',\n    ]\n    const report = this.props.reports[this.props.id]\n    const dataIsEmpty =\n      _.isEmpty(report) ||\n      _.isEmpty(report.gl_subcategory_spend) ||\n      _.isEmpty(report.gl_subcategory_spend.gl_spend)\n    return (\n      <ChartWrapper\n        dataIsPresent={!dataIsEmpty}\n        config={getChartData(report, dataIsEmpty)}\n        modules={[]}\n        theme={theme}\n        {...this.props}\n      />\n    )\n  }\n}\n\nAPSpendDrilldownGlSubcategorySpendChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => {\n  const { reports } = state\n  return { reports }\n}\n\nexport default connect(mapStateToProps)(APSpendDrilldownGlSubcategorySpendChart)\n","import _ from 'lodash'\nimport moment from 'moment'\nimport React from 'react'\nimport ReactTable from 'react-table'\nimport { formatIntoDollars } from 'utils'\n\nclass ItemDataTable extends React.Component {\n  formatDate(dateStr) {\n    if (_.isEmpty(dateStr)) {\n      return ''\n    }\n    return moment(new Date(dateStr)).format('MM/DD/YYYY')\n  }\n\n  render() {\n    const { trend_by } = this.props\n    const dataMap = this.props.items.map((item) => {\n      const { rate, qty } = item\n      let totalSpend = 0\n      if (rate && qty) {\n        totalSpend = rate * qty\n      }\n      return { ...item, totalSpend: totalSpend }\n    })\n    const columns = [\n      {\n        Header: 'Vendor Name',\n        accessor: 'vendor',\n        width: 200,\n      },\n      {\n        Header: 'Item Name',\n        accessor: 'product_name',\n        width: 275,\n      },\n      {\n        Header: 'Rate',\n        accessor: 'rate',\n        width: 125,\n        Cell: (data) => {\n          const { rate } = data.row\n          return (\n            <div style={{ textAlign: 'right' }}>{formatIntoDollars(rate)}</div>\n          )\n        },\n      },\n      {\n        Header: 'Total Spend',\n        accessor: 'totalSpend',\n        width: 125,\n        Cell: (data) => {\n          const { totalSpend } = data.row\n          return (\n            <div style={{ textAlign: 'right' }}>\n              {formatIntoDollars(totalSpend)}\n            </div>\n          )\n        },\n      },\n      {\n        Header: 'Invoice Date',\n        accessor: 'date',\n        //todo: Verify Red Logic\n        Cell: (data) => {\n          let { date } = data.row\n          return <div>{this.formatDate(date)}</div>\n        },\n      },\n      {\n        Header: 'Submitted Date',\n        accessor: 'submittedDate',\n        Cell: (data) => {\n          const { submittedDate } = data.row\n          return <div>{this.formatDate(submittedDate)}</div>\n        },\n      },\n      {\n        Header: 'Image',\n        accessor: 'imageLink',\n        Cell: (data) => {\n          const { imageLink } = data.row\n          if (imageLink) {\n            return (\n              <div style={{ textAlign: 'left' }}>\n                {_.isEmpty(imageLink) ? (\n                  ''\n                ) : (\n                  <a target={'_blank'} href={imageLink}>\n                    View Image\n                  </a>\n                )}\n              </div>\n            )\n          } else {\n            return <div></div>\n          }\n        },\n      },\n    ]\n    return (\n      <ReactTable\n        data={dataMap}\n        columns={columns}\n        defaultPageSize={20}\n        defaultSorted={[\n          {\n            id: trend_by === 'invoice_date' ? 'date' : 'submittedDate',\n            asc: true,\n          },\n        ]}\n      />\n    )\n  }\n}\n\nexport default ItemDataTable\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport DownloadCSV from \"../DownloadCSV\"\nimport Stats from '../Stats'\nimport ItemDataTable from './ItemDataTable'\nimport './ItemTrendChart.css'\nimport ItemTrendChartByDate from './ItemTrendChartByDate'\n\nclass ItemTrendChart extends Component {\n\n  generateItems(trendBy){\n      const { reports, id } = this.props\n      const { item_trend_report } = reports[id]\n      if (_.isEmpty(item_trend_report)) return []\n      const byDate = {}\n      let sortedItems = _.sortBy(item_trend_report.items, (item)=>{\n          return Date.parse(new Date(item[trendBy]))\n      })\n      sortedItems.forEach((d) => {\n          const {date, submittedDate} = d\n          const queryKey = trendBy === \"invoice_date\" ? date : submittedDate\n          if (byDate[queryKey]) {\n              const average = byDate[queryKey]\n              const numItems = average.numItems + 1\n              const total_qty = parseFloat(average.total_qty) + parseFloat(d.qty)\n              const total_rate = parseFloat(average.total_rate) + parseFloat(d.rate)\n              byDate[queryKey] = {\n                  ...average,\n                  total_qty,\n                  total_rate,\n                  qty: (total_qty / numItems),\n                  rate: (total_rate / numItems),\n                  isAverage: true,\n                  numItems\n              }\n          } else {\n              byDate[queryKey] = {\n                  ...d,\n                  total_qty: parseFloat(d.qty),\n                  total_rate: parseFloat(d.rate),\n                  numItems: 1,\n                  date: date,\n                  submittedDate: submittedDate\n              }\n          }\n      })\n      let items = Object.values(byDate).map( item => {\n          const {submittedDate, date} = item\n          const queryKey = trendBy === \"invoice_date\" ? date : submittedDate\n          return ({\n              x: Date.parse(queryKey),\n              y: parseFloat(item.rate),\n              date: date,\n              submittedDate: submittedDate,\n              className: _.isEmpty(item.imageLink) ? 'no-pointer' : '',\n              ...item\n          })\n      })\n      items = _.sortBy(items, 'x')\n      return items\n  }\n\n  render() {\n    const { id, type, reports, trend_by, item_name } = this.props\n    const downloadName = item_name.replace(/[^\\w\\s]/gi, '').split(\" \").join(\"_\").toLowerCase()\n    const data = reports[id][type]\n    const items = data ? data.items : []\n      return (\n      <div>\n          <div className={\"ap-spend-download-csv-container\"}>\n              <DownloadCSV tableSelector={\".layout .ap-spend-item-data-table .rt-table\"}\n                           fileName={`${downloadName}.csv`}\n                           isReactTable={true}\n              />\n          </div>\n          <div className=\"clearfix\"></div>\n          <ItemTrendChartByDate\n              trend_by={trend_by}\n              items={this.generateItems(trend_by)}\n              item_name={item_name}\n          />\n          <p className={\"disclaimer\"}>\n              Disclaimer: When looking for item price detail run report by invoice date.\n          </p>\n          <Stats ratesAndDates={items} />\n          <div className={\"ap-spend-item-data-table\"}>\n              <ItemDataTable items={items} trend_by={trend_by}/>\n          </div>\n      </div>\n    )\n  }\n}\n\nItemTrendChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.5\n}\n\nItemTrendChart.propTypes = {\n  container: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => {\n  const { reports, ap_spend } = state\n  return {\n      reports,\n      trend_by: ap_spend.trend_by\n  }\n}\n\n\nexport default connect(mapStateToProps, { })(ItemTrendChart)\n","import Highcharts from 'highcharts'\nimport _ from 'lodash'\nimport moment from \"moment\"\nimport React, { Component } from 'react'\n\nconst theme = [\n    '#058DC7',\n    '#800080',\n    '#24CBE5',\n    '#DDDF00',\n    '#50B432',\n    '#ED561B',\n    '#64E572',\n    '#FF9655',\n    '#6AF9C4'\n]\n\nclass ItemTrendChartByDate extends Component {\n    componentDidMount(){\n        this.updateChart()\n    }\n    componentDidUpdate(){\n        this.updateChart()\n    }\n\n    updateChart(){\n        const {items, item_name, trend_by} = this.props\n        Highcharts.theme = { colors: theme }\n\n        this.chart = Highcharts.chart(this.itemTrendChartByDate, {\n            title: {\n                text: `${item_name} Price Trend`\n            },\n            xAxis: {\n                type: 'datetime',\n                title: {\n                    text: trend_by === \"invoice_date\" ? \"Invoice Date\" : \"Submitted Date\"\n                }\n            },\n            yAxis: {\n                title: {\n                    text: 'Rate ($)'\n                }\n            },\n            legend: {\n                enabled: false\n            },\n            plotOptions: {\n                line: {\n                    marker: {\n                        enabled: true\n                    }\n                },\n                series: {\n                    label: {\n                        connectorAllowed: false\n                    },\n                    pointStart: 2010,\n                    point: {\n                        events: {\n                            click: (e)=>{\n                                const {imageLink} = e.point\n                                if (_.isEmpty(imageLink)) {\n                                    return\n                                }\n                                window.open(imageLink,'_blank');\n                            }\n                        }\n                    },\n                },\n            },\n\n            series: [\n                {\n                    name: 'Items',\n                    data: items\n                }\n            ],\n\n            responsive: {\n                rules: [{\n                    condition: {\n                        maxWidth: 500\n                    },\n                    chartOptions: {\n                        legend: {\n                            layout: 'horizontal',\n                            align: 'center',\n                            verticalAlign: 'bottom'\n                        }\n                    }\n                }]\n            },\n            tooltip: {\n                formatter: function() {\n                    const item = this.points[0].point\n                    let {submittedDate} = item\n                    submittedDate = moment(new Date(submittedDate)).format(\"MM/DD/YYYY\")\n                    const averageText = item.isAverage ? `<br/><div style='color:orange'>(Average of ${item.numItems} items)<div>` : ''\n                    var toolTip = \"\";\n                    toolTip += \"Vendor: \" + item.vendor + '<br/>'\n                    if (trend_by === \"invoice_date\"){\n                        toolTip += \"Invoice Date: \" + moment(Date.parse(item.date)).format('MM/DD/YYYY') + '<br/>'\n                    } else {\n                        toolTip += `Submitted Date: ${submittedDate} <br/>`\n                    }\n                    toolTip += \"Rate: $\" + item.rate.toFixed(2) + '<br/>'\n                    toolTip += \"Amount: $\" + (parseFloat(item.rate) * parseFloat(item.qty)).toFixed(2) + '<br/>'\n                    toolTip += averageText\n                    return toolTip;\n                },\n                shared: true,\n                useHTML: true,\n                xDateFormat: '%m/%d/%Y'\n            }\n        })\n    }\n\n    render(){\n        return (<div ref={(el) => this.itemTrendChartByDate = el} style={{ display: 'flex' }} className='chart' />)\n    }\n}\n\nexport default ItemTrendChartByDate","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/MultiLocationChart.css'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nclass APSpendDrilldownMultiLocationSpendChart extends Component {\n  constructor(props) {\n    super(props)\n    this.getChartData = this.getChartData.bind(this)\n    this.calculateSum = this.calculateSum.bind(this)\n  }\n\n  parseData(vendor_hash_data) {\n    if (_.isEmpty(vendor_hash_data)) {\n      return []\n    }\n    return vendor_hash_data.map((loc) => loc.total_spend)\n  }\n\n  calculateSum() {\n    const vendor_hash_data = this.props.reports[this.props.id].ap_location_spend\n    if (_.isEmpty(vendor_hash_data)) {\n      return 0\n    }\n    const data = this.parseData(vendor_hash_data)\n\n    return data.reduce((a, b) => a + b)\n  }\n\n  getChartData(unitData) {\n    if (!unitData) {\n      return {}\n    }\n    const data = unitData.map((unit) => ({\n      y: unit.total_spend,\n      unit_id: unit.unit_id,\n    }))\n\n    const chartConfig = {\n      chart: {\n        type: 'bar',\n      },\n      title: {\n        text: '',\n      },\n      xAxis: {\n        categories: unitData.map((d) => d.unit_name),\n        title: {\n          text: null,\n        },\n        labels: {\n          step: 1,\n        },\n      },\n      yAxis: {\n        labels: {\n          overflow: 'allow',\n          step: 1,\n        },\n      },\n      tooltip: {\n        valueSuffix: '',\n        valuePrefix: '$',\n        formatter() {\n          return formatIntoDollars(this.y)\n        },\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true,\n            allowOverlap: true,\n          },\n        },\n      },\n      credits: {\n        enabled: false,\n      },\n      series: [\n        {\n          name: 'Locations',\n          data,\n          dataLabels: {\n            enabled: true,\n            allowOverlap: true,\n            formatter() {\n              return formatIntoDollars(this.y)\n            },\n          },\n        },\n      ],\n    }\n\n    return chartConfig\n  }\n\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { divisionName } = this.props\n    const { ap_location_spend } = this.props.reports[this.props.id]\n    return (\n      <div>\n        <div className=\"multi-location-sum\">\n          {divisionName}: {formatIntoDollars(this.calculateSum())}\n        </div>\n        <ChartWrapper\n          dataIsPresent={!_.isEmpty(ap_location_spend)}\n          config={this.getChartData(ap_location_spend)}\n          modules={[]}\n          theme={theme}\n          {...this.props}\n        />\n      </div>\n    )\n  }\n}\n\nAPSpendDrilldownMultiLocationSpendChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  reports: state.reports,\n  company: state.company,\n})\n\nexport default connect(mapStateToProps)(APSpendDrilldownMultiLocationSpendChart)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/MultiLocationChart.css'\nimport { formatIntoDollars, sortDivisions } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\n\n\nclass RegionSpendChart extends Component {\n  getChartData(divisions) {\n    if (_.isEmpty(divisions)) return {}\n    const sortedDivisions = sortDivisions(divisions)\n    const data = sortedDivisions.map(div => div.amount)\n    const names = sortedDivisions.map(div => div.name)\n\n    // const vendorValues = Object.values(vendor_hash_data).slice(0, 10);\n\n    const chartConfig = {\n       chart: {\n           type: 'bar'\n       },\n       title: {\n           text: ''\n       },\n       xAxis: {\n           categories: names,\n           title: {\n               text: null\n           }\n       },\n       yAxis: {\n           labels: {\n               overflow: 'justify'\n           }\n       },\n       tooltip: {\n           valueSuffix: '',\n           valuePrefix: '$',\n           formatter() {\n             return formatIntoDollars(this.y)\n           }\n       },\n       plotOptions: {\n           bar: {\n               dataLabels: {\n                   enabled: true\n               }\n           }\n       },\n       legend: { enabled: false},\n       credits: {\n           enabled: false\n       },\n       series: [{\n           name: '',\n           data: data,\n           dataLabels: {\n             enabled: true,\n             formatter: function () {\n               return formatIntoDollars(this.y)\n             }\n           }\n       }]\n   };\n\n   return chartConfig\n  }\n\n  calculateSum() {\n    const { ap_divisions_spend } = this.props.reports[this.props.id]\n    if (_.isEmpty(ap_divisions_spend)) return 0\n    return ap_divisions_spend.map(div => parseFloat(div.amount)).reduce((a, b) => a + b)\n  }\n\n  render() {\n    const { ap_divisions_spend } = this.props.reports[this.props.id]\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const sum = this.calculateSum()\n\n    return (\n      <div>\n        <div className='multi-location-sum'>Aggregate Company Spend: { formatIntoDollars(sum) }</div>\n        <ChartWrapper\n          dataIsPresent={!_.isEmpty(ap_divisions_spend)}\n          config={this.getChartData(ap_divisions_spend)}\n          modules={[]}\n          theme={theme}\n          {...this.props}\n        />\n      </div>\n    )\n  }\n}\n\n\nRegionSpendChart.propTypes = {\n  container: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => {\n  return { reports: state.reports, company: state.company }\n}\n\n\nexport default connect(mapStateToProps)(RegionSpendChart)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(data) {\n  if (_.isEmpty(data)) return {}\n  const vendors = data.map((vendor) => ({\n    x: vendor.name,\n    y: parseFloat(vendor.amount),\n  }))\n  const chartConfig = {\n    chart: {\n      type: 'pie',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      categories: vendors,\n      title: {\n        text: null,\n      },\n    },\n    yAxis: {\n      title: {\n        text: 'Amount',\n      },\n    },\n    tooltip: {\n      enabled: true,\n      formatter() {\n        return (\n          this.point.x +\n          '<br>' +\n          'Amount: ' +\n          formatIntoDollars(this.y) +\n          '<br>' +\n          'Percent: ' +\n          +Math.round(this.percentage) +\n          '%'\n        )\n      },\n    },\n    plotOptions: {\n      pie: {\n        dataLabels: {\n          enabled: true,\n          formatter() {\n            return `${this.point.x}<br>${formatIntoDollars(this.y)}`\n          },\n        },\n      },\n    },\n    series: [\n      {\n        name: 'Categories',\n        data: vendors,\n      },\n    ],\n  }\n\n  return chartConfig\n}\nclass APVendorByGLLocationChart extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { reports, id, type } = this.props\n    const data = reports[id][type]\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(data)}\n        config={buildConfig(data)}\n        theme={theme}\n        modules={[]}\n        {...this.props}\n      />\n    )\n  }\n}\n\nAPVendorByGLLocationChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nAPVendorByGLLocationChart.propTypes = {\n  container: PropTypes.string.isRequired,\n  widthRatio: PropTypes.number,\n  heightRatio: PropTypes.number,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(APVendorByGLLocationChart)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction getChartData(vendor_hash_data) {\n  if (!vendor_hash_data) {\n    return {}\n  }\n\n  const vendors = vendor_hash_data.map((vendor) => vendor.name)\n  const amounts = vendor_hash_data.map((vendor) => vendor.amount)\n\n  const chartConfig = {\n    chart: {\n      type: 'bar',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      categories: vendors,\n      title: {\n        text: null,\n      },\n    },\n    yAxis: {\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      valueSuffix: '',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'Vendors',\n        data: amounts,\n      },\n    ],\n  }\n\n  return chartConfig\n}\nclass VendorSpendChart extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { reports, id, type } = this.props\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(reports[id][type])}\n        config={getChartData(reports[id][type])}\n        modules={[]}\n        theme={theme}\n        {...this.props}\n      />\n    )\n  }\n}\n\nVendorSpendChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nVendorSpendChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(VendorSpendChart)\n","import Cleave from 'cleave.js/react'\nimport _ from 'lodash'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setWidgetState } from 'actions'\nimport { setTotalBudgetAmount } from 'actions/BudgetVsActualActions'\nimport 'styles/BudgetHeader.css'\nimport { formatIntoDollars, formatPercent } from 'utils'\n\nclass BudgetHeader extends Component {\n  constructor(props) {\n    super(props)\n    this.handleBudgetChange = this.handleBudgetChange.bind(this)\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.setTotalBudgetAmount(this.props.initialBudget)\n  }\n\n  handleBudgetChange(value) {\n    const budget = Number(value)\n    this.props.setWidgetState(this.props.widgetId, { budget })\n    this.props.setTotalBudgetAmount(budget)\n  }\n\n  handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      this.handleBudgetChange(event.target.rawValue)\n    }\n  }\n\n  budgetedSpend(totalBudget) {\n    const { selected_gls, data } = this.props\n    if (!_.isEmpty(data)) {\n      let { Details } = data\n      if (!_.isEmpty(selected_gls) && selected_gls.length > 0) {\n        const budgetFilter = (d) => {\n          const selGls = selected_gls.map((gl) => parseInt(gl.value, 10))\n          return selGls.includes(d.Id)\n        }\n        Details = Details.filter(budgetFilter)\n      }\n      const sumReducer = (acc, curr) => acc + curr\n      const budgetedAmounts = Details.map(\n        (d) => d.TotalSalesBudgetedPercent * totalBudget,\n      )\n      if (budgetedAmounts.length > 0) {\n        return budgetedAmounts.reduce(sumReducer)\n      }\n      return 0\n    }\n  }\n\n  spent() {\n    const { selected_gls, data } = this.props\n    if (!_.isEmpty(data)) {\n      let { Details } = data\n      if (!_.isEmpty(selected_gls) && selected_gls.length > 0) {\n        const spentFilter = (d) => {\n          const selGls = selected_gls.map((gl) => parseInt(gl.value, 10))\n          return selGls.includes(d.Id)\n        }\n        Details = Details.filter(spentFilter)\n      }\n      const sumReducer = (acc, curr) => acc + curr\n      const spentAmounts = Details.map((d) => d.Budget)\n      if (spentAmounts.length > 0) {\n        return Details.map((d) => d.SpentAmount).reduce(sumReducer)\n      }\n      return 0\n    }\n  }\n\n  spendingVariance(budgetedSpend, spent) {\n    return parseFloat(budgetedSpend) - parseFloat(spent)\n  }\n\n  render() {\n    const {\n      budget,\n      initialBudget,\n      visible,\n      fullscreen,\n      data: { Sales },\n    } = this.props\n    const thumbnailId = fullscreen ? '' : 'thumbnail-font'\n    const variancePercent =\n      budget === 0\n        ? formatPercent(100)\n        : formatPercent((100 * (Sales - budget)) / budget)\n\n    const budgetedSpend = this.budgetedSpend(budget)\n    const spent = this.spent()\n\n    const spendingVariance = this.spendingVariance(budgetedSpend, spent)\n\n    const varianceClass =\n      spendingVariance < 0 ? 'budget-stat budget-stat-warning' : 'budget-stat'\n\n    return (\n      <div id={thumbnailId} style={{ display: visible ? '' : 'none' }}>\n        <div className=\"budget-stats-container\">\n          <div className=\"budget-stat-group\">\n            <div className=\"budget-stat-label\">Sales</div>\n            <div className=\"budget-stat\">{formatIntoDollars(Sales)}</div>\n          </div>\n          <div className=\"budget-stat-group\">\n            <div className=\"budget-stat-label\">\n              Budget: {formatIntoDollars(initialBudget)}\n            </div>\n            <Cleave\n              options={{\n                numeral: true,\n                prefix: '$',\n                signBeforePrefix: true,\n                rawValueTrimPrefix: true,\n                numeralDecimalScale: 2,\n              }}\n              className=\"budget-stat\"\n              onBlur={(event) => this.handleBudgetChange(event.target.rawValue)}\n              onKeyPress={this.handleKeyPress}\n              value={budget ? budget.toFixed(2) : ''}\n            />\n          </div>\n          <div className=\"budget-stat-group\">\n            <div className=\"budget-stat-label\">Variance $</div>\n            <div className=\"budget-stat\">\n              {formatIntoDollars(Sales - budget)}\n            </div>\n          </div>\n          <div className=\"budget-stat-group\">\n            <div className=\"budget-stat-label\">Variance %</div>\n            <div className=\"budget-stat\">{variancePercent}</div>\n          </div>\n        </div>\n        <div className=\"budget-stats-container level-2\">\n          <div className=\"budget-stat-group\">\n            <div className=\"budget-stat-label\">Budgeted Spend</div>\n            <div className=\"budget-stat\">\n              {formatIntoDollars(budgetedSpend)}\n            </div>\n          </div>\n          <div className=\"budget-stat-group\">\n            <div className=\"budget-stat-label\">Spent</div>\n            <div className=\"budget-stat\">{formatIntoDollars(spent)}</div>\n          </div>\n          <div className=\"budget-stat-group\">\n            <div className=\"budget-stat-label\">Spending Variance $</div>\n            <div className={varianceClass}>\n              {formatIntoDollars(spendingVariance)}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { setWidgetState, setTotalBudgetAmount })(\n  BudgetHeader,\n)\n","import _ from 'lodash'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Select from 'react-select'\r\nimport {\r\n  fetchReport,\r\n  pushHistory,\r\n  setChartType,\r\n  setCompanyData,\r\n  setDrilldownIndex,\r\n  setReportAttribute,\r\n  setWidgetState,\r\n  sliceHistory,\r\n} from 'actions'\r\nimport 'styles/FruitConsumptionWidget.css'\r\nimport { selectedDivisions, selectedUnits } from 'utils'\r\nimport moment from 'moment'\r\nimport AggregateItemsSpendTable from '../ap_spend/AggregateItemsSpendTable'\r\nimport ItemTrendChart from '../ap_spend/ItemTrendChart'\r\nimport VendorByGLLocationChart from '../ap_spend/VendorByGLLocationChart'\r\nimport InvoiceTable from '../vendor_spend/InvoiceTable'\r\nimport Widget from '../Widget'\r\nimport BudgetHeader from './BudgetHeader'\r\nimport CompanyChart from './CompanyChart'\r\nimport DivisionsChart from './DivisionsChart'\r\nimport UnitsChart from './UnitsChart'\r\n\r\nclass CostWidget extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.renderChart = this.renderChart.bind(this)\r\n    this.wrapChart = this.wrapChart.bind(this)\r\n    this.getChart = this.getChart.bind(this)\r\n    this.drilldown = this.drilldown.bind(this)\r\n    this.params = this.params.bind(this)\r\n    this.handleGlClick = this.handleGlClick.bind(this)\r\n    this.handleDivisionClick = this.handleDivisionClick.bind(this)\r\n    this.handleUnitsClick = this.handleUnitsClick.bind(this)\r\n    this.handleVendorClick = this.handleVendorClick.bind(this)\r\n    this.onCompressClick = this.onCompressClick.bind(this)\r\n    this.handleAggregateItemsSpendTableClick =\r\n      this.handleAggregateItemsSpendTableClick.bind(this)\r\n    this.handleItemTrendClick = this.handleItemTrendClick.bind(this)\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    const { id, fullscreen } = this.props\r\n    if (_.isEmpty(this.widget().selectedGls))\r\n      this.props.setWidgetState(id, { selectedGls: [] })\r\n    // set breadcrumb in redux state\r\n    if (!fullscreen) {\r\n      this.props.pushHistory(id, 'budget_vs_actual_company', `Company`)\r\n      // set which chart is shown in redux state\r\n      this.props.setChartType(id, 'budget_vs_actual_company')\r\n      // call the api for the first chart\r\n      this.props.fetchReport(\r\n        this.props.id,\r\n        'budget_vs_actual_company',\r\n        this.budgetVsActualParams(),\r\n      )\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillUpdate(nextProps) {\r\n    const {\r\n      id,\r\n      reports,\r\n      dashboard: { fullscreenOpen },\r\n      byInvoiceDate,\r\n    } = nextProps\r\n    const byInvoiceDateChanged = this.props.byInvoiceDate !== byInvoiceDate\r\n    const lastActiveWidgetId = this.props.dashboard.activeWidget\r\n      ? this.props.dashboard.activeWidget.id\r\n      : null\r\n    const fullscreenDidClose =\r\n      !fullscreenOpen &&\r\n      this.props.dashboard.fullscreenOpen &&\r\n      this.props.dashboard.updatedInFullscreen &&\r\n      this.props.id !== lastActiveWidgetId\r\n    const { chartType } = this.widget(nextProps)\r\n    const { drillUp } = this.widget(nextProps)\r\n    const dateChanged =\r\n      this.props.startDate !== nextProps.startDate ||\r\n      this.props.endDate !== nextProps.endDate\r\n    const locationsChanged = !_.isEqual(\r\n      this.props.company.locations,\r\n      nextProps.company.locations,\r\n    )\r\n    const chartTypeChanged =\r\n      !_.isEqual(this.widget().chartType, this.widget(nextProps).chartType) &&\r\n      drillUp\r\n    // call the api with new dates or locations if changed\r\n    if (nextProps.fullscreen) return\r\n    if (locationsChanged) {\r\n      this.goToInitialChart()\r\n      if (this.widget(nextProps).chartType === 'budget_vs_actual_company') {\r\n        this.props.fetchReport(\r\n          id,\r\n          'budget_vs_actual_company',\r\n          this.budgetVsActualParams(nextProps),\r\n        )\r\n      }\r\n    }\r\n    if (\r\n      dateChanged ||\r\n      chartTypeChanged ||\r\n      fullscreenDidClose ||\r\n      byInvoiceDateChanged\r\n    ) {\r\n      this.props.fetchReport(\r\n        this.props.id,\r\n        this.widget(nextProps).chartType,\r\n        this.params(nextProps),\r\n      )\r\n      this.props.setWidgetState(id, { drillUp: false })\r\n    }\r\n\r\n    if (chartType === 'aggregate_item_spend') {\r\n      if (\r\n        reports[id].aggregate_item_spend &&\r\n        reports[id].aggregate_item_spend.length === 0\r\n      ) {\r\n        this.props.setChartType(id, 'ap_vendor_by_gl_location')\r\n        this.props.fetchReport(\r\n          this.props.id,\r\n          'ap_vendor_by_gl_location',\r\n          this.aggItemsParams(),\r\n        )\r\n      }\r\n    }\r\n\r\n    if (chartType === 'budget_vs_actual_company') {\r\n      const report = reports[id][chartType] || {}\r\n      const budget = report.Budget ? report.Budget : 0\r\n      if (budget !== this.widget(nextProps).initialBudget) {\r\n        this.props.setWidgetState(id, { budget, initialBudget: budget })\r\n      }\r\n    }\r\n  }\r\n\r\n  params(props = this.props) {\r\n    switch (this.widget(props).chartType) {\r\n      case 'budget_vs_actual_company':\r\n        return this.budgetVsActualParams(props)\r\n      case 'budget_vs_actual_divisions':\r\n        return this.byDivisonsParams(props)\r\n      case 'budget_vs_actual_units':\r\n        return this.byUnitsParams(props)\r\n      case 'aggregate_item_spend':\r\n        return this.aggItemsParams(props)\r\n      case 'ap_vendor_by_gl_location':\r\n        return this.aggItemsParams(props)\r\n      case 'invoices_by_vendor_gl':\r\n        return this.invoicesByVendorGlParams(props)\r\n      case 'item_trend_report':\r\n        return this.itemTrendParams(props)\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  onCompressClick() {\r\n    this.goToInitialChart()\r\n    this.props.onCompressClick()\r\n  }\r\n\r\n  widget(props = this.props) {\r\n    const { id, widgets } = props\r\n    return widgets.find((w) => w.id === id)\r\n  }\r\n\r\n  getDateParams(props = this.props) {\r\n    // format date parameters from redux state\r\n    const { startDate, endDate } = props.reports\r\n    return `&startDate=${moment(startDate).format(\r\n      'MM/DD/YYYY',\r\n    )}&endDate=${moment(endDate).format('MM/DD/YYYY')}`\r\n  }\r\n\r\n  wrapChart(chart) {\r\n    // wrap chart in container for high charts functionality and styling\r\n    return <div className=\"fruit-main-chart\">{chart}</div>\r\n  }\r\n\r\n  renderChart() {\r\n    // put chart in container if its not a table\r\n    const { chartType } = this.widget()\r\n    const chartTypeSplit = chartType.split('_')\r\n    const isTable = chartTypeSplit[chartTypeSplit.length - 1] === 'table'\r\n    const chart = this.getChart(chartType)\r\n    if (isTable) return chart\r\n    return this.wrapChart(chart)\r\n  }\r\n\r\n  getChart(chartType) {\r\n    // return chart based on chart type in redux state\r\n    const { reports, id } = this.props\r\n    const container = `chart-${id}`\r\n\r\n    switch (chartType) {\r\n      case 'budget_vs_actual_company':\r\n        return (\r\n          <div>\r\n            <CompanyChart\r\n              onDataClick={this.handleGlClick}\r\n              totalBudgetAmount={this.widget().budget}\r\n              data={reports[id].budget_vs_actual_company}\r\n              container={container}\r\n              type={chartType}\r\n              widthRatio={0.85}\r\n              heightRatio={0.5}\r\n              selectedGls={this.widget().selectedGls.map((gl) => gl.value)}\r\n              fullscreenHeightRatio={0.95}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      case 'budget_vs_actual_divisions':\r\n        return (\r\n          <div>\r\n            <DivisionsChart\r\n              onDataClick={(event) =>\r\n                this.handleDivisionClick(\r\n                  event.point.Id,\r\n                  event.point.Description,\r\n                )\r\n              }\r\n              totalBudgetAmount={this.widget().budget}\r\n              data={reports[id].budget_vs_actual_divisions}\r\n              container={container}\r\n              type={chartType}\r\n              widthRatio={0.85}\r\n              heightRatio={0.55}\r\n              selectedGls={this.widget().selectedGls.map((gl) => gl.value)}\r\n              fullscreenHeightRatio={0.95}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      case 'budget_vs_actual_units':\r\n        return (\r\n          <div>\r\n            <UnitsChart\r\n              onDataClick={this.handleUnitsClick}\r\n              totalBudgetAmount={this.widget().budget}\r\n              data={reports[id].budget_vs_actual_units}\r\n              container={container}\r\n              type={chartType}\r\n              widthRatio={0.85}\r\n              heightRatio={0.55}\r\n              selectedGls={this.widget().selectedGls.map((gl) => gl.value)}\r\n              fullscreenHeightRatio={0.95}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      case 'aggregate_item_spend':\r\n        return (\r\n          <div className=\"agg-item-spend\">\r\n            <AggregateItemsSpendTable\r\n              onDataClick={this.handleAggregateItemsSpendTableClick}\r\n              showPagination={!!this.props.fullscreen}\r\n              type={chartType}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      case 'item_trend_report':\r\n        return (\r\n          <ItemTrendChart\r\n            type={chartType}\r\n            item_name={this.widget().item_name}\r\n            container={container}\r\n            widthRatio={0.9}\r\n            heightRatio={0.4}\r\n            fullscreenHeightRatio={0.75}\r\n            onDataClick={this.handleItemTrendClick}\r\n            {...this.props}\r\n          />\r\n        )\r\n      case 'ap_vendor_by_gl_location':\r\n        const agg_report = reports[id].aggregate_item_spend\r\n        const invoiceTableToggleVisible = agg_report\r\n          ? agg_report.length > 0\r\n          : true\r\n        const display = invoiceTableToggleVisible ? 'inherit' : 'none'\r\n        return (\r\n          <div style={{ height: '60%' }}>\r\n            <button\r\n              className=\"btn btn-small btn-primary\"\r\n              onClick={() => null}\r\n              style={{ marginBottom: '1em', display }}\r\n            >\r\n              Show Item Spend\r\n            </button>\r\n            <VendorByGLLocationChart\r\n              type={chartType}\r\n              container={container}\r\n              onDataClick={this.handleVendorClick}\r\n              widthRatio={0.85}\r\n              heightRatio={0.55}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      case 'invoices_by_vendor_gl':\r\n        return (\r\n          <InvoiceTable\r\n            container={container}\r\n            type={chartType}\r\n            showPagination={!!this.props.fullscreen}\r\n            {...this.props}\r\n          />\r\n        )\r\n      default:\r\n        return <div>Whoops!</div>\r\n    }\r\n  }\r\n\r\n  drilldown(chartType, breadcrumb) {\r\n    // set chart type and breadcrumbs in redux\r\n    // called in every chart click with drilldown functionality\r\n    const { id } = this.props\r\n    this.props.onExpandClick(id)\r\n    this.props.setChartType(id, chartType)\r\n    this.props.pushHistory(id, chartType, breadcrumb)\r\n  }\r\n\r\n  // below are functions for handling drilldown events and\r\n  // defining parameters to be sent in api calls\r\n  budgetVsActualParams(props = this.props) {\r\n    return `?units=${selectedUnits(props.company.locations).map(\r\n      (unit) => unit.unit_id,\r\n    )}${this.getDateParams(props)}`\r\n  }\r\n\r\n  byDivisonsParams(props = this.props, glCode = this.widget().glCode) {\r\n    return `${this.budgetVsActualParams(props)}&glCode=${glCode}`\r\n  }\r\n\r\n  byUnitsParams(\r\n    props = this.props,\r\n    divisionName = this.widget().divisionName,\r\n    divisionId = this.widget().divisionId,\r\n    glCode = this.widget().glCode,\r\n  ) {\r\n    const unitIds = selectedUnits(props.company.locations)\r\n      .filter((unit) => unit.region === divisionName)\r\n      .map((unit) => unit.unit_id)\r\n    return `?units=${unitIds}&divisionId=${divisionId}&glCode=${glCode}${this.getDateParams(\r\n      props,\r\n    )}`\r\n  }\r\n\r\n  aggItemsParams(props = this.props, unitId = this.widget().unitId) {\r\n    const { glCode } = this.widget()\r\n    const { startDate, endDate } = props.reports\r\n    const dateParams = `&start_date=${moment(startDate).format(\r\n      'MM/DD/YYYY',\r\n    )}&end_date=${moment(endDate).format('MM/DD/YYYY')}`\r\n    return `?unit_id=${unitId}&gl_code=${glCode}${dateParams}`\r\n  }\r\n\r\n  itemTrendParams(\r\n    props = this.props,\r\n    inventory_item_id = this.widget().inventory_item_id,\r\n    vendor_id = this.widget().vendor_id,\r\n  ) {\r\n    const { startDate, endDate } = props.reports\r\n    const dateParams = `&start_date=${moment(startDate).format(\r\n      'MM/DD/YYYY',\r\n    )}&end_date=${moment(endDate).format('MM/DD/YYYY')}`\r\n    return `?id=${inventory_item_id}&vendor_id=${vendor_id}${dateParams}`\r\n  }\r\n\r\n  invoicesByVendorGlParams(props, vendorId = this.widget().vendorId) {\r\n    const {\r\n      reports: { startDate, endDate },\r\n    } = this.props\r\n    const { glCode, unitId } = this.widget()\r\n    const dateParams = `&start_date=${moment(startDate).format(\r\n      'MM/DD/YYYY',\r\n    )}&end_date=${moment(endDate).format('MM/DD/YYYY')}`\r\n    return `?unit_ids=${unitId}&vendor_id=${vendorId}&gl_code=${glCode}${dateParams}`\r\n  }\r\n\r\n  handleGlClick(event) {\r\n    const {\r\n      id,\r\n      company: { locations },\r\n    } = this.props\r\n    const { Id, Description } = event.point\r\n    const units = selectedUnits(locations)\r\n    const division = selectedDivisions(locations)[0]\r\n    if (units.length === 1) {\r\n      this.props.setWidgetState(id, { glCode: Id, glName: Description })\r\n      this.props.onExpandClick(id)\r\n      return this.handleDivisionClick(\r\n        division.division_id,\r\n        division.name,\r\n        Id,\r\n        Description,\r\n      )\r\n    }\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      'budget_vs_actual_divisions',\r\n      this.byDivisonsParams(this.props, Id),\r\n    )\r\n    setTimeout(() => {\r\n      this.props.setWidgetState(id, { glCode: Id, glName: Description })\r\n      this.props.onExpandClick(id)\r\n      this.props.pushHistory(id, 'budget_vs_actual_divisions', Description)\r\n      this.props.setChartType(id, 'budget_vs_actual_divisions')\r\n    }, 100)\r\n  }\r\n\r\n  handleItemTrendClick(e) {\r\n    const { id } = this.props\r\n    const { imageLink } =\r\n      this.props.reports[id].item_trend_report.items[e.point.index]\r\n    if (_.isEmpty(imageLink)) {\r\n      return\r\n    }\r\n    window.open(imageLink, '_blank')\r\n  }\r\n\r\n  handleDivisionClick(\r\n    divisionId,\r\n    divisionName,\r\n    glCode = this.widget().glCode,\r\n    description = '',\r\n  ) {\r\n    const { id } = this.props\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      'budget_vs_actual_units',\r\n      this.byUnitsParams(this.props, divisionName, divisionId, glCode),\r\n    )\r\n    setTimeout(() => {\r\n      this.props.setWidgetState(id, { divisionId, divisionName })\r\n      if (!_.isEmpty(description)) {\r\n        divisionName = `${divisionName} (${description})`\r\n      }\r\n\r\n      this.props.pushHistory(id, 'budget_vs_actual_units', divisionName)\r\n      this.props.setChartType(id, 'budget_vs_actual_units')\r\n    }, 100)\r\n  }\r\n\r\n  handleUnitsClick(event) {\r\n    const { id } = this.props\r\n    const { Id, Description } = event.point\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      'aggregate_item_spend',\r\n      this.aggItemsParams(this.props, Id),\r\n    )\r\n    setTimeout(() => {\r\n      this.props.setWidgetState(id, { unitId: Id, unitName: Description })\r\n      this.props.pushHistory(id, 'aggregate_item_spend', Description)\r\n      this.props.setChartType(id, 'aggregate_item_spend')\r\n    }, 100)\r\n  }\r\n\r\n  handleAggregateItemsSpendTableClick(rowInfo) {\r\n    const { inventory_item_id, item_name } = rowInfo.original\r\n    const { reports, id } = this.props\r\n    const { vendor_id } = reports[id].aggregate_item_spend[rowInfo.index]\r\n\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      'item_trend_report',\r\n      this.itemTrendParams(this.props, inventory_item_id, vendor_id),\r\n    )\r\n    setTimeout(() => {\r\n      this.drilldown('item_trend_report', item_name)\r\n      this.props.setWidgetState(id, {\r\n        item_name,\r\n        inventory_item_id,\r\n        vendor_id,\r\n      })\r\n    }, 100)\r\n  }\r\n\r\n  handleVendorClick(event) {\r\n    const { id, reports } = this.props\r\n    const vendor_name = event.point.x\r\n    const { vendor_id } = reports[id].ap_vendor_by_gl_location.find(\r\n      (vendor) => vendor.name === vendor_name,\r\n    )\r\n    this.props.fetchReport(\r\n      id,\r\n      'invoices_by_vendor_gl',\r\n      this.invoicesByVendorGlParams(this.props, vendor_id),\r\n    )\r\n    setTimeout(() => {\r\n      this.props.setWidgetState(id, { vendor_id })\r\n      this.drilldown('invoices_by_vendor_gl', vendor_name)\r\n    }, 100)\r\n  }\r\n\r\n  goToInitialChart() {\r\n    const { id } = this.props\r\n    this.props.sliceHistory(id, -1)\r\n    this.props.pushHistory(id, 'budget_vs_actual_company', `Company`)\r\n    this.props.setChartType(id, 'budget_vs_actual_company')\r\n  }\r\n\r\n  render() {\r\n    const { id, fullscreen } = this.props\r\n    const { chartType } = this.widget()\r\n    const { startDate, endDate, budget } = this.widget()\r\n    const dates =\r\n      startDate && endDate\r\n        ? {\r\n            startDate: moment(startDate).format('MM/DD/YYYY'),\r\n            endDate: moment(endDate).format('MM/DD/YYYY'),\r\n          }\r\n        : { startDate: '', endDate: '' }\r\n\r\n    if (!chartType) return <div></div>\r\n    const initialReport = this.props.reports[id].budget_vs_actual_company || {}\r\n    const selectDisplay =\r\n      chartType === 'budget_vs_actual_company' && fullscreen ? '' : 'none'\r\n    const displayHeader = chartType.includes('budget_vs_actual')\r\n    const details = _.isEmpty(initialReport) ? [] : initialReport.Details\r\n    const options = details.map((d) => ({\r\n      value: d.Description,\r\n      label: d.Description,\r\n    }))\r\n    return (\r\n      <Widget\r\n        title=\"Budget vs. Actual\"\r\n        type={chartType}\r\n        shouldFetch={false}\r\n        history={this.props.history}\r\n        dates={dates}\r\n        showDatesCanvas={startDate && endDate}\r\n        {...this.props}\r\n        onCompressClick={this.onCompressClick}\r\n      >\r\n        <div\r\n          style={{\r\n            marginLeft: '.5em',\r\n            marginRight: '.5em',\r\n            display: selectDisplay,\r\n          }}\r\n        >\r\n          <Select\r\n            options={options}\r\n            isMulti\r\n            placeholder=\"Select GLs\"\r\n            value={this.widget().selectedGls}\r\n            onChange={(values) =>\r\n              this.props.setWidgetState(id, { selectedGls: values || [] })\r\n            }\r\n          />\r\n        </div>\r\n        <BudgetHeader\r\n          selected_gls={this.widget().selectedGls}\r\n          data={initialReport}\r\n          widgetId={id}\r\n          budget={budget}\r\n          fullscreen={fullscreen}\r\n          visible={displayHeader}\r\n          initialBudget={initialReport.Budget}\r\n        />\r\n        {this.renderChart()}\r\n      </Widget>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  widgets: state.widgets.widgets,\r\n  reports: state.reports,\r\n  startDate: state.reports.startDate,\r\n  endDate: state.reports.endDate,\r\n  company: state.company,\r\n  dashboard: state.dashboard,\r\n  byInvoiceDate: state.widget_settings.budget_vs_actual.byInvoiceDate,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  setDrilldownIndex,\r\n  setReportAttribute,\r\n  fetchReport,\r\n  pushHistory,\r\n  sliceHistory,\r\n  setChartType,\r\n  setCompanyData,\r\n  setWidgetState,\r\n})(CostWidget)\r\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nclass CompanyChart extends Component {\n  getBudgetAmount() {\n    return this.props.calcBudgetedAmount\n  }\n\n  generateSeries(data, budgetedAmount) {\n    return [\n      {\n        name: 'Spent',\n        data: data.map((d) => ({ ...d, y: d.SpentAmount })),\n      },\n      {\n        name: 'Remaining',\n        data: data.map((d) => {\n          const budgetAmount = d.TotalSalesBudgetedPercent * budgetedAmount\n          const diff = budgetAmount - d.SpentAmount\n          return { ...d, y: diff < 0 ? 0 : diff }\n        }),\n      },\n      {\n        name: 'Over',\n        data: data.map((d) => {\n          const budgetAmount = d.TotalSalesBudgetedPercent * budgetedAmount\n          const diff = budgetAmount - d.SpentAmount\n          return { ...d, y: diff > 0 ? 0 : Math.abs(diff) }\n        }),\n      },\n    ]\n  }\n\n  buildConfig(data) {\n    if (_.isEmpty(data)) return {}\n    const that = this\n    const chartConfig = {\n      chart: {\n        type: 'bar',\n      },\n      title: {\n        text: '',\n      },\n      xAxis: {\n        categories: data.map((d) => d.Description),\n        title: {\n          text: null,\n        },\n      },\n      yAxis: {\n        labels: {\n          overflow: 'justify',\n        },\n        title: {\n          enabled: false,\n        },\n        reversedStacks: false,\n      },\n      tooltip: {\n        formatter() {\n          const budgetAmount =\n            this.point.TotalSalesBudgetedPercent * that.getBudgetAmount()\n          return (\n            `${this.point.Description}<br>` +\n            `Budgeted Amount: ${formatIntoDollars(budgetAmount)}<br>` +\n            `Budgeted Percent: ${(this.point.BudgetedPercent * 100).toFixed(\n              2,\n            )}%`\n          )\n        },\n      },\n      plotOptions: {\n        bar: {\n          stacking: 'normal',\n          dataLabels: {\n            enabled: true,\n            formatter() {\n              if (this.y === 0) return ''\n              return formatIntoDollars(this.y)\n            },\n          },\n          states: {\n            inactive: {\n              enabled: false,\n            },\n          },\n        },\n      },\n      series: this.generateSeries(data, this.props.calcBudgetedAmount),\n    }\n    return chartConfig\n  }\n\n  filteredData() {\n    const { selectedGls, data } = this.props\n    if (_.isEmpty(data.Details)) return []\n    if (_.isEmpty(selectedGls)) return data.Details\n    return data.Details.filter((d) => selectedGls.includes(d.Description))\n  }\n\n  render() {\n    const theme = ['#50B432', '#2f3540', '#ED561B', '#64E572', '#FF9655']\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(this.filteredData())}\n        config={this.buildConfig(this.filteredData())}\n        theme={theme}\n        modules={[]}\n        {...this.props}\n      />\n    )\n  }\n}\n\nCompanyChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nCompanyChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  reports: state.reports,\n  calcBudgetedAmount: state.budgetVsActual.budgetedAmount,\n})\n\nexport default connect(mapStateToProps)(CompanyChart)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nclass DivisionsChart extends Component {\n  getBudgetAmount() {\n    return this.props.calcBudgetedAmount\n  }\n\n  buildConfig(data) {\n    if (_.isEmpty(data)) return {}\n    const that = this\n    const chartConfig = {\n      chart: {\n        type: 'bar',\n      },\n      title: {\n        text: '',\n      },\n      xAxis: {\n        categories: data.map((d) => d.Description),\n        title: {\n          text: null,\n        },\n      },\n      yAxis: {\n        labels: {\n          overflow: 'justify',\n        },\n        title: {\n          enabled: false,\n        },\n        reversedStacks: false,\n      },\n      tooltip: {\n        formatter() {\n          const budgetAmount =\n            this.point.TotalSalesBudgetedPercent * that.getBudgetAmount()\n          return (\n            `${this.point.Description}<br>` +\n            `Budgeted Amount: ${formatIntoDollars(budgetAmount)}<br>` +\n            `Budgeted Percent: ${(this.point.BudgetedPercent * 100).toFixed(\n              2,\n            )}%`\n          )\n        },\n      },\n      plotOptions: {\n        bar: {\n          stacking: 'normal',\n          dataLabels: {\n            enabled: true,\n            formatter() {\n              if (this.y === 0) return ''\n              return formatIntoDollars(this.y)\n            },\n          },\n          states: {\n            inactive: {\n              enabled: false,\n            },\n          },\n        },\n      },\n      series: [\n        {\n          name: 'Spent',\n          data: data.map((d) => ({ ...d, y: d.SpentAmount })),\n        },\n        {\n          name: 'Remaining',\n          data: data.map((d) => {\n            const budgetAmount =\n              d.TotalSalesBudgetedPercent * that.getBudgetAmount()\n            const diff = budgetAmount - d.SpentAmount\n            return { ...d, y: diff < 0 ? 0 : diff }\n          }),\n        },\n        {\n          name: 'Over',\n          data: data.map((d) => {\n            const budgetAmount =\n              d.TotalSalesBudgetedPercent * that.getBudgetAmount()\n            const diff = budgetAmount - d.SpentAmount\n            return { ...d, y: diff > 0 ? 0 : Math.abs(diff) }\n          }),\n        },\n      ],\n    }\n\n    return chartConfig\n  }\n\n  render() {\n    const theme = ['#50B432', '#2f3540', '#ED561B', '#64E572', '#FF9655']\n    const { data } = this.props\n    const details = data ? data.Details : []\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(details)}\n        config={this.buildConfig(details)}\n        theme={theme}\n        modules={[]}\n        {...this.props}\n      />\n    )\n  }\n}\n\nDivisionsChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nDivisionsChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  reports: state.reports,\n  calcBudgetedAmount: state.budgetVsActual.budgetedAmount,\n})\n\nexport default connect(mapStateToProps)(DivisionsChart)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nclass UnitsChart extends Component {\n  getBudgetAmount() {\n    return this.props.calcBudgetedAmount\n  }\n\n  buildConfig(data) {\n    if (_.isEmpty(data)) return {}\n\n    const that = this\n    const chartConfig = {\n      chart: {\n        type: 'bar',\n      },\n      title: {\n        text: '',\n      },\n      xAxis: {\n        categories: data.map((d) => d.Description),\n        title: {\n          text: null,\n        },\n      },\n      yAxis: {\n        labels: {\n          overflow: 'justify',\n        },\n        title: {\n          enabled: false,\n        },\n        reversedStacks: false,\n      },\n      tooltip: {\n        formatter() {\n          const budgetAmount =\n            this.point.TotalSalesBudgetedPercent * that.getBudgetAmount()\n\n          return (\n            `${this.point.Description}<br>` +\n            `Budgeted Amount: ${formatIntoDollars(budgetAmount)}<br>` +\n            `Budgeted Percent: ${(this.point.BudgetedPercent * 100).toFixed(\n              2,\n            )}%`\n          )\n        },\n      },\n\n      plotOptions: {\n        bar: {\n          stacking: 'normal',\n          dataLabels: {\n            enabled: true,\n            formatter() {\n              if (this.y === 0) return ''\n              return formatIntoDollars(this.y)\n            },\n          },\n          states: {\n            inactive: {\n              enabled: false,\n            },\n          },\n        },\n      },\n      series: [\n        {\n          name: 'Spent',\n          data: data.map((d) => ({ ...d, y: d.SpentAmount })),\n        },\n        {\n          name: 'Remaining',\n          data: data.map((d) => {\n            const budgetAmount =\n              d.TotalSalesBudgetedPercent * that.getBudgetAmount()\n            const diff = budgetAmount - d.SpentAmount\n            return { ...d, y: diff < 0 ? 0 : diff }\n          }),\n        },\n        {\n          name: 'Over',\n          data: data.map((d) => {\n            const budgetAmount =\n              d.TotalSalesBudgetedPercent * that.getBudgetAmount()\n            const diff = budgetAmount - d.SpentAmount\n            return { ...d, y: diff > 0 ? 0 : Math.abs(diff) }\n          }),\n        },\n      ],\n    }\n\n    return chartConfig\n  }\n\n  render() {\n    const theme = ['#50B432', '#2f3540', '#ED561B', '#64E572', '#FF9655']\n    const { data } = this.props\n    const details = data ? data.Details : []\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(details)}\n        config={this.buildConfig(details)}\n        theme={theme}\n        modules={[]}\n        {...this.props}\n      />\n    )\n  }\n}\n\nUnitsChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nUnitsChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  reports: state.reports,\n  calcBudgetedAmount: state.budgetVsActual.budgetedAmount,\n})\n\nexport default connect(mapStateToProps)(UnitsChart)\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchInvoicesGL } from \"actions/CogsActions\";\nimport \"./APSpendTable.css\";\nimport InvoicesTable from \"./InvoicesTable\";\nimport moment from \"moment\";\n\nclass APSpendTable extends React.Component {\n  componentDidUpdate(prevProps) {\n    const { startDate, endDate, isLoading, invoicesGL, byInvoiceDate } =\n      this.props;\n    if (\n      !isLoading &&\n      (prevProps.startDate !== startDate ||\n        prevProps.endDate !== endDate ||\n        prevProps.byInvoiceDate !== byInvoiceDate)\n    ) {\n      this.props.fetchInvoicesGL(invoicesGL, byInvoiceDate);\n    }\n  }\n\n  render() {\n    const { cost_of_goods_gl_invoices } = this.props;\n    return (\n      <div className={\"ap-spend-table\"}>\n        <div className={\"title\"}>\n          <h3>Invoices by GL</h3>\n        </div>\n        <InvoicesTable\n          dataMap={cost_of_goods_gl_invoices}\n          defaultPageSize={20}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cost_of_goods_gl_invoices: state.cogs.cost_of_goods_gl_invoices,\n    startDate: moment(state.reports.startDate).format(\"MM/DD/YYYY\"),\n    endDate: moment(state.reports.endDate).format(\"MM/DD/YYYY\"),\n    invoicesGL: state.cogs.invoicesGL,\n    isLoading: state.cogs.isLoading,\n    byInvoiceDate: state.widget_settings.cost.byInvoiceDate,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchInvoicesGL })(APSpendTable);\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchTrendUnitGroupByGl,\n  switchChartType,\n} from \"actions/CogsActions\";\nimport { getFetching, setFetching } from \"utils\";\nimport \"./CogsAcrossUnit.css\";\nimport CogsAcrossUnitPieChart from \"./CogsAcrossUnitPieChart\";\nimport CogsAcrossUnitTable from \"./CogsAcrossUnitTable\";\nimport CogsAcrossUnitTrendGroup from \"./CogsAcrossUnitTrendGroup\";\nimport moment from \"moment\";\n\nclass CogsAcrossUnit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.switchChart = this.switchChart.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { unitId, category, startDate, endDate } = this.props;\n    if (\n      prevProps.unitId !== unitId ||\n      prevProps.category !== category ||\n      prevProps.startDate !== startDate ||\n      prevProps.endDate !== endDate\n    ) {\n      this.fetchData();\n    }\n  }\n\n  componentDidMount() {\n    this.handleFetchOnMount();\n  }\n\n  handleFetchOnMount() {\n    if (getFetching() === true) {\n      return;\n    }\n    setFetching(true);\n    this.fetchData();\n  }\n\n  fetchData() {\n    const { unitId, category, startDate, endDate, byInvoiceDate } = this.props;\n    if (\n      _.isUndefined(unitId) ||\n      _.isEmpty(category) ||\n      _.isEmpty(startDate) ||\n      _.isEmpty(endDate)\n    ) {\n      return;\n    }\n\n    const params = {\n      unitId: unitId,\n      category: category,\n      startDate: startDate,\n      endDate: endDate,\n      byInvoiceDate: byInvoiceDate,\n    };\n    this.props.fetchTrendUnitGroupByGl(params);\n  }\n\n  switchChart() {\n    const { chartType } = this.props;\n    this.props.switchChartType(chartType === \"pie\" ? \"trend\" : \"pie\");\n  }\n\n  renderUnitChart() {\n    const { data, chartType } = this.props;\n\n    switch (chartType) {\n      case \"pie\": {\n        return <CogsAcrossUnitPieChart data={data} {...this.props} />;\n      }\n      case \"trend\": {\n        return <CogsAcrossUnitTrendGroup data={data} {...this.props} />;\n      }\n      default: {\n        return <div></div>;\n      }\n    }\n  }\n\n  render() {\n    const { data, printView, widget_id, chartType } = this.props;\n\n    return (\n      <div className={\"cogs-across-unit-container\"}>\n        {this.renderUnitChart()}\n        <button\n          onClick={this.switchChart}\n          className=\"btn btn-small btn-primary btn-toggle switch-chart\"\n        >\n          Show {chartType === \"pie\" ? \"Trend\" : \"Pie\"}\n        </button>\n        <div className={printView ? \"\" : \"cogs-table-container\"}>\n          <CogsAcrossUnitTable\n            printView={printView}\n            data={data}\n            widget_id={widget_id}\n            {...this.props}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { reports, dashboard, cogs } = state;\n  return {\n    startDate: moment(reports.startDate).format(\"MM/DD/YYYY\"),\n    endDate: moment(reports.endDate).format(\"MM/DD/YYYY\"),\n    unitId: dashboard.activeWidget.unit_id,\n    chartType: cogs.cogsAcrossUnitChartType,\n    byInvoiceDate: state.widget_settings[\"cost\"].byInvoiceDate,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTrendUnitGroupByGl,\n  switchChartType,\n})(CogsAcrossUnit);\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { switchToSingleGL } from 'actions/CogsActions'\nimport ChartWrapper from \"../ChartWrapper\"\n\n\nconst theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n\nfunction buildConfig(report, clickable) {\n    if (!report) return {}\n    const data = report.map((subcat) => {\n        return {\n            x: subcat.gl_name,\n            y: parseFloat(subcat.percent),\n            className: clickable ? '' : 'no-pointer',\n            gl_code: parseInt(subcat.gl_code, 10)\n        }\n    })\n\n    const series = [{\n        name: 'GL Spend',\n        colorByPoint: true,\n        data: data.sort((a, b) => a.y - b.y )\n\n    }];\n\n    const chartConfig = {\n        chart: {\n            type: 'pie'\n        },\n        title: {\n            text: ''\n        },\n        subtitle: {\n            text: ''\n        },\n        tooltip: {\n            enabled: true,\n            formatter: function () {\n                return this.point.x + '<br>' + this.y + '%'\n            }\n        },\n        plotOptions: {\n            pie: {\n                dataLabels: {\n                    enabled: true,\n                    formatter: function () {\n                        return this.point.x + '<br>' + this.y + '%'\n                    }\n                }\n            }\n        },\n        series: series\n    }\n\n    return chartConfig\n}\n\n\nclass CogsAcrossUnitPieChart extends Component{\n    constructor(props) {\n        super(props)\n        this.handlePieChartClick = this.handlePieChartClick.bind(this)\n    }\n\n    handlePieChartClick(e){\n        const gl = e.point.gl_code\n        this.props.switchToSingleGL(gl)\n    }\n\n    render(){\n        const {data} = this.props\n\n        return (\n            <ChartWrapper\n                dataIsPresent={!_.isEmpty(data)}\n                onDataClick={this.handlePieChartClick}\n                config={buildConfig(data, true)}\n                modules={[]}\n                theme={theme}\n                fullscreenHeightRatio={.6}\n                {...this.props}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = () => {\n    return {}\n}\n\nexport default connect(mapStateToProps, {switchToSingleGL})(CogsAcrossUnitPieChart)","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ReactTable from \"react-table\"\nimport { pushHistory, setChartType } from 'actions'\nimport { fetchInvoicesGL, fetchItemGL, selectAllGLFilters, setGlFilters, updateGLFilters } from 'actions/CogsActions'\nimport { formatIntoDollars, formatPercent } from 'utils'\n\nlet previousUnitId = undefined\n\nclass CogsAcrossUnitTable extends Component {\n    constructor(props) {\n        super(props)\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this)\n        this.handleGLClick = this.handleGLClick.bind(this)\n        this.handleInputClick = this.handleInputClick.bind(this)\n        this.navigateToAPSpend = this.navigateToAPSpend.bind(this)\n        this.handleSelectAll = this.handleSelectAll.bind(this)\n        this.state = {\n            inputLastClick: undefined\n        }\n    }\n\n    handleCheckboxChange(glCode, e){\n        this.props.updateGLFilters(parseInt(glCode, 10), e.currentTarget.checked)\n    }\n\n    handleGLClick(glName, glCode){\n        this.props.setChartType(this.props.widget_id, \"cogs_across_unit_trend\")\n        this.props.pushHistory(this.props.widget_id, \"cogs_across_unit_trend\", glName)\n        this.props.fetchItemGL(glName, glCode, false, this.props.byInvoiceDate)\n    }\n\n    navigateToAPSpend(glCode){\n        this.props.fetchInvoicesGL(glCode, this.props.byInvoiceDate)\n        this.props.setChartType(this.props.widget_id, \"ap_spend_table\")\n        this.props.pushHistory(this.props.widget_id, \"ap_spend_table\", glCode)\n    }\n\n    componentDidMount(){\n        this.setGLs()\n    }\n\n\n    setGLs(){\n        let {glFilters, unitId} = this.props\n        if (glFilters.length > 0 && unitId === previousUnitId){\n        } else {\n            previousUnitId = unitId\n            glFilters = _.map(this.props.data, (d)=>{\n                return parseInt(d.gl_code, 10)\n            })\n            this.props.setGlFilters(glFilters)\n        }\n    }\n\n    //todo: Handle Shift Click FN\n    handleInputClick(glName, e){\n        this.setState({inputLastClick: e.currentTarget})\n        if (e.shiftKey){\n            if (e.currentTarget.checked){\n\n            } else {\n\n            }\n        }\n    }\n\n    handleSelectAll(e){\n        this.props.selectAllGLFilters(e.currentTarget.checked)\n    }\n\n    render() {\n        const {selectAll} = this.props\n        const columns = [\n        {\n            Header: <input type=\"checkbox\" checked={selectAll} onChange={this.handleSelectAll}  />,\n            width: 45,\n            sortable: false,\n            Cell: (data)=>{\n                const {gl_code} = data.original\n                const {gl_name} = data.row\n                const isChecked = this.props.glFilters.map((glCode)=> parseInt(glCode, 10)).includes(parseInt(gl_code, 10))\n                return (\n                    <div>\n                        <input className={\"gl-input-checkbox\"}\n                            checked={isChecked}\n                            onChange={this.handleCheckboxChange.bind(null, gl_code)}\n                            onClick={this.handleInputClick.bind(null, gl_name)}\n                            type={\"checkbox\"}/>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'GL Name',\n            accessor: \"gl_name\"\n        },\n        {\n            Header: 'Beginning Inventory',\n            accessor: \"beg_inv\",\n            Cell: data => {\n                const {gl_name} = data.row\n                const {gl_code} = data.original\n\n                return (\n                    <div style={{ textAlign: \"right\" }}>\n                        <a data-gl_code={gl_code} onClick={this.handleGLClick.bind(null, gl_name, gl_code)}>\n                            { formatIntoDollars(data.row.beg_inv) }\n                        </a>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Purchases',\n            accessor: \"purchases\",\n            Cell: data => {\n                const {gl_code} = data.original\n                return (\n                    <div style={{ textAlign: \"right\" }}>\n                        <a onClick={this.navigateToAPSpend.bind(null, gl_code)}>\n                            { formatIntoDollars(data.row.purchases) }\n                        </a>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Ending Inventory',\n            accessor: \"end_inv\",\n            Cell: data => {\n                const {gl_name} = data.row\n                const {gl_code} = data.original\n                return (\n                    <div style={{ textAlign: \"right\" }}>\n                        <a data-gl_code={gl_code} onClick={this.handleGLClick.bind(null, gl_name, gl_code)}>\n                            { formatIntoDollars(data.row.end_inv) }\n                        </a>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Usage',\n            accessor: 'cost',\n            Cell: data => (\n                <div style={{ textAlign: \"right\" }}>\n                    { formatIntoDollars(data.row.cost) }\n                </div>\n            )\n        },\n        {\n            Header: 'Cost %',\n            maxWidth: 80,\n            accessor: 'percent',\n            Cell: data => (\n                <div style={{ textAlign: \"right\" }}>\n                    { formatPercent(data.row.percent) }\n                </div>\n            )\n        }];\n\n        const dataMap = this.props.data.map((d)=>{\n            const {gl_name, gl_code, beg_inv, purchases, end_inv, cost, percent} = d\n            return {\n                gl_name: gl_name,\n                gl_code: gl_code,\n                beg_inv: beg_inv,\n                purchases: purchases,\n                end_inv: end_inv,\n                cost: cost,\n                percent: percent\n            }\n        })\n\n        return (\n            <ReactTable\n                showPagination={true}\n                data={dataMap}\n                defaultPageSize={10}\n                columns={columns}\n                defaultSorted={[\n                    {\n                        id: \"gl_name\",\n                        asc: true\n                    }\n                ]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        reports: state.reports,\n        glFilters: state.cogs.glFilters,\n        selectAll: state.cogs.glFilterSelectAll,\n        unitId: state.dashboard.activeWidget.unit_id,\n        byInvoiceDate: state.widget_settings.cost.byInvoiceDate\n    }\n}\n\nexport default connect(mapStateToProps, {\n    setGlFilters,\n    updateGLFilters,\n    pushHistory,\n    setChartType,\n    fetchItemGL,\n    fetchInvoicesGL,\n    selectAllGLFilters\n})(CogsAcrossUnitTable)\n","import _ from 'lodash';\nimport moment from \"moment\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { formatIntoDollars, formatName, formatPercent } from \"utils\";\nimport DownloadCSV from '../DownloadCSV';\nimport GLDataTable from \"./GLDataTable\";\n\nclass CogsAcrossUnitTabularGroup extends Component {\n    render(){\n        const {cost_trend_unit_group_by_gl, glFilters, group_name} = this.props\n        const data = _.groupBy(cost_trend_unit_group_by_gl, 'gl_name')\n\n        let seriesMap = _.map(data, (values, key)=>{\n            let group_gl_code = \"\"\n            let data = values.map((value)=>{\n                const {starting_week, percent, beg_inv, purchases, end_inv, cost, gl_code} = value\n                group_gl_code = gl_code\n                let ending_week = moment(starting_week).add(6, 'days').startOf('day')\n                const x = Date.UTC(ending_week.year(),ending_week.month(), ending_week.date())\n                return {\n                    x: x,\n                    y: percent,\n                    ending_week: ending_week.format('MM/DD/YYYY'),\n                    beg_inv: formatIntoDollars(beg_inv),\n                    purchases: formatIntoDollars(purchases),\n                    end_inv: formatIntoDollars(end_inv),\n                    usage: formatIntoDollars(cost),\n                    cost: formatPercent(percent),\n                    gl_code: gl_code\n                }\n            })\n            data = _.sortBy(data, 'x')\n            const isVisible = glFilters.includes(group_gl_code)\n            return {\n                name: key,\n                data: data,\n                visible: isVisible,\n                gl_code: group_gl_code,\n                showInLegend: isVisible,\n                pointInterval: 24 * 3600 * 1000 * 7\n            }\n        })\n        seriesMap = _.sortBy(seriesMap, 'name')\n        const glMap = seriesMap.filter(s => s.visible).map((series, index)=>{\n            const {name, gl_code, data} = series\n            const key = `${gl_code}_${index}`\n            return (<GLDataTable gl_code={gl_code} name={name} key={key} data={data}/>)\n        })\n        return (<div>\n            {glMap.length > 0 &&\n                <div>\n                    <DownloadCSV style={{marginTop: \"1em\", float: \"right\", marginRight: \"2%\"}}\n                                 tableSelector={\".gl-tabular-item table\"}\n                                 fileName={`${formatName(group_name)}_gl_trend.csv`}\n                    />\n                    <div className=\"clearfix\"></div>\n                </div>\n            }\n            {glMap}\n        </div>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {cost_trend_unit_group_by_gl, glFilters, currentGL} = state.cogs\n\n    return {\n        group_name: state.company.group_name,\n        cost_trend_unit_group_by_gl: cost_trend_unit_group_by_gl,\n        glFilters: glFilters,\n        currentGL: currentGL\n    }\n}\n\nexport default connect(mapStateToProps, {})(CogsAcrossUnitTabularGroup)\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchItemGL, setItemsUsageDisplay } from \"actions/CogsActions\";\nimport \"./CogsAcrossUnitTrend.css\";\nimport CogsItemUsageTable from \"./CogsItemUsageTable\";\nimport CogsItemUsageTabular from \"./CogsItemUsageTabular\";\nimport CogsItemUsageTrend from \"./CogsItemUsageTrend\";\nimport moment from \"moment\";\n\nlet isFetching = false;\n\nclass CogsAcrossUnitTrend extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.props.isLoading) {\n      if (\n        prevProps.startDate !== this.props.startDate ||\n        prevProps.endDate !== this.props.endDate ||\n        prevProps.sidebarOpen !== this.props.sidebarOpen ||\n        prevProps.byInvoiceDate !== this.props.byInvoiceDate\n      ) {\n        this.updateData();\n      }\n    }\n  }\n\n  updateData() {\n    const { glCode, glName, byInvoiceDate } = this.props;\n    if (isFetching) {\n      return;\n    }\n    isFetching = true;\n    this.props.fetchItemGL(glName, glCode, true, byInvoiceDate);\n    setTimeout(() => {\n      isFetching = false;\n    }, 1000);\n  }\n\n  setItemsUsageDisplay = (displayType, e) => {\n    e.preventDefault();\n    this.props.setItemsUsageDisplay(displayType);\n  };\n\n  renderDisplay() {\n    const { widget_id, cogsItemUsageDisplay } = this.props;\n    switch (cogsItemUsageDisplay) {\n      case \"chart\": {\n        return <CogsItemUsageTrend widget_id={widget_id} />;\n      }\n      case \"tabular\": {\n        return <CogsItemUsageTabular widget_id={widget_id} />;\n      }\n      default: {\n        return <CogsItemUsageTrend widget_id={widget_id} />;\n      }\n    }\n  }\n\n  render() {\n    const { widget_id, cogsItemUsageDisplay } = this.props;\n    return (\n      <div>\n        <div>\n          <div className={\"cogs-item-usage-tabs\"}>\n            <ul className={\"nav nav-tabs\"}>\n              <li\n                className={\n                  cogsItemUsageDisplay === \"chart\"\n                    ? \"nav-item active\"\n                    : \"nav-item\"\n                }\n              >\n                <a onClick={this.setItemsUsageDisplay.bind(null, \"chart\")}>\n                  Chart\n                </a>\n              </li>\n              <li\n                className={\n                  cogsItemUsageDisplay === \"tabular\"\n                    ? \"nav-item active\"\n                    : \"nav-item\"\n                }\n              >\n                <a onClick={this.setItemsUsageDisplay.bind(null, \"tabular\")}>\n                  Table\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className={\"tab-content\"}>\n          <div className={\"tab-pane fade show active\"}>\n            {this.renderDisplay()}\n          </div>\n        </div>\n        <div>\n          <CogsItemUsageTable widget_id={widget_id} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { reports, cogs } = state;\n\n  return {\n    startDate: moment(reports.startDate).format(\"MM/DD/YYYY\"),\n    endDate: moment(reports.endDate).format(\"MM/DD/YYYY\"),\n    isLoading: cogs.isLoading,\n    glCode: cogs.currentCogsItemGLCode,\n    glName: cogs.currentCogsItemGL,\n    sidebarOpen: state.dashboard.sidebarOpen,\n    cogsItemUsageDisplay: cogs.cogsItemUsageDisplay,\n    byInvoiceDate: state.widget_settings.cost.byInvoiceDate,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchItemGL,\n  setItemsUsageDisplay,\n})(CogsAcrossUnitTrend);\n","import Highcharts from 'highcharts'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { pushHistory, setChartType } from 'actions'\nimport { fetchItemGL, updateGLFilters } from 'actions/CogsActions'\nimport { formatIntoDollars } from 'utils'\nimport CogsAcrossUnitTabularGroup from \"./CogsAcrossUnitTabularGroup\"\nimport './CogsAcrossUnitTrendGroup.css'\n\n\nconst theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n\nconst formatPercent = (value) => {\n    const floatValue = parseFloat(value) || 0\n    return `${floatValue.toFixed(2)}%`\n}\n\nclass CogsAcrossUnitTrendGroup extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            displayType: \"chart\"\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if (!_.isEqual(prevProps.currentGL,this.props.currentGL)){\n            this.updateDisplay()\n        }\n        if (this.state.displayType === \"chart\"){\n            if (prevProps.selectAll !== this.props.selectAll ||\n                prevProps.cost_trend_unit_group_by_gl.length !== this.props.cost_trend_unit_group_by_gl.length ||\n                prevProps.sidebarOpen !== this.props.sidebarOpen || (prevState.displayType !== this.state.displayType)\n            ){\n                this.updateChart()\n            }\n        }\n    }\n\n    updateDisplay(){\n        const {gl_code, display} = this.props.currentGL\n        if (gl_code){\n            const selSeries = _.find(this.chart.series, (s)=>{\n                return s.userOptions.gl_code === gl_code\n            })\n            if (selSeries){\n                if (display){\n                    selSeries.update({showInLegend: true, visible: true}, true)\n                } else {\n                    selSeries.update({showInLegend: false, visible: false}, true)\n                }\n            }\n        }\n    }\n\n    updateChart(){\n        const {isLoading} = this.props\n        if (isLoading){\n            return\n        }\n        Highcharts.theme = { colors: theme }\n        const {cost_trend_unit_group_by_gl, glFilters} = this.props\n        const data = _.groupBy(cost_trend_unit_group_by_gl, 'gl_name')\n\n        let seriesMap = _.map(data, (values, key)=>{\n            let group_gl_code = \"\"\n            let data = values.map((value)=>{\n                const {starting_week, percent, beg_inv, purchases, end_inv, cost, gl_code} = value\n                group_gl_code = gl_code\n                let ending_week = moment(starting_week).add(6, 'days').startOf('day')\n                const x = Date.UTC(ending_week.year(),ending_week.month(), ending_week.date())\n                return {\n                    x: x,\n                    y: percent,\n                    ending_week: ending_week.format('MM/DD/YYYY'),\n                    beg_inv: formatIntoDollars(beg_inv),\n                    purchases: formatIntoDollars(purchases),\n                    end_inv: formatIntoDollars(end_inv),\n                    usage: formatIntoDollars(cost),\n                    cost: formatPercent(percent),\n                    gl_code: gl_code\n                }\n            })\n            data = _.sortBy(data, 'x')\n            const isVisible = glFilters.includes(group_gl_code)\n            return {\n                name: key,\n                data: data,\n                visible: isVisible,\n                gl_code: group_gl_code,\n                showInLegend: isVisible,\n                pointInterval: 24 * 3600 * 1000 * 7\n            }\n        })\n        seriesMap = _.sortBy(seriesMap, 'name')\n        this.chart = Highcharts.chart(this.cogsAcrossUnitTrendGroup, {\n            title: {\n                text: 'COGS Trend'\n            },\n            yAxis: {\n                title: {\n                    text: 'Percent %'\n                }\n            },\n            xAxis: {\n                type: 'datetime',\n                startOfWeek: 0,\n                tickInterval: 24 * 3600 * 1000 * 7,\n                tickmarkPlacement: 'on'\n            },\n            legend: {\n                layout: 'horizontal',\n                align: 'center',\n                enabled: false,\n                itemStyle: {\n                    cursor: 'default'\n                },\n                itemHoverStyle: {\n                    cursor: 'default'\n                }\n            },\n            tooltip : {\n                formatter: function () {\n                    return `<div><b>${this.series.name}</b><br/></div>` +\n                        `<div>Week Ending: ${this.point.ending_week}<br/></div>` +\n                        `<div>BI: ${this.point.beg_inv}<br/></div>` +\n                        `<div>Purchases: ${this.point.purchases}<br/></div>` +\n                        `<div>EI: ${this.point.end_inv}<br/></div>` +\n                        `<div>Cost %: ${this.point.cost}<br/></div>` +\n                        `<div>Usage: ${this.point.usage}<br/></div>`\n                }\n            },\n            plotOptions: {\n                series: {\n                    pointIntervalUnit: 'week',\n                    label: {\n                        connectorAllowed: false\n                    },\n                    events: {\n                        click: (e)=>{\n                            const glName = e.point.series.name\n                            const glCode = e.point.gl_code\n                            this.props.setChartType(this.props.widget_id, \"cogs_across_unit_trend\")\n                            this.props.pushHistory(this.props.widget_id, \"cogs_across_unit_trend\", glName)\n                            this.props.fetchItemGL(glName, glCode, false, this.props.byInvoiceDate)\n                        },\n                        legendItemClick: (e)=>{\n                            e.preventDefault()\n                        }\n                    }\n                }\n            },\n            series: seriesMap\n        })\n    }\n\n    componentDidMount(){\n        this.updateChart()\n    }\n\n    renderDisplay(){\n        const {displayType} = this.state\n        switch (displayType){\n            case \"chart\": {\n                return (<div ref={(el) => this.cogsAcrossUnitTrendGroup = el} style={{ display: 'flex' }} className='chart' />)\n            }\n            case \"tabular\": {\n                return (<CogsAcrossUnitTabularGroup/>)\n            }\n            default: {\n                return (<div ref={(el) => this.cogsAcrossUnitTrendGroup = el} style={{ display: 'flex' }} className='chart' />)\n            }\n        }\n    }\n\n    setDisplay = (displayType) => {\n        this.setState({displayType: displayType})\n    }\n\n    render(){\n        const {displayType} = this.state\n\n        return (\n            <div>\n                <div>\n                    <div className={\"cogs-across-unit-trend-group\"}>\n                        <ul className={\"nav nav-tabs\"}>\n                            <li className={displayType === \"chart\" ? \"nav-item active\" : \"nav-item\"}>\n                                <a onClick={this.setDisplay.bind(null, \"chart\")}>Chart</a>\n                            </li>\n                            <li className={displayType === \"tabular\" ? \"nav-item active\" : \"nav-item\"}>\n                                <a onClick={this.setDisplay.bind(null, \"tabular\")}>Table</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className={\"tab-content\"}>\n                    <div className={\"tab-pane fade show active\"}>\n                        {this.renderDisplay()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {cost_trend_unit_group_by_gl, glFilters, currentGL, glFilterSelectAll, isLoading} = state.cogs\n    return {\n        cost_trend_unit_group_by_gl: cost_trend_unit_group_by_gl,\n        glFilters: glFilters,\n        currentGL: currentGL,\n        selectAll: glFilterSelectAll,\n        isLoading: isLoading,\n        sidebarOpen: state.dashboard.sidebarOpen,\n        byInvoiceDate: state.widget_settings.cost.byInvoiceDate\n    }\n}\n\nexport default connect(mapStateToProps, {updateGLFilters, pushHistory, setChartType, fetchItemGL})(CogsAcrossUnitTrendGroup)\n","import _ from 'lodash'\nimport moment from \"moment\"\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ReactTable from \"react-table\"\nimport { pushHistory, setChartType } from 'actions'\nimport { fetchInventoryItemLoc, fetchInvoicesByItem, itemSelectAll, setItems, updateItemCheckbox } from 'actions/CogsActions'\nimport { formatIntoDollars, roundTwo } from 'utils'\n\nclass CogsItemUsageTable extends Component {\n    constructor(props){\n        super(props)\n        this.handleCheckBoxClick = this.handleCheckBoxClick.bind(this)\n        this.handleSelectAll = this.handleSelectAll.bind(this)\n        this.navigateToInvoicesByItem = this.navigateToInvoicesByItem.bind(this)\n        this.navigateToInventoryCountsTable = this.navigateToInventoryCountsTable.bind(this)\n    }\n\n    calculateUsage(beginning, purchases, ending){\n        beginning = parseFloat(beginning) || 0\n        purchases = parseFloat(purchases) || 0\n        ending = parseFloat(ending) || 0\n        return beginning + purchases - ending\n    }\n\n    calculateAverageDollar(purchases, purchasesQty, countingUnit){\n        purchases = parseFloat(purchases) || 0\n        purchasesQty = parseFloat(purchasesQty) || 0\n        let averageDollar = purchases / purchasesQty\n        if (_.isNaN(averageDollar)){\n            averageDollar = 0\n        }\n        return formatIntoDollars(averageDollar)\n    }\n\n    calculateAverage(purchases, purchasesQty){\n        purchases = parseFloat(purchases) || 0\n        purchasesQty = parseFloat(purchasesQty) || 0\n        let averageDollar = purchases / purchasesQty\n        if (_.isNaN(averageDollar)){\n            averageDollar = 0\n        }\n        return averageDollar\n    }\n\n    calculateAverageFromBE(begInv, begInvQty, endInv, endInvQty){\n        const averageBeginning = this.calculateAverage(begInv, begInvQty)\n        const averageEnding = this.calculateAverage(endInv, endInvQty)\n        let averageDollar\n        if (averageBeginning > 0 && averageEnding > 0){\n            averageDollar =  (averageBeginning + averageEnding) / 2\n        } else if (averageEnding > 0 && averageBeginning === 0){\n            averageDollar = averageEnding\n        } else if (averageBeginning > 0 && averageEnding === 0){\n            averageDollar = averageBeginning\n        } else {\n            averageDollar = 0\n        }\n        return formatIntoDollars(averageDollar)\n    }\n\n    componentDidUpdate(prevProps) {\n        this.setItems()\n    }\n\n    setItems(){\n        const itemIds = _.map(this.props.item_level_trend, \"t_id\")\n        this.props.setItems(itemIds)\n    }\n\n    handleCheckBoxClick(tId,e){\n        this.props.updateItemCheckbox(tId, e.currentTarget.checked)\n    }\n\n    handleSelectAll(e){\n        this.props.itemSelectAll(e.currentTarget.checked)\n    }\n\n    navigateToInvoicesByItem(itemName, itemId){\n        this.props.fetchInvoicesByItem({\n            itemId: itemId,\n            byInvoiceDate: this.props.byInvoiceDate\n        })\n        this.props.setChartType(this.props.widget_id, \"invoices_by_item\")\n        this.props.pushHistory(this.props.widget_id, \"invoices_by_item\", itemName)\n    }\n\n    navigateToInventoryCountsTable(startingPoint,data){\n        const {periodData} = data.original\n        if (periodData.length === 0){\n            return\n        }\n        const sortedData = _.sortBy(periodData, (d)=> new Date(d.starting_week).valueOf())\n        const point = startingPoint === \"beginning\" ? _.first(sortedData) :  _.last(sortedData)\n        const startDate = moment(new Date(point.starting_week)).format(\"MM/DD/YYYY\")\n        const endDate = moment(new Date(point.ending_week)).format(\"MM/DD/YYYY\")\n\n        this.props.fetchInventoryItemLoc(startDate, point.unit_inventory_item_id, this.props.byInvoiceDate)\n        this.props.fetchInvoicesByItem({\n            startDate: startDate,\n            endDate: endDate,\n            itemId: point.unit_inventory_item_id,\n            byInvoiceDate: this.props.byInvoiceDate\n        })\n        this.props.setChartType(this.props.widget_id, \"inventory_counts_table\")\n        this.props.pushHistory(this.props.widget_id, \"inventory_counts_table\", point.item_name)\n    }\n\n    render(){\n        const {item_level_trend, items_select_all} = this.props\n        const dataMap = item_level_trend.map((d)=>{\n            const {item_name, beg_inv_quantity, beg_inv, purchase_quantity, purchases, end_inv_quantity,\n                end_inv, unit_inventory_item_id, t_id, display, periodData } = d\n\n            let {counting_unit} = d\n\n            const usage_qty = this.calculateUsage(beg_inv_quantity, purchase_quantity, end_inv_quantity)\n            const usage = this.calculateUsage(beg_inv, purchases, end_inv)\n\n            if (counting_unit === \"undefined\"){\n                counting_unit = \"\"\n            }\n\n            let average_dollar\n            if (purchases === 0 ){\n                average_dollar = this.calculateAverageFromBE(beg_inv, beg_inv_quantity, end_inv, end_inv_quantity)\n            } else {\n                average_dollar = this.calculateAverageDollar(purchases, purchase_quantity)\n            }\n\n            return {\n                item_name: item_name,\n                counting_unit: counting_unit,\n                beg_inv_quantity: beg_inv_quantity,\n                beg_inv: beg_inv,\n                purchase_quantity: purchase_quantity,\n                purchases: purchases,\n                end_inv_quantity: end_inv_quantity,\n                end_inv: end_inv,\n                unit_inventory_item_id: unit_inventory_item_id,\n                usage_qty: usage_qty,\n                usage: usage,\n                t_id: t_id,\n                display: display,\n                average_dollar: average_dollar,\n                periodData: periodData\n            }\n        })\n        const columns = [\n        {\n            Header: <input type=\"checkbox\" checked={items_select_all} onChange={this.handleSelectAll}  />,\n            width: 45,\n            accessor: \"t_id\",\n            sortable: false,\n            Cell: (data)=>{\n                return (\n                    <div>\n                        <input checked={data.original.display} onChange={this.handleCheckBoxClick.bind(null, data.row.t_id)} type={\"checkbox\"}/>\n                    </div>\n                )\n            }\n        },\n        {\n            Header: 'Item Name',\n            accessor: \"item_name\",\n            width: 250\n        },\n        {\n            Header: 'Avg $',\n            accessor: \"average_dollar\",\n            Cell: data => (\n                <div style={{ textAlign: \"right\" }}>\n                    { data.row.average_dollar }\n                </div>\n            )\n        },\n        {\n            Header: 'Counting Unit',\n            accessor: \"counting_unit\"\n        },\n        {\n            Header: 'Beginning Inv',\n            accessor: \"beg_inv_quantity\",\n            Cell: data => (\n                <div style={{ textAlign: \"right\" }}>\n                    <a onClick={this.navigateToInventoryCountsTable.bind(null, \"beginning\", data)}>\n                        { roundTwo(data.row.beg_inv_quantity) }\n                    </a>\n                </div>\n            )\n\n        },\n        {\n            Header: 'Purchases',\n            accessor: \"purchase_quantity\",\n            Cell: data => {\n                const {item_name, unit_inventory_item_id} = data.original\n                return (\n                    <div style={{ textAlign: \"right\" }}>\n                        <a onClick={this.navigateToInvoicesByItem.bind(null, item_name, unit_inventory_item_id)}>\n                            { roundTwo(data.row.purchase_quantity) }\n                        </a>\n                    </div>\n                )\n            }\n\n        },\n        {\n            Header: 'Ending Inv',\n            accessor: \"end_inv_quantity\",\n            Cell: data => (\n                <div style={{ textAlign: \"right\" }}>\n                    <a onClick={this.navigateToInventoryCountsTable.bind(null, \"ending\",data)}>\n                        { roundTwo(data.row.end_inv_quantity) }\n                    </a>\n                </div>\n            )\n\n        },\n        {\n            Header: 'Usage Quantity',\n            accessor: \"usage_qty\",\n            Cell: data => (\n                <div style={{ textAlign: \"right\" }}>\n                    { roundTwo(data.row.usage_qty) }\n                </div>\n            )\n        },\n        {\n            Header: 'Usage $',\n            accessor: \"usage\",\n            Cell: data => (\n                <div style={{ textAlign: \"right\" }}>\n                    { formatIntoDollars(data.row.usage) }\n                </div>\n            )\n        }\n        ]\n\n        return (\n            <ReactTable\n                showPagination={true}\n                defaultPageSize={10}\n                data={dataMap}\n                columns={columns}\n                defaultSorted={[\n                    {\n                        id: \"usage\",\n                        desc: true\n                    }\n                ]}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {cogs} = state\n\n    return {\n        currentCogsItemGL: cogs.currentCogsItemGL,\n        item_level_trend: cogs.item_level_trend,\n        items_select_all: cogs.items_select_all,\n        byInvoiceDate: state.widget_settings.cost.byInvoiceDate\n    }\n}\n\nexport default connect(mapStateToProps, {\n    setItems,\n    updateItemCheckbox,\n    itemSelectAll,\n    setChartType,\n    pushHistory,\n    fetchInvoicesByItem,\n    fetchInventoryItemLoc\n})(CogsItemUsageTable)\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { calculateUsage, dateToUTC, formatName } from \"utils\";\nimport DownloadCSV from '../DownloadCSV';\nimport \"./CogsItemUsageTabular.css\";\nimport ItemDataTable from \"./ItemDataTable\";\n\nclass CogsItemUsageTabular extends Component {\n    render(){\n        const {item_level_trend, group_name} = this.props\n        let seriesMap = item_level_trend.map((d)=>{\n            const {periodData, item_name, t_id, display, showInLegend } = d\n            let {counting_unit} = d\n            const data = periodData.map((pd)=>{\n                const {\n                    starting_week,\n                    ending_week,\n                    beg_inv,\n                    beg_inv_quantity,\n                    purchases,\n                    purchase_quantity,\n                    end_inv,\n                    end_inv_quantity,\n                    unit_inventory_item_id,\n                    item_name\n                } = pd\n\n                let {counting_unit} = pd\n\n                const usage_qty = calculateUsage(beg_inv_quantity, purchase_quantity, end_inv_quantity)\n                const usage = calculateUsage(beg_inv, purchases, end_inv)\n\n                if (counting_unit === \"undefined\"){\n                    counting_unit = \"\"\n                }\n\n                const x = dateToUTC(ending_week)\n\n                return {\n                    x: x,\n                    y: usage_qty,\n                    unit_inventory_item_id: unit_inventory_item_id,\n                    starting_week: starting_week,\n                    ending_week: ending_week,\n                    item_name: item_name,\n                    usage: usage,\n                    usage_qty: usage_qty,\n                    beg_inv:beg_inv,\n                    beg_inv_quantity: beg_inv_quantity,\n                    purchases: purchases,\n                    purchase_quantity: purchase_quantity,\n                    end_inv:end_inv,\n                    end_inv_quantity: end_inv_quantity,\n                    counting_unit: counting_unit,\n                    t_id: t_id\n                }\n            })\n\n            if (counting_unit === \"undefined\"){\n                counting_unit = \"\"\n            }\n\n            return {\n                name: item_name,\n                data: data,\n                t_id: t_id,\n                visible: display,\n                showInLegend: showInLegend,\n                counting_unit: counting_unit\n            }\n        })\n        seriesMap = _.sortBy(seriesMap, 'name')\n        const items = seriesMap.filter(d => d.visible).map((series)=>{\n            const {name, t_id, data, counting_unit} = series\n            return (<div key={t_id} className={\"items-usage-tabular-item\"}>\n                <ItemDataTable name={name} t_id={t_id} data={data} counting_unit={counting_unit}/>\n            </div>)\n        })\n\n        return (<div className={\"item-usage-tabular-container\"}>\n            {items.length > 0 && <div>\n                <DownloadCSV style={{marginTop: \"1em\", float: \"right\", marginRight: \"2%\"}}\n                             tableSelector={\".backdrop .item-data-table table\"}\n                             fileName={`${formatName(group_name)}_item_usage.csv`}\n                />\n                <div className=\"clearfix\"></div>\n            </div>}\n            {items}\n        </div>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {cogs} = state\n    return {\n        group_name: state.company.group_name,\n        item_level_trend: cogs.item_level_trend,\n    }\n}\n\nexport default connect(mapStateToProps, {})(CogsItemUsageTabular)\n","import Highcharts from 'highcharts'\nimport _ from 'lodash'\nimport moment from \"moment\"\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { pushHistory, setChartType } from 'actions'\nimport { fetchInventoryItemLoc, fetchInvoicesByItem, updateItemCheckbox } from 'actions/CogsActions'\nimport { dateToUTC, formatIntoDollars, roundTwo } from 'utils'\nimport './CogsAcrossUnitTrendGroup.css'\n\nconst theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n\nclass CogsItemUsageTrend extends Component{\n    componentDidMount(){\n        this.updateChart()\n    }\n\n    componentDidUpdate(prevProps){\n        if (!_.isEqual(prevProps.item_level_trend, this.props.item_level_trend) ||\n            (!this.props.isLoading && prevProps.isLoading !== this.props.isLoading)){\n            this.updateChart()\n        }\n\n        if (!_.isEqual(prevProps.currentItemTid,this.props.currentItemTid)){\n            this.updateDisplay()\n        }\n    }\n\n    updateDisplay(){\n        const {tid, display} = this.props.currentItemTid\n        if (tid){\n            const selSeries = _.find(this.chart.series, (s)=>{\n                return s.userOptions.t_id === tid\n            })\n            if (selSeries){\n                if (display){\n                    selSeries.update({showInLegend: true, visible: true}, true)\n                } else {\n                    selSeries.update({showInLegend: false, visible: false}, true)\n                }\n            }\n        }\n    }\n\n    calculateUsage(beginning, purchases, ending){\n        beginning = parseFloat(beginning) || 0\n        purchases = parseFloat(purchases) || 0\n        ending = parseFloat(ending) || 0\n        return beginning + purchases - ending\n    }\n\n\n    updateChart(){\n        Highcharts.theme = { colors: theme }\n\n        const {currentCogsItemGL, item_level_trend} = this.props\n        let seriesMap = item_level_trend.map((d)=>{\n            const {periodData, item_name, t_id, display, showInLegend} = d\n            const data = periodData.map((pd)=>{\n                const {\n                    starting_week,\n                    ending_week,\n                    beg_inv,\n                    beg_inv_quantity,\n                    purchases,\n                    purchase_quantity,\n                    end_inv,\n                    end_inv_quantity,\n                    unit_inventory_item_id,\n                    item_name\n                } = pd\n\n                let {counting_unit} = pd\n\n                const usage_qty = this.calculateUsage(beg_inv_quantity, purchase_quantity, end_inv_quantity)\n                const usage = this.calculateUsage(beg_inv, purchases, end_inv)\n\n                if (counting_unit === \"undefined\"){\n                    counting_unit = \"\"\n                }\n\n                const x = dateToUTC(ending_week)\n\n                return {\n                    x: x,\n                    y: usage_qty,\n                    unit_inventory_item_id: unit_inventory_item_id,\n                    starting_week: starting_week,\n                    ending_week: ending_week,\n                    item_name: item_name,\n                    usage: usage,\n                    usage_qty: usage_qty,\n                    beg_inv:beg_inv,\n                    beg_inv_quantity: beg_inv_quantity,\n                    purchases: purchases,\n                    purchase_quantity: purchase_quantity,\n                    end_inv:end_inv,\n                    end_inv_quantity: end_inv_quantity,\n                    counting_unit: counting_unit,\n                    t_id: t_id\n                }\n            })\n            return {\n                name: item_name,\n                data: data,\n                t_id: t_id,\n                visible: display,\n                showInLegend: showInLegend\n            }\n        })\n\n        seriesMap = _.sortBy(seriesMap, 'name')\n\n        this.chart = Highcharts.chart(this.itemUsageTrend, {\n            title: {\n                text: `${currentCogsItemGL} Items Usage Trend`\n            },\n            yAxis: {\n                title: {\n                    text: 'Usage Qty'\n                }\n            },\n            xAxis: {\n                type: 'datetime',\n                startOfWeek: 0,\n                tickInterval: 24 * 3600 * 1000 * 7,\n                tickmarkPlacement: 'on'\n            },\n            legend: {\n                layout: 'horizontal',\n                align: 'center',\n                enabled: false,\n                itemStyle: {\n                    cursor: 'default'\n                },\n                itemHoverStyle: {\n                    cursor: 'default'\n                }\n            },\n            tooltip : {\n                formatter: function () {\n                    const generateLabel = (qty, countingUnit, total) => {\n                        let price = parseFloat(total) / parseFloat(qty)\n                        if (_.isNaN(price)){\n                            price = 0\n                        }\n                        price = formatIntoDollars(price)\n                        total = formatIntoDollars(total)\n                        if (!_.isEmpty(countingUnit)){\n                            countingUnit = qty !== 1 ? `${countingUnit}s` : countingUnit\n                        }\n\n                        return `${roundTwo(qty)} ${countingUnit.toLocaleLowerCase()} @ ${price}=${total}`\n                    }\n\n                    const {\n                        beg_inv_quantity, counting_unit, beg_inv,\n                        purchase_quantity, purchases,\n                        end_inv_quantity, end_inv,\n                        usage, usage_qty,\n                    } = this.point\n\n                    const date = moment(this.point.ending_week).format('MM/DD/YYYY')\n\n                    const biLabel = generateLabel(beg_inv_quantity, counting_unit, beg_inv)\n                    const piLabel = generateLabel(purchase_quantity, counting_unit, purchases)\n                    const eiLabel = generateLabel(end_inv_quantity, counting_unit, end_inv)\n                    const usageLabel = generateLabel(usage_qty, counting_unit, usage)\n\n                    return `<div><b>${this.series.name}</b><br/></div>` +\n                        `<div>Week Ending: ${date}<br/></div>` +\n                        `<div>BI: ${biLabel}<br/></div>` +\n                        `<div>Purchases: ${piLabel}<br/></div>` +\n                        `<div>EI: ${eiLabel}<br/></div>` +\n                        `<div>Usage: ${usageLabel}<br/></div>`\n                }\n            },\n            plotOptions: {\n                series: {\n                    pointIntervalUnit: 'week',\n                    label: {\n                        connectorAllowed: false\n                    },\n                    pointStart: 2010,\n                    point: {\n                        events: {\n                            click: (e)=>{\n                                const startDate = moment(new Date(e.point.starting_week)).format(\"MM/DD/YYYY\")\n                                const endDate = moment(new Date(e.point.ending_week)).format(\"MM/DD/YYYY\")\n                                this.props.fetchInventoryItemLoc(startDate, e.point.unit_inventory_item_id, this.props.byInvoiceDate)\n                                this.props.fetchInvoicesByItem({\n                                    startDate: startDate,\n                                    endDate: endDate,\n                                    itemId: e.point.unit_inventory_item_id,\n                                    byInvoiceDate: this.props.byInvoiceDate\n                                })\n                                this.props.setChartType(this.props.widget_id, \"inventory_counts_table\")\n                                this.props.pushHistory(this.props.widget_id, \"inventory_counts_table\", e.point.item_name)\n                            }\n                        }\n                    },\n                    events: {\n                        legendItemClick: (e)=>{\n                            e.preventDefault()\n                        }\n                    }\n                }\n            },\n            series: seriesMap\n        })\n    }\n\n\n    render(){\n        return (\n            <div>\n                <div ref={(el)=>{this.itemUsageTrend = el}} style={{ display: 'flex' }} className='chart' />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {cogs} = state\n    return {\n        currentCogsItemGL: cogs.currentCogsItemGL,\n        item_level_trend: cogs.item_level_trend,\n        currentItemTid: cogs.currentItemTid,\n        isLoading: cogs.isLoading,\n        byInvoiceDate: state.widget_settings.cost.byInvoiceDate\n    }\n}\n\nexport default connect(mapStateToProps, {\n    setChartType,\n    pushHistory,\n    fetchInventoryItemLoc,\n    updateItemCheckbox,\n    fetchInvoicesByItem\n})(CogsItemUsageTrend)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/CogsReport.css'\nimport ChartWrapper from '../ChartWrapper'\nimport CogsTable from './CogsTable'\n\nfunction buildConfig(report, clickable) {\n  if (!report) return {}\n  const data = report.map((subcat) => ({\n    x: subcat.gl_name,\n    y: parseFloat(subcat.percent),\n    className: clickable ? '' : 'no-pointer',\n  }))\n  const series = [\n    {\n      name: 'GL Spend',\n      colorByPoint: true,\n      data: data.sort((a, b) => a.y - b.y),\n    },\n  ]\n\n  const chartConfig = {\n    chart: {\n      type: 'pie',\n    },\n    title: {\n      text: '',\n    },\n    subtitle: {\n      text: '',\n    },\n    tooltip: {\n      enabled: true,\n      formatter() {\n        return `${this.point.x}<br>${this.y}%`\n      },\n    },\n    plotOptions: {\n      pie: {\n        dataLabels: {\n          enabled: true,\n          formatter() {\n            return `${this.point.x}<br>${this.y}%`\n          },\n        },\n      },\n    },\n    series,\n  }\n\n  return chartConfig\n}\nclass CogsReport extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { data, printView } = this.props\n    const clickable = _.isEmpty(this.props.onDataClick)\n    return (\n      <div>\n        <ChartWrapper\n          dataIsPresent={!_.isEmpty(data)}\n          config={buildConfig(data, clickable)}\n          modules={[]}\n          theme={theme}\n          fullscreenHeightRatio={0.6}\n          {...this.props}\n        />\n        <div className={printView ? '' : 'cogs-table-container'}>\n          <CogsTable printView={printView} data={data} />\n        </div>\n      </div>\n    )\n  }\n}\n\nCogsReport.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nCogsReport.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(CogsReport)\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars, formatPercent } from 'utils'\nimport Table from '../Table'\n\nclass CogsTable extends Component {\n  constructor(props) {\n    super(props)\n    this.formatData = this.formatData.bind(this)\n  }\n\n  formatData() {\n    const { data } = this.props\n    if (_.isEmpty(data)) return []\n\n    return data.map((invoice) => {\n      const { amount } = invoice\n      return {\n        ...invoice,\n        amount: parseFloat(amount),\n      }\n    })\n  }\n\n  render() {\n    const columns = [\n      {\n        Header: 'GL Name',\n        accessor: 'gl_name',\n        minWidth: 175,\n      },\n      {\n        Header: 'Beginning Inventory',\n        accessor: 'beg_inv',\n        Cell: (data) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatIntoDollars(data.row.beg_inv)}\n          </div>\n        ),\n      },\n      {\n        Header: 'Purchases',\n        accessor: 'purchases',\n        Cell: (data) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatIntoDollars(data.row.purchases)}\n          </div>\n        ),\n      },\n      {\n        Header: 'Ending Inventory',\n        accessor: 'end_inv',\n        Cell: (data) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatIntoDollars(data.row.end_inv)}\n          </div>\n        ),\n      },\n      {\n        Header: 'Usage',\n        accessor: 'cost',\n        Cell: (data) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatIntoDollars(data.row.cost)}\n          </div>\n        ),\n      },\n      {\n        Header: 'Cost %',\n        accessor: 'percent',\n        maxWidth: 80,\n        Cell: (data) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatPercent(data.row.percent)}\n          </div>\n        ),\n      },\n    ]\n\n    return (\n      <Table\n        showPagination={false}\n        columns={columns}\n        data={this.formatData()}\n        printView={this.props.printView}\n      />\n    )\n  }\n}\n\nCogsTable.defaultProps = {}\n\nCogsTable.propTypes = {}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(CogsTable)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(data) {\n  if (_.isEmpty(data)) return {}\n  const vendors = data.map((d) => d.name)\n  const percents = data.map((d) => d.percent)\n\n  const chartConfig = {\n    chart: {\n      type: 'bar',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      categories: vendors,\n      title: {\n        text: null,\n      },\n    },\n    yAxis: {\n      labels: {\n        overflow: 'justify',\n      },\n      title: {\n        text: 'Percent',\n      },\n    },\n    tooltip: {\n      enabled: false,\n      valueSuffix: '%',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n          format: '{y} %',\n        },\n      },\n    },\n    series: [\n      {\n        name: 'Categories',\n        data: percents,\n      },\n    ],\n  }\n\n  return chartConfig\n}\nclass MultiUnitVendorSpend extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { data } = this.props\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(data)}\n        config={buildConfig(data)}\n        theme={theme}\n        modules={[]}\n        {...this.props}\n      />\n    )\n  }\n}\n\nMultiUnitVendorSpend.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nMultiUnitVendorSpend.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(MultiUnitVendorSpend)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(data) {\n  if (_.isEmpty(data)) return {}\n  const { cost_across_units } = data\n  const vendors = cost_across_units.map((d) => d.name)\n  const percents = cost_across_units.map((d) => d.percent)\n\n  const chartConfig = {\n    chart: {\n      type: 'bar',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      categories: vendors,\n      labels: {\n        step: 1,\n      },\n      title: {\n        text: null,\n      },\n    },\n    yAxis: {\n      labels: {\n        overflow: 'allow',\n        step: 1,\n      },\n      title: {\n        text: 'Percent',\n      },\n    },\n    tooltip: {\n      enabled: false,\n      valueSuffix: '',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n          allowOverlap: true,\n          format: '{y} %',\n        },\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'Categories',\n        data: percents,\n        dataLabels: {\n          enabled: true,\n          allowOverlap: true,\n        },\n      },\n    ],\n  }\n\n  return chartConfig\n}\nclass MultiUnitVendorSpend extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { data } = this.props\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(data)}\n        config={buildConfig(data)}\n        modules={[]}\n        theme={theme}\n        {...this.props}\n      />\n    )\n  }\n}\n\nMultiUnitVendorSpend.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nMultiUnitVendorSpend.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(MultiUnitVendorSpend)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { sortDivisions } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(data) {\n  if (_.isEmpty(data)) return {}\n  const { cost_across_company_by_category } = data\n  const sortedDivisions = sortDivisions(cost_across_company_by_category)\n  const vendors = sortedDivisions.map((d) => d.name)\n  const percents = sortedDivisions.map((d) => d.percent)\n\n  const chartConfig = {\n    chart: {\n      type: 'bar',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      categories: vendors,\n      title: {\n        text: null,\n      },\n    },\n    yAxis: {\n      labels: {\n        overflow: 'justify',\n      },\n      title: {\n        text: 'Percent',\n      },\n    },\n    tooltip: {\n      enabled: false,\n      valueSuffix: '%',\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n          format: '{y} %',\n        },\n      },\n    },\n    series: [\n      {\n        name: 'Divisions',\n        data: percents,\n      },\n    ],\n  }\n\n  return chartConfig\n}\nclass MultiUnitVendorSpend extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { data } = this.props\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(data)}\n        config={buildConfig(data)}\n        modules={[]}\n        theme={theme}\n        {...this.props}\n      />\n    )\n  }\n}\n\nMultiUnitVendorSpend.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nMultiUnitVendorSpend.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(MultiUnitVendorSpend)\n","import _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  fetchReport,\n  pushHistory,\n  setChartType,\n  setCompanyData,\n  setDrilldownIndex,\n  setReportAttribute,\n  setWidgetState,\n  sliceHistory,\n} from 'actions'\nimport { setGlFilters } from 'actions/CogsActions'\nimport 'styles/FruitConsumptionWidget.css'\nimport { selectedDivisions, selectedUnits, setFetching } from 'utils'\nimport Widget from '../Widget'\nimport APSpendTable from './APSpendTable'\nimport CogsAcrossUnit from './CogsAcrossUnit'\nimport CogsAcrossUnitTrend from './CogsAcrossUnitTrend'\nimport CogsReport from './CogsReport'\nimport CostAcrossCompanyChart from './CostAcrossCompanyChart'\nimport CostAcrossUnitsChart from './CostAcrossUnitsChart'\nimport CostByCategoryChart from './CostByCategoryChart'\nimport InventoryCountsContainer from './InventoryCountsContainer'\nimport InvoicesByItem from './InvoicesByItem'\nimport TrendChart from './TrendChart'\n\nclass CostWidget extends Component {\n  constructor(props) {\n    super(props)\n    this.renderChart = this.renderChart.bind(this)\n    this.wrapChart = this.wrapChart.bind(this)\n    this.getChart = this.getChart.bind(this)\n    this.drilldown = this.drilldown.bind(this)\n    this.fetchChartData = this.fetchChartData.bind(this)\n    this.handleCostAcrossCompanyClick =\n      this.handleCostAcrossCompanyClick.bind(this)\n    this.handleCostByCategoryClick = this.handleCostByCategoryClick.bind(this)\n    this.handleCostAcrossUnitsClick = this.handleCostAcrossUnitsClick.bind(this)\n    this.handleGlClick = this.handleGlClick.bind(this)\n    this.params = this.params.bind(this)\n    this.costByCategoryParams = this.costByCategoryParams.bind(this)\n    this.unit_ids = this.unit_ids.bind(this)\n    this.toggleDivisionChart = this.toggleDivisionChart.bind(this)\n    this.unitIdsByDivision = this.unitIdsByDivision.bind(this)\n    this.fetchCostAcrossUnits = this.fetchCostAcrossUnits.bind(this)\n    this.fetchCogsAcrossUnit = this.fetchCogsAcrossUnit.bind(this)\n    this.setCostDates = this.setCostDates.bind(this)\n    this.onCompressClick = this.onCompressClick.bind(this)\n    this.goToInitialChart = this.goToInitialChart.bind(this)\n  }\n\n  UNSAFE_componentWillMount() {\n    const { id, fullscreen } = this.props\n    // set breadcrumb in redux state\n    if (!fullscreen) {\n      this.props.pushHistory(\n        id,\n        'cost_across_company',\n        `Aggregate Company Cost Of Sales`,\n      )\n      // set which chart is shown in redux state\n      this.props.setChartType(id, 'cost_across_company')\n      // call the api for the first chart\n      this.props.fetchReport(\n        this.props.id,\n        'cost_across_company',\n        this.costAcrossCompanyParams(),\n      )\n    }\n  }\n\n  UNSAFE_componentWillUpdate(nextProps) {\n    const byInvoiceDateChanged =\n      this.props.widget_settings.byInvoiceDate !==\n      nextProps.widget_settings.byInvoiceDate\n\n    const {\n      id,\n      dashboard: { fullscreenOpen },\n    } = nextProps\n    const lastActiveWidgetId = this.props.dashboard.activeWidget\n      ? this.props.dashboard.activeWidget.id\n      : null\n    const fullscreenDidClose =\n      !fullscreenOpen &&\n      this.props.dashboard.fullscreenOpen &&\n      this.props.dashboard.updatedInFullscreen &&\n      this.props.id !== lastActiveWidgetId\n    const { drillUp } = this.widget(nextProps)\n    const dateChanged =\n      this.props.startDate !== nextProps.startDate ||\n      this.props.endDate !== nextProps.endDate\n    const locationsChanged = !_.isEqual(\n      this.props.company.locations,\n      nextProps.company.locations,\n    )\n    const chartTypeChanged =\n      !_.isEqual(this.widget().chartType, this.widget(nextProps).chartType) &&\n      drillUp\n    // call the api with new dates or locations if changed\n    if (nextProps.fullscreen) return\n    if (locationsChanged) {\n      this.goToInitialChart(nextProps)\n      if (this.widget(nextProps).chartType === 'cost_across_company') {\n        this.props.fetchReport(\n          this.props.id,\n          'cost_across_company',\n          this.costAcrossCompanyParams(nextProps),\n        )\n      }\n    }\n    if (\n      dateChanged ||\n      chartTypeChanged ||\n      fullscreenDidClose ||\n      byInvoiceDateChanged\n    ) {\n      this.props.fetchReport(\n        this.props.id,\n        this.widget(nextProps).chartType,\n        this.params(nextProps),\n      )\n\n      this.props.setWidgetState(id, {\n        drillUp: false,\n        startDate: null,\n        endDate: null,\n      })\n    }\n\n    const { startDate, endDate, costDatesInvalid } = this.widget(nextProps)\n    const shouldSetDates = !startDate && !endDate && !costDatesInvalid\n    if (shouldSetDates) this.setCostDates(nextProps)\n  }\n\n  setCostDates(nextProps) {\n    const { id, reports } = nextProps\n    const { chartType } = this.widget(nextProps)\n    if (\n      reports[id] &&\n      !_.isEmpty(reports[id][chartType]) &&\n      !reports[id].fetchingData\n    ) {\n      const report = reports[id][chartType]\n      const { StartDate, EndDate } = report[0]\n        ? report[0]\n        : report[chartType][0]\n      if (StartDate && EndDate) {\n        if (isNaN(Date.parse(StartDate)) || isNaN(Date.parse(EndDate))) {\n          this.setWidgetState({ costDatesInvalid: true })\n        } else {\n          this.props.setWidgetState(id, {\n            startDate: moment(Date.parse(StartDate)),\n            endDate: moment(Date.parse(EndDate)),\n          })\n        }\n      }\n    }\n  }\n\n  params(props = this.props) {\n    switch (this.widget(props).chartType) {\n      case 'cost_across_company':\n        return this.costAcrossCompanyParams(props)\n      case 'cost_across_company_by_category':\n        return this.costByCategoryParams(props)\n      case 'cogs_across_company':\n        return this.costByCategoryParams(props)\n      case 'cost_across_units':\n        return this.costAcrossUnitsParams(props, true)\n      case 'cogs_across_division':\n        return this.costTrendDivisionParams(props)\n      case 'cogs_across_unit':\n        return this.glParams(props)\n      case 'cost_trend_gl_unit':\n        return this.glUnitParams(props)\n      case 'cost_trend_across_company':\n        return this.costByCategoryParams(props)\n      case 'cost_trend_across_division':\n        return this.costTrendDivisionParams(props)\n      default:\n        return ''\n    }\n  }\n\n  unitIdsByDivision(divisionName, props = this.props) {\n    return props.company.locations\n      .filter(\n        (l) => l.type === 'location' && l.checked && l.region === divisionName,\n      )\n      .map((l) => l.unit_id)\n  }\n\n  unit_ids(props = this.props, byDivision = false) {\n    // return array of relevant selected user ids\n    const { division } = this.widget()\n    if (byDivision) {\n      return this.unitIdsByDivision(division, props)\n    }\n    return props.company.locations\n      .filter((l) => l.type === 'location' && l.checked)\n      .map((l) => l.unit_id)\n  }\n\n  fetchChartData(type, params = '') {\n    const formattedCategory = encodeURIComponent(this.widget().category)\n    this.props.fetchReport(\n      this.props.id,\n      type,\n      `?category=${formattedCategory}${this.getDateParams()}${params}`,\n    )\n  }\n\n  widget(props = this.props) {\n    const { id, widgets } = props\n    return widgets.find((w) => w.id === id)\n  }\n\n  getDateParams(props = this.props) {\n    // format date parameters from redux state\n    const { startDate, endDate } = props.reports\n    return `&start_date=${moment(startDate).format(\n      'MM/DD/YYYY',\n    )}&end_date=${moment(endDate).format('MM/DD/YYYY')}`\n  }\n\n  wrapChart(chart) {\n    // wrap chart in container for high charts functionality and styling\n    return <div className=\"fruit-main-chart\">{chart}</div>\n  }\n\n  renderChart() {\n    // put chart in container if its not a table\n    const { chartType } = this.widget()\n    const chartTypeSplit = chartType.split('_')\n    const isTable = chartTypeSplit[chartTypeSplit.length - 1] === 'table'\n    const chart = this.getChart(chartType)\n    if (isTable) {\n      return chart\n    }\n    return this.wrapChart(chart)\n  }\n\n  getChart(chartType) {\n    // return chart based on chart type in redux state\n    const { reports, id } = this.props\n    const container = `chart-${id}`\n\n    switch (chartType) {\n      case 'cost_across_company':\n        return (\n          <div>\n            <CostAcrossCompanyChart\n              onDataClick={this.handleCostAcrossCompanyClick}\n              data={reports[id].cost_across_company}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.65}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'cost_across_company_by_category': {\n        const show_trend = reports[id].cost_across_company_by_category\n          ? reports[id].cost_across_company_by_category.show_trend\n          : true\n        return (\n          <div>\n            <button\n              className=\"btn btn-small btn-primary btn-toggle\"\n              onClick={() =>\n                this.toggleCompanyByCatChart('cost_trend_across_company')\n              }\n              disabled={!show_trend}\n            >\n              Show Trend Across Company\n            </button>\n            <button\n              className=\"btn btn-small btn-primary btn-toggle\"\n              onClick={() =>\n                this.toggleCompanyByCatChart('cogs_across_company')\n              }\n            >\n              Show COGS Across Company\n            </button>\n            <CostByCategoryChart\n              onDataClick={(event) =>\n                this.handleCostByCategoryClick(event.point.category)\n              }\n              data={reports[id].cost_across_company_by_category}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.55}\n              {...this.props}\n            />\n          </div>\n        )\n      }\n      case 'cost_across_units': {\n        const show_trend = reports[id].cost_across_company_by_category\n          ? reports[id].cost_across_company_by_category.show_trend\n          : true\n        return (\n          <div>\n            <button\n              className=\"btn btn-small btn-primary btn-toggle\"\n              onClick={() =>\n                this.toggleDivisionChart('cost_trend_across_division')\n              }\n              disabled={!show_trend}\n            >\n              Show Trend Across Division\n            </button>\n            <button\n              className=\"btn btn-small btn-primary btn-toggle\"\n              onClick={() => this.toggleDivisionChart('cogs_across_division')}\n            >\n              Show COGS Across Division\n            </button>\n            <CostAcrossUnitsChart\n              onDataClick={(event) =>\n                this.handleCostAcrossUnitsClick(event.point.category)\n              }\n              data={reports[id].cost_across_units}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.55}\n              {...this.props}\n            />\n          </div>\n        )\n      }\n      case 'cogs_across_unit': {\n        return (\n          <CogsAcrossUnit\n            widget_id={id}\n            data={reports[id].cogs_across_unit}\n            container={container}\n            type={chartType}\n            widthRatio={0.85}\n            heightRatio={0.4}\n            category={this.widget().category}\n            {...this.props}\n          />\n        )\n      }\n      case 'cost_trend_across_company':\n        return (\n          <div>\n            <button\n              className=\"btn btn-small btn-primary btn-toggle\"\n              onClick={() => this.toggleBack('cost_across_company_by_category')}\n            >\n              Show Cost Across Company\n            </button>\n            <TrendChart\n              data={reports[id].cost_trend_across_company}\n              title={this.widget().category}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.68}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'cost_trend_across_division':\n        return (\n          <div>\n            <button\n              className=\"btn btn-small btn-primary btn-toggle\"\n              onClick={() => this.toggleBack('cost_across_units')}\n            >\n              Show Cost Across Division\n            </button>\n            <TrendChart\n              data={reports[id].cost_trend_across_division}\n              title={this.widget().division}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.68}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'cost_trend_gl_unit':\n        return (\n          <TrendChart\n            data={reports[id].cost_trend_gl_unit}\n            title={this.widget().gl_name}\n            container={container}\n            type={chartType}\n            widthRatio={0.85}\n            heightRatio={0.75}\n            {...this.props}\n          />\n        )\n      case 'cogs_across_company':\n        return (\n          <div>\n            <button\n              className=\"btn btn-small btn-primary btn-toggle\"\n              onClick={() => this.toggleBack('cost_across_company_by_category')}\n            >\n              Show Cost Across Company\n            </button>\n            <CogsReport\n              data={reports[id].cogs_across_company}\n              title={this.widget().gl_name}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.4}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'cogs_across_division':\n        return (\n          <div>\n            <button\n              className=\"btn btn-small btn-primary btn-toggle\"\n              onClick={() => this.toggleBack('cost_across_units')}\n            >\n              Show Cost Across Division\n            </button>\n            <CogsReport\n              data={reports[id].cogs_across_division}\n              title={this.widget().gl_name}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.4}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'cogs_across_unit_trend': {\n        return <CogsAcrossUnitTrend widget_id={id} />\n      }\n      case 'inventory_counts_table': {\n        return <InventoryCountsContainer widget_id={id} />\n      }\n      case 'ap_spend_table': {\n        return <APSpendTable widget_id={id} />\n      }\n      case 'invoices_by_item': {\n        return <InvoicesByItem widget_id={id} />\n      }\n      default:\n        return <div>Whoops!</div>\n    }\n  }\n\n  drilldown(chartType, breadcrumb) {\n    // set chart type and breadcrumbs in redux\n    // called in every chart click with drilldown functionality\n    const { id } = this.props\n    setTimeout(() => {\n      this.props.onExpandClick(id)\n      this.props.setChartType(id, chartType)\n      this.props.pushHistory(id, chartType, breadcrumb)\n    }, 100)\n  }\n\n  // below are functions for handling drilldown events and\n  // defining parameters to be sent in api calls\n\n  costAcrossCompanyParams(props = this.props) {\n    const { group_id } = props.company\n    return `?group_id=${group_id}&unit_ids=${this.unit_ids(\n      props,\n    )}${this.getDateParams(props)}`\n  }\n\n  handleCostAcrossCompanyClick(event) {\n    setFetching(false)\n    const { id, company } = this.props\n    const { locations } = company\n    const { category } = event.point\n    this.props.setGlFilters([])\n    this.props.setWidgetState(id, { category })\n\n    const divisions = selectedDivisions(locations)\n    const units = selectedUnits(locations)\n    if (units.length === 1) {\n      this.fetchCogsAcrossUnit(units[0], category)\n      this.drilldown('cogs_across_unit', category)\n    } else if (divisions.length === 1) {\n      const divisionName = divisions[0] ? divisions[0].name : ''\n      this.fetchCostAcrossUnits(divisionName, category)\n      this.drilldown('cost_across_units', category)\n    } else {\n      this.props.fetchReport(\n        this.props.id,\n        'cost_across_company_by_category',\n        this.costByCategoryParams(),\n      )\n      this.props.setWidgetState(id, { category })\n      this.drilldown('cost_across_company_by_category', category)\n    }\n  }\n\n  fetchCostAcrossUnits(divisionName, category) {\n    const formattedCategory = encodeURIComponent(category)\n    const params = `?unit_ids=${this.unitIdsByDivision(\n      divisionName,\n    )}&category=${formattedCategory}${this.getDateParams()}`\n    const { id } = this.props\n    this.props.fetchReport(this.props.id, 'cost_across_units', params)\n    setTimeout(() => {\n      this.props.setWidgetState(id, { division: divisionName, category })\n    }, 75)\n  }\n\n  fetchCogsAcrossUnit(unit, category = this.widget().category) {\n    const { id, company } = this.props\n    const { group_id } = company\n    const formattedCategory = encodeURIComponent(category)\n    const params = `?unit_id=${\n      unit.unit_id\n    }&group_id=${group_id}&category=${formattedCategory}${this.getDateParams()}`\n    this.props.fetchReport(this.props.id, 'cogs_across_unit', params)\n    setTimeout(() => {\n      this.props.setWidgetState(id, { unit_id: unit.unit_id, category })\n    }, 75)\n  }\n\n  costByCategoryParams(props = this.props) {\n    const { company } = props\n    const { group_id } = company\n    const { category } = this.widget()\n    const formattedCategory = encodeURIComponent(category)\n\n    return `?group_id=${group_id}&unit_ids=${this.unit_ids(\n      props,\n    )}&category=${formattedCategory}${this.getDateParams(props)}`\n  }\n\n  handleCostByCategoryClick(division) {\n    const { id, company } = this.props\n    this.props.setWidgetState(id, { division })\n    const units = selectedUnits(\n      company.locations.filter((loc) => loc.region === division),\n    )\n    if (units.length === 1) {\n      this.fetchCogsAcrossUnit(units[0])\n      this.drilldown('cogs_across_unit', units[0].name)\n    } else {\n      this.props.fetchReport(\n        this.props.id,\n        'cost_across_units',\n        this.costAcrossUnitsParams(),\n      )\n      this.drilldown('cost_across_units', division)\n    }\n  }\n\n  costAcrossUnitsParams(props = this.props) {\n    const { category } = this.widget()\n    const formattedCategory = encodeURIComponent(category)\n    return `?unit_ids=${this.unit_ids(\n      props,\n      true,\n    )}&category=${formattedCategory}${this.getDateParams(props)}`\n  }\n\n  handleCostAcrossUnitsClick(unitName) {\n    const { id, reports } = this.props\n    const { unit_id } = reports[id].cost_across_units.cost_across_units.find(\n      (u) => u.name === unitName,\n    )\n\n    this.props.setWidgetState(id, { unit_id })\n\n    setFetching(false)\n\n    this.props.fetchReport(this.props.id, 'cogs_across_unit', this.glParams())\n    this.drilldown('cogs_across_unit', unitName)\n  }\n\n  glParams(props = this.props) {\n    const { company } = props\n    const { unit_id, category } = this.widget()\n    const formattedCategory = encodeURIComponent(category)\n    const { group_id } = company\n    return `?unit_id=${unit_id}&group_id=${group_id}&category=${formattedCategory}${this.getDateParams(\n      props,\n    )}`\n  }\n\n  handleGlClick(event) {\n    const { reports, id } = this.props\n    const gl = event.point.x\n    const { gl_code } = reports[id].cogs_across_unit.find(\n      (d) => d.gl_name === gl,\n    )\n    this.props.setWidgetState(this.props.id, { gl_code, gl_name: gl })\n    this.props.fetchReport(\n      this.props.id,\n      'cost_trend_gl_unit',\n      this.glUnitParams(),\n    )\n    this.drilldown('cost_trend_gl_unit', gl)\n  }\n\n  glUnitParams(props = this.props) {\n    const { gl_code, unit_id, category } = this.widget()\n    const formattedCategory = encodeURIComponent(category)\n    return `?gl_code=${gl_code}&unit_id=${unit_id}&category=${formattedCategory}${this.getDateParams(\n      props,\n    )}`\n  }\n\n  costTrendDivisionParams(props = this.props) {\n    const { company } = props\n    const { locations_by_region, group_id } = company\n    const { division, category } = this.widget()\n    const formattedCategory = encodeURIComponent(category)\n    const { division_id } = locations_by_region.find(\n      (div) => div.name === division,\n    )\n    const unit_ids = company.locations\n      .filter(\n        (l) =>\n          l.type === 'location' &&\n          l.region === this.widget().division &&\n          l.checked,\n      )\n      .map((l) => l.unit_id)\n\n    return `?unit_ids=${unit_ids}&group_id=${group_id}&division_id=${division_id}&category=${formattedCategory}${this.getDateParams(\n      props,\n    )}`\n  }\n\n  toggleBack(chartType) {\n    this.props.setChartType(this.props.id, chartType)\n  }\n\n  toggleCompanyByCatChart(chartType) {\n    this.props.setChartType(this.props.id, chartType)\n    this.props.fetchReport(\n      this.props.id,\n      chartType,\n      this.costByCategoryParams(),\n    )\n  }\n\n  toggleDivisionChart(chartType) {\n    const { id } = this.props\n    this.props.setChartType(id, chartType)\n    this.props.fetchReport(\n      this.props.id,\n      chartType,\n      this.costTrendDivisionParams(),\n    )\n  }\n\n  onCompressClick() {\n    this.goToInitialChart()\n    this.props.onCompressClick()\n  }\n\n  goToInitialChart() {\n    const { id } = this.props\n    this.props.setChartType(id, 'cost_across_company')\n    this.props.sliceHistory(id, -1)\n    this.props.pushHistory(\n      id,\n      'cost_across_company',\n      `Aggregate Company Cost Of Sales`,\n    )\n  }\n\n  render() {\n    const { chartType } = this.widget()\n    const { startDate, endDate } = this.widget()\n    const dates =\n      startDate && endDate\n        ? {\n            startDate: moment(startDate).format('MM/DD/YYYY'),\n            endDate: moment(endDate).format('MM/DD/YYYY'),\n          }\n        : { startDate: '', endDate: '' }\n\n    if (!chartType) return <div></div>\n    return (\n      <Widget\n        title=\"Cost of Sales\"\n        type={chartType}\n        shouldFetch={false}\n        history={this.props.history}\n        dates={dates}\n        showDatesCanvas={startDate && endDate}\n        {...this.props}\n        onCompressClick={this.onCompressClick}\n      >\n        {this.renderChart()}\n      </Widget>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  widgets: state.widgets.widgets,\n  widget_settings: state.widget_settings.cost,\n  reports: state.reports,\n  startDate: state.reports.startDate,\n  endDate: state.reports.endDate,\n  company: state.company,\n  dashboard: state.dashboard,\n})\n\nexport default connect(mapStateToProps, {\n  setDrilldownIndex,\n  setReportAttribute,\n  fetchReport,\n  pushHistory,\n  sliceHistory,\n  setChartType,\n  setCompanyData,\n  setWidgetState,\n  setGlFilters,\n})(CostWidget)\n","import React, { Component } from 'react'\nimport \"./GLDataTable.css\"\n\nconst toRow = (label, data) => {\n    return data.map((val, idx) => <td key={`${label}_${idx}`} className={\"align-right\"}>{val}</td>)\n}\n\nclass GLDataTable extends Component {\n    render(){\n        const {name, data, gl_code} = this.props\n        const dates = data.map(d => d.ending_week).map((val, idx) => <th key={`date-${idx}`} className={\"align-right\"}>{val}</th>)\n        const bi = toRow(\"bi\", data.map(d => d.beg_inv))\n        const purchases = toRow(\"purchases\", data.map(d => d.purchases))\n        const ei = toRow(\"ei\", data.map(d => d.end_inv))\n        const cost_percent = toRow(\"cost_percent\", data.map(d => d.cost))\n        const usage = toRow(\"usage\", data.map(d => d.usage))\n\n        return (<div className={\"gl-tabular-item\"}>\n            <h4>{name} ({gl_code})</h4>\n            <table className={\"table table-striped\"} data-title={name}>\n                <thead>\n                    <tr>\n                        <th></th>\n                        {dates}\n                    </tr>\n                </thead>\n                <tbody>\n\n                    <tr>\n                        <th>BI</th>\n                        {bi}\n                    </tr>\n                    <tr>\n                        <th>Purchases</th>\n                        {purchases}\n                    </tr>\n                    <tr>\n                        <th>EI</th>\n                        {ei}\n                    </tr>\n                    <tr>\n                        <th>Cost %</th>\n                        {cost_percent}\n                    </tr>\n                    <tr>\n                        <th>Usage</th>\n                        {usage}\n                    </tr>\n                </tbody>\n            </table>\n        </div>)\n    }\n}\n\nexport default GLDataTable\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setChartType, sliceHistory } from \"actions\";\nimport \"./InventoryCountsContainer.css\";\nimport InventoryCountsTable from \"./InventoryCountsTable\";\nimport InvoicesTable from \"./InvoicesTable\";\nimport moment from \"moment\";\n\nclass InventoryCountsContainer extends Component {\n  componentDidUpdate(prevProps) {\n    const { startDate, endDate, byInvoiceDate } = this.props;\n    if (\n      prevProps.startDate !== startDate ||\n      prevProps.endDate !== endDate ||\n      prevProps.byInvoiceDate !== byInvoiceDate\n    ) {\n      this.navigateBack();\n    }\n  }\n\n  navigateBack() {\n    const { widget_id } = this.props;\n    this.props.setChartType(widget_id, \"cogs_across_unit_trend\");\n    this.props.sliceHistory(widget_id, 3);\n  }\n\n  render() {\n    const { invoices_by_item } = this.props;\n    return (\n      <div className={\"inventory-counts-container\"}>\n        <InventoryCountsTable />\n        <div className={\"inventory-counts-invoices-table\"}>\n          <InvoicesTable dataMap={invoices_by_item} defaultPageSize={5} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    invoices_by_item: state.cogs.invoices_by_item,\n    startDate: moment(state.reports.startDate).format(\"MM/DD/YYYY\"),\n    endDate: moment(state.reports.endDate).format(\"MM/DD/YYYY\"),\n    byInvoiceDate: state.widget_settings.cost.byInvoiceDate,\n  };\n};\n\nexport default connect(mapStateToProps, { setChartType, sliceHistory })(\n  InventoryCountsContainer\n);\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ReactTable from \"react-table\"\nimport { pushHistory, setChartType } from 'actions'\nimport { formatIntoDollars } from 'utils'\n\nclass InventoryCountsTable extends Component {\n    render(){\n        const { item_inventory_level_by_location } = this.props\n        const dataMap = item_inventory_level_by_location.map((d)=>{\n            const {starting_week, inv_location, unit_inventory_item_id, counting_unit, end_inv_quantity, end_inv} = d\n            return {\n                starting_week: starting_week,\n                unit_inventory_item_id: unit_inventory_item_id,\n                inv_location: inv_location,\n                counting_unit: counting_unit,\n                end_inv_quantity: end_inv_quantity,\n                end_inv: end_inv\n            }\n        })\n        const columns = [\n            {\n                Header: 'Location Name',\n                accessor: \"inv_location\"\n            },\n            {\n                Header: 'Unit',\n                accessor: \"counting_unit\",\n                Cell: (data)=>{\n                    return (\n                        <div>\n                            {data.row.counting_unit}\n                        </div>\n                    )\n                }\n            },\n            {\n                Header: 'Qty',\n                accessor: \"end_inv_quantity\",\n                Cell: (data)=>{\n                    return (\n                        <div style={{ textAlign: \"right\" }}>\n                            {data.row.end_inv_quantity}\n                        </div>\n                    )\n                }\n            },\n            {\n                Header: 'Item Price',\n                accessor: \"end_inv\",\n                Cell: (data)=>{\n                    const {end_inv, end_inv_quantity} = data.original\n                    let itemPrice = parseFloat(end_inv / end_inv_quantity)\n                    if (_.isNaN(itemPrice)){\n                        itemPrice = 0\n                    }\n                    itemPrice = formatIntoDollars(itemPrice)\n                    return (\n                        <div style={{ textAlign: \"right\" }}>\n                            {itemPrice}\n                        </div>\n                    )\n                }\n            },\n            {\n                Header: 'Total',\n                accessor: \"end_inv\",\n                Cell: (data)=>{\n                    return (\n                        <div style={{ textAlign: \"right\" }}>\n                            {formatIntoDollars(data.row.end_inv)}\n                        </div>\n                    )\n                }\n            }\n        ]\n        return (\n            <div className={\"inventory-counts-table-container\"}>\n                <div className={\"title\"}>\n                    <h4>Inventory Counts</h4>\n                </div>\n                <ReactTable\n                    data={dataMap}\n                    columns={columns}\n                    defaultPageSize={5}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        item_inventory_level_by_location: state.cogs.item_inventory_level_by_location\n    }\n}\n\nexport default connect(mapStateToProps, {setChartType, pushHistory})(InventoryCountsTable)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchInvoicesByItem } from \"actions/CogsActions\";\nimport InvoicesTable from \"./InvoicesTable\";\nimport moment from \"moment\";\n\nlet isFetching = false;\n\nclass InvoicesByItem extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.props.isLoading) {\n      if (\n        prevProps.startDate !== this.props.startDate ||\n        prevProps.endDate !== this.props.endDate ||\n        prevProps.byInvoiceDate !== this.props.byInvoiceDate\n      ) {\n        this.updateData();\n      }\n    }\n  }\n\n  updateData() {\n    if (isFetching) {\n      return;\n    }\n    isFetching = true;\n    this.props.fetchInvoicesByItem({\n      itemId: this.props.itemId,\n      byInvoiceDate: this.props.byInvoiceDate,\n    });\n    setTimeout(() => {\n      isFetching = false;\n    }, 1000);\n  }\n\n  render() {\n    const { invoices_by_item } = this.props;\n    const dataMap = invoices_by_item.map((d) => {\n      const {\n        name,\n        invoiceNumber,\n        invoiceDate,\n        starting_week,\n        ending_week,\n        checkNumber,\n        checkDate,\n        amount,\n        imageLink,\n      } = d;\n      return {\n        name: name,\n        invoiceNumber: invoiceNumber,\n        invoiceDate: invoiceDate,\n        starting_week: starting_week,\n        ending_week: ending_week,\n        checkNumber: checkNumber,\n        checkDate: checkDate,\n        amount: amount,\n        imageLink: imageLink,\n      };\n    });\n\n    return (\n      <div className={\"ap-spend-table\"}>\n        <div className={\"title\"}>\n          <h3>Invoices by Item</h3>\n        </div>\n        <InvoicesTable dataMap={dataMap} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { reports, cogs } = state;\n  return {\n    startDate: moment(reports.startDate).format(\"MM/DD/YYYY\"),\n    endDate: moment(reports.endDate).format(\"MM/DD/YYYY\"),\n    invoices_by_item: state.cogs.invoices_by_item,\n    isLoading: cogs.isLoading,\n    itemId: cogs.itemId,\n    byInvoiceDate: state.widget_settings.cost.byInvoiceDate,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchInvoicesByItem })(\n  InvoicesByItem\n);\n","import _ from 'lodash'\nimport moment from 'moment'\nimport React from \"react\"\nimport { connect } from 'react-redux'\nimport ReactTable from \"react-table\"\nimport { formatIntoDollars } from 'utils'\nimport './InvoicesTable.css'\n\nclass InvoicesTable extends React.Component {\n    formatDate(dateStr){\n        if (_.isEmpty(dateStr)){\n            return \"\"\n        }\n        return moment(new Date(dateStr)).format(\"MM/DD/YYYY\")\n    }\n\n    render(){\n        const {dataMap, defaultPageSize, byInvoiceDate} = this.props\n\n        const defaultSort = byInvoiceDate ? \"invoiceDate\" : \"ending_week\"\n\n        const columns = [\n            {\n                Header: 'Vendor Name',\n                accessor: \"name\"\n            },\n            {\n                Header: 'Invoice Number',\n                accessor: \"invoiceNumber\"\n            },\n            {\n                Header: 'Invoice Date',\n                accessor: \"invoiceDate\",\n                Cell: data => {\n                    const {starting_week, ending_week} = data.original\n                    const {invoiceDate} = data.row\n                    const startDate = new Date(starting_week).getTime()\n                    const endDate = new Date(ending_week).getTime()\n                    const invDate = new Date(invoiceDate).getTime()\n\n                    if (invDate >= startDate && invDate <= endDate ){\n                        return (\n                            <div>\n                                {this.formatDate(invoiceDate)}\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div style={{color: \"red\", fontWeight: \"bolder\"}}>\n                                {this.formatDate(invoiceDate)}\n                            </div>\n                        )\n                    }\n                }\n            },\n            {\n                Header: 'Submitted Date',\n                accessor: \"ending_week\",\n                Cell: data => {\n                    const {ending_week} = data.row\n\n                    return (\n                        <div>\n                            {this.formatDate(ending_week)}\n                        </div>\n                    )\n                }\n            },\n            {\n                Header: 'Check Date',\n                accessor: \"checkDate\",\n                Cell: data => {\n                    const {checkDate} = data.row\n                    return (\n                        <div style={{ textAlign: \"left\" }}>\n                            {this.formatDate(checkDate)}\n                        </div>\n                    )\n                }\n            },\n            {\n                Header: 'Check Number',\n                accessor: \"checkNumber\"\n            },\n            {\n                Header: 'Amount',\n                accessor: \"amount\",\n                Cell: data => {\n                    const {amount} = data.row\n                    return (\n                        <div style={{ textAlign: \"right\" }}>\n                            {formatIntoDollars(amount)}\n                        </div>\n                    )\n                }\n            },\n            {\n                Header: 'Image',\n                accessor: \"imageLink\",\n                Cell: data => {\n                    const {imageLink} = data.row\n                    if (imageLink){\n                        return (\n                            <div style={{ textAlign: \"left\" }}>\n                                {_.isEmpty(imageLink) ? \"\" : <a target={\"_blank\"} href={imageLink}>View Image</a>}\n                            </div>\n                        )\n                    } else {\n                        return <div></div>\n                    }\n                }\n            }\n        ]\n\n        return (\n            <ReactTable\n                data={dataMap}\n                columns={columns}\n                defaultSorted={[\n                    {\n                        id: defaultSort,\n                        asc: true\n                    }\n                ]}\n                defaultPageSize={defaultPageSize}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        byInvoiceDate: state.widget_settings.cost.byInvoiceDate\n    }\n}\n\nInvoicesTable.defaultProps = {\n    dataMap: [],\n    defaultPageSize: 10\n}\n\nexport default connect(mapStateToProps)(InvoicesTable)\n","import _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { formatIntoDollars, roundTwo } from 'utils'\n\n\nclass ItemDataTable extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            qty_dollar: \"dollar\"\n        }\n        this.handleRadioChange = this.handleRadioChange.bind(this)\n    }\n\n    handleRadioChange(e){\n        this.setState({qty_dollar: e.target.value})\n    }\n\n    render(){\n        const {name, t_id, data, counting_unit} = this.props\n        const {qty_dollar} = this.state\n        const isDollar = qty_dollar === \"dollar\"\n        const dates = data.map(d => moment(d.ending_week).format(\"MM/DD\"))\n\n        const bi = data.map((d, idx) => <td className={\"align-right\"} key={`bi-${idx}`}>{isDollar ? formatIntoDollars(d.beg_inv) : roundTwo(d.beg_inv_quantity)}</td>)\n        const ei = data.map((d, idx) => <td className={\"align-right\"} key={`ei-${idx}`}>{isDollar ? formatIntoDollars(d.end_inv) : roundTwo(d.end_inv_quantity)}</td>)\n        const purchases = data.map((d, idx) => <td className={\"align-right\"} key={`purchases-${idx}`}>{isDollar ? formatIntoDollars(d.purchases) : roundTwo(d.purchase_quantity)}</td>)\n        const usage = data.map((d, idx) => <td className={\"align-right\"} key={`usage-${idx}`}>{isDollar ? formatIntoDollars(d.usage) : roundTwo(d.usage_qty)}</td>)\n\n        return (<div className={\"item-data-table\"}>\n            <h4>{name}</h4>\n            <div style={{float: \"left\"}}>\n                {!_.isEmpty(counting_unit) &&\n                <p>Unit: {counting_unit}</p>\n                }\n            </div>\n            <div style={{float: \"right\"}} onChange={this.handleRadioChange}>\n                <div className={\"item-data-table-radio\"}>\n                    <input type=\"radio\" name={`qty_dollar_${t_id}`} value={\"dollar\"} defaultChecked={isDollar}/>\n                    <label>$</label>\n                </div>\n                <div className={\"item-data-table-radio\"}>\n                    <input type=\"radio\" name={`qty_dollar_${t_id}`} value={\"qty\"} defaultChecked={!isDollar}/>\n                    <label>Qty</label>\n                </div>\n            </div>\n            <div className={\"clearfix\"}></div>\n\n            <table className={\"table table-striped\"} data-title={name}>\n                <thead>\n                    <tr>\n                        <th></th>\n                        { dates.map((date, idx) => <th className={\"align-right\"} key={`date-${idx}`}>{date}</th>) }\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th>BI</th>\n                        {bi}\n                    </tr>\n                    <tr>\n                        <th>Purchases</th>\n                        {purchases}\n                    </tr>\n                    <tr>\n                        <th>EI</th>\n                        {ei}\n                    </tr>\n                    <tr>\n                        <th>Usage</th>\n                        {usage}\n                    </tr>\n                </tbody>\n            </table>\n        </div>)\n    }\n}\n\nexport default ItemDataTable\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(data) {\n  if (_.isEmpty(data)) return {}\n\n  const chartConfig = {\n    title: {\n      text: 'Trend',\n    },\n    yAxis: {\n      title: {\n        text: 'Percent',\n      },\n    },\n    xAxis: {\n      type: 'datetime',\n    },\n    legend: {\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'middle',\n      enabled: false,\n    },\n    tooltip: {\n      pointFormat:\n        '<span style=\"color:{series.color}\"></span><b>{point.y} %</b><br/>',\n      xDateFormat: '%m/%d/%Y',\n    },\n    plotOptions: {\n      series: {\n        label: {\n          connectorAllowed: false,\n        },\n        pointStart: 2010,\n      },\n    },\n\n    series: [\n      {\n        data: data.map((d) => ({\n          x: Date.parse(d.starting_week),\n          y: d.percent,\n          className: 'no-pointer',\n        })),\n      },\n    ],\n  }\n\n  return chartConfig\n}\n\nclass MultiUnitVendorSpend extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { data } = this.props\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(data)}\n        config={buildConfig(data)}\n        theme={theme}\n        {...this.props}\n      />\n    )\n  }\n}\n\nMultiUnitVendorSpend.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nMultiUnitVendorSpend.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(MultiUnitVendorSpend)\n","import annotations from 'highcharts/modules/annotations'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/SpendByWeek.css'\nimport { formatIntoDollars, sortDivisions } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\nimport Select from './Select'\n\nclass FourRBarChart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { selected: 'Margin' }\n    this.buildConfig = this.buildConfig.bind(this)\n    this.handleSelect = this.handleSelect.bind(this)\n  }\n\n  handleSelect(event) {\n    this.setState({ selected: event.target.value })\n  }\n\n  buildConfig(reportData) {\n    if (_.isEmpty(reportData)) return {}\n    const data = sortDivisions(reportData)\n    const divisions = data.map((d) => d.DivisionName)\n    const { selected } = this.state\n\n    const sales = data.map((d) => {\n      if (d.Recipe) {\n        return {\n          y: d.Recipe.GrossPrice.Value,\n          name: d.DivisionName,\n          id: d.DivisionId,\n          marginPercent: d.Recipe.MarginPercent\n            ? d.Recipe.MarginPercent.FormattedValue\n            : '0%',\n          costPercent: d.Recipe.FoodCostPercent\n            ? d.Recipe.FoodCostPercent.FormattedValue\n            : '0%',\n          percentType: selected,\n        }\n      }\n      return { y: 0, name: d.DivisionName, id: d.DivisionId }\n    })\n\n    const series2 = data.map((d) => {\n      if (d.Recipe) {\n        let y = 0\n        if (this.state.selected === 'Margin') {\n          y = d.Recipe.Impact.Value\n        } else {\n          y = d.Recipe.NetCost.Value\n        }\n        return {\n          y,\n          name: d.DivisionName,\n          id: d.DivisionId,\n          marginPercent: d.Recipe.MarginPercent\n            ? d.Recipe.MarginPercent.FormattedValue\n            : '0%',\n          costPercent: d.Recipe.FoodCostPercent\n            ? d.Recipe.FoodCostPercent.FormattedValue\n            : '0%',\n          percentType: selected,\n        }\n      }\n      return { y: 0, name: d.DivisionName, id: d.DivisionId }\n    })\n\n    const chartConfig = {\n      chart: {\n        type: 'column',\n      },\n      title: {\n        text: '',\n      },\n      xAxis: {\n        categories: divisions,\n        title: {\n          text: null,\n        },\n      },\n      yAxis: {\n        labels: {\n          overflow: 'justify',\n        },\n        title: {\n          text: 'Amount ($)',\n        },\n      },\n      tooltip: {\n        enabled: true,\n        formatter() {\n          const { marginPercent, costPercent, percentType } = this.point\n          const percent = percentType === 'Margin' ? marginPercent : costPercent\n          return (\n            `<b>${this.series.name}:<b>` +\n            `<br>${formatIntoDollars(this.y)}<br>` +\n            `<br>` +\n            `<b>${percentType} Percent:<b>` +\n            `<br>${percent}`\n          )\n        },\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true,\n          },\n        },\n      },\n      credits: {\n        enabled: false,\n      },\n      series: [\n        { data: sales, name: 'Sales' },\n        { data: series2, name: this.state.selected, tooltip: {} },\n      ],\n    }\n\n    return chartConfig\n  }\n\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { reports, id, type } = this.props\n    return (\n      <div className=\"spend-by-week\">\n        <Select\n          options={['Margin', 'Cost']}\n          handleSelect={this.handleSelect}\n          selected={this.state.selected}\n        />\n        <ChartWrapper\n          dataIsPresent={!_.isEmpty(reports[id][type])}\n          config={this.buildConfig(reports[id][type])}\n          modules={[annotations]}\n          theme={theme}\n          {...this.props}\n        />\n      </div>\n    )\n  }\n}\n\nFourRBarChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nFourRBarChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(FourRBarChart)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/4rBubbleChart.css'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(data) {\n  data = data.filter((d) => d.checked)\n\n  let zeroBubble = true\n  const series = data.map((recipe) => {\n    const x = recipe.QuantitySold\n    const y = Number((recipe.MarginPercent.Value * 100).toFixed(2)) || 0\n    const z =\n      Number((recipe.GrossPrice.Value / recipe.QuantitySold).toFixed(2)) || 0\n\n    if (x === 0 && y === 0 && z === 0) {\n      zeroBubble = false\n    }\n\n    return {\n      x,\n      y,\n      z,\n      name: recipe.Name,\n      recipeId: recipe.CorporateRecipeId,\n    }\n  })\n\n  const xSum = series.map((data) => data.x).reduce((a, b) => a + b, 0)\n  const xAverage = xSum / data.length || 0\n\n  const ySum = series.map((data) => data.y).reduce((a, b) => a + b, 0)\n  const yAverage = ySum / data.length || 0\n\n  if (zeroBubble) {\n    series.unshift({\n      name: 'dummy series',\n      x: 0,\n      y: 0,\n      z: 0,\n      showInLegend: false,\n      color: 'transparent',\n      enableMouseTracking: false,\n    })\n  }\n\n  const seriesData = [{ data: series }]\n\n  return {\n    chart: {\n      type: 'bubble',\n      plotBorderWidth: 1,\n      zoomType: 'xy',\n      marginRight: 87,\n    },\n\n    legend: {\n      enabled: false,\n    },\n\n    title: {\n      text: null,\n    },\n\n    xAxis: {\n      gridLineWidth: 0.01,\n      title: {\n        text: 'Quantity Sold',\n      },\n      labels: {\n        format: '{value}',\n      },\n      lineColor: 'transparent',\n      plotLines: [\n        {\n          color: 'black',\n          dashStyle: 'dot',\n          width: 2,\n          value: xAverage,\n          label: {\n            rotation: 0,\n            y: 15,\n            style: {\n              fontStyle: 'italic',\n            },\n            text: `Quantity Sold Average: ${xAverage.toFixed(2)}`,\n          },\n          zIndex: 1000,\n        },\n      ],\n    },\n\n    yAxis: {\n      startOnTick: false,\n      endOnTick: false,\n      title: {\n        text: 'Margin',\n      },\n      labels: {\n        format: '{value} %',\n      },\n      lineWidth: 0,\n      minorGridLineWidth: 0,\n      lineColor: 'transparent',\n      minorTickLength: 0,\n      tickLength: 0,\n      maxPadding: 0.2,\n      plotLines: [\n        {\n          color: 'black',\n          dashStyle: 'dot',\n          width: 2,\n          value: yAverage,\n          label: {\n            align: 'right',\n            style: {\n              fontStyle: 'italic',\n            },\n            text: `Margin Average: ${yAverage.toFixed(2)} %`,\n            x: -10,\n          },\n          zIndex: 1000,\n        },\n      ],\n    },\n\n    tooltip: {\n      useHTML: true,\n      headerFormat: '<table>',\n      pointFormat:\n        '<tr><th colspan=\"2\"><h3>{point.name}</h3></th></tr>' +\n        '<tr><th>Quantity Sold:</th><td> {point.x}</td></tr>' +\n        '<tr><th>Margin:</th><td> {point.y} %</td></tr>' +\n        '<tr><th>Sale Price:</th><td> $' +\n        '{point.z}</td></tr>',\n      footerFormat: '</table>',\n    },\n\n    plotOptions: {\n      series: {\n        dataLabels: {\n          enabled: true,\n          format: '{point.name}',\n        },\n      },\n      bubble: {\n        minSize: 3,\n        maxSize: 50,\n      },\n    },\n    series: seriesData,\n  }\n}\n\nclass BubbleChart extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { data, fullscreenOpen } = this.props\n    const dataIsPresent = !_.isEmpty(data)\n    const buildData = buildConfig(data)\n\n    return (\n      <div className={`bubble-chart ${fullscreenOpen ? 'fullscreen' : ''}`}>\n        <div className=\"corner-titles\">\n          <div>REPLATE</div>\n          <div>RETAIN</div>\n        </div>\n        <ChartWrapper\n          dataIsPresent={dataIsPresent}\n          config={buildData}\n          modules={[]}\n          theme={theme}\n          fullscreenHeightRatio={0.5}\n          is_bubble\n          {...this.props}\n        />\n        <div className=\"corner-titles corner-bottom\">\n          <div>RETHINK</div>\n          <div>REPRICE</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nBubbleChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nBubbleChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => {\n  const { reports, dashboard } = state\n  return {\n    reports,\n    fullscreenOpen: dashboard.fullscreenOpen,\n  }\n}\n\nexport default connect(mapStateToProps)(BubbleChart)\n","import Highcharts from 'highcharts'\nimport HighchartsMore from 'highcharts-more'\nimport _ from 'lodash'\nimport Chart from '../Chart'\n\nclass BubbleChartWrapper extends Chart {\n  componentDidMount() {\n    this.renderBubbleChart()\n  }\n\n  renderBubbleChart() {\n    const { config, theme, printView } = this.props\n    HighchartsMore(Highcharts)\n    Highcharts.theme = {\n      colors: theme,\n      chart: {\n        backgroundColor: null,\n        style: {\n          fontFamily: 'Dosis, sans-serif',\n        },\n        animation: printView ? { duration: 100 } : true,\n      },\n      title: {\n        style: {\n          fontSize: '16px',\n          fontWeight: 'bold',\n          textTransform: 'uppercase',\n        },\n      },\n      xAxis: {\n        gridLineWidth: 1,\n      },\n      yAxis: {\n        minorTickInterval: 'auto',\n        title: {\n          style: {\n            textTransform: 'uppercase',\n          },\n        },\n        labels: {\n          style: {\n            fontSize: '12px',\n          },\n        },\n      },\n      plotOptions: {\n        candlestick: {\n          lineColor: '#404048',\n        },\n      },\n\n      background2: 'whitesmoke',\n    }\n\n    Highcharts.setOptions(Highcharts.theme)\n\n    const plotOptionSeries = {\n      point: { events: { click: this.handleDataClick } },\n    }\n    const { width, height } = this.getSize()\n\n    const configWithSize = {\n      ...config,\n      xAxis: { ...config.xAxis, labels: this.barXAxisConfig() },\n      chart: { ...config.chart, width, height },\n      plotOptions: { ...config.plotOptions, series: plotOptionSeries },\n    }\n\n    this.chart = new Highcharts.Chart(this.state.chartId, configWithSize)\n  }\n\n  updateFourRBubbleChart(newSeries) {\n    while (this.chart.series.length > 0) this.chart.series[0].remove(true)\n    newSeries.forEach((series) => {\n      this.chart.addSeries(series)\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config, theme } = this.props\n    this.setDimensions()\n\n    Highcharts.theme = { colors: theme }\n    Highcharts.setOptions(Highcharts.theme)\n\n    if (!_.isEqual(config, prevProps.config)) {\n      this.updateFourRBubbleChart(config.series)\n      this.chart.setTitle({ text: config.title.text })\n      this.updateDrilldown(config)\n      this.updateCategories(config)\n      this.updatePlotLines(config)\n      this.chart.redraw()\n    }\n  }\n}\n\nexport default BubbleChartWrapper\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setSelectedRecipes } from 'actions/FourRActions'\nimport BubbleChart from './BubbleChart'\nimport FourRTable from './FourRTable'\nimport RecipeTypeSelect from './RecipeTypeSelect'\n\nclass FourRMenuRecipeByTypeCompany extends Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.initialSelectedRecipes &&\n      !_.isEqual(\n        prevProps.initialSelectedRecipes,\n        this.props.initialSelectedRecipes,\n      )\n    ) {\n      this.props.setSelectedRecipes(this.props.initialSelectedRecipes)\n    }\n  }\n\n  componentDidMount() {\n    this.props.setSelectedRecipes(this.props.initialSelectedRecipes)\n  }\n\n  render() {\n    const {\n      id,\n      reports,\n      widget,\n      handleRecipeTypeSelect,\n      selectedRecipes,\n      container,\n      chartType,\n      byCompanyClick,\n      onRecipeSelectAll,\n    } = this.props\n\n    return (\n      <div className=\"four-r\">\n        <RecipeTypeSelect\n          recipeTypes={reports[id].menu_recipe_types || []}\n          handleSelect={handleRecipeTypeSelect}\n          selectedTypeId={widget.selectedTypeId}\n          visible={!_.isEmpty(reports[id]['4r_menu_recipe_by_type_company'])}\n        />\n        <BubbleChart\n          data={selectedRecipes}\n          container={container}\n          type={chartType}\n          onDataClick={(event) =>\n            byCompanyClick(event.point.recipeId, event.point.name)\n          }\n          widthRatio={0.85}\n          heightRatio={0.4}\n          {...this.props}\n        />\n        <FourRTable\n          widget_id={widget.id}\n          data={selectedRecipes}\n          emptyDataMessage=\"\"\n          container={container}\n          onRecipeSelectAll={onRecipeSelectAll}\n          selectAllChecked={widget.fourRTableSelectAllChecked}\n          type={chartType}\n          widthRatio={0.85}\n          heightRatio={0.3}\n          onCellClick={(row) =>\n            byCompanyClick(row.original.CorporateRecipeId, row.original.Name)\n          }\n          {...this.props}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { four_r } = state\n  return {\n    selectedRecipes: four_r.selectedRecipes,\n  }\n}\n\nexport default connect(mapStateToProps, { setSelectedRecipes })(\n  FourRMenuRecipeByTypeCompany,\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  setSelectedRecipes,\n  updatedSelectedRecipes,\n} from 'actions/FourRActions'\nimport 'styles/FourRTable.css'\nimport { formatIntoDollars } from 'utils'\nimport Table from '../Table'\n\nclass FourRTable extends Component {\n  constructor(props) {\n    super(props)\n    this.handleRecipeChange = this.handleRecipeChange.bind(this)\n  }\n\n  handleRecipeChange(row, e) {\n    const { checked } = e.currentTarget\n    const { CorporateRecipeId } = row\n    this.props.updatedSelectedRecipes(CorporateRecipeId, checked)\n  }\n\n  render() {\n    const { onCellClick, data } = this.props\n    const canSelectAllBeChecked = data.every((d) => d.checked)\n\n    const columns = [\n      {\n        Header: (\n          <input\n            type=\"checkbox\"\n            id=\"scales\"\n            name=\"scales\"\n            checked={this.props.selectAllChecked && canSelectAllBeChecked}\n            onChange={(event) => this.props.onRecipeSelectAll(event)}\n          />\n        ),\n        accessor: '',\n        maxWidth: 50,\n        minWidth: 50,\n        sortable: false,\n        Cell: (data) => (\n          <div style={{ textAlign: 'center', zIndex: 1000 }}>\n            <input\n              type=\"checkbox\"\n              id=\"scales\"\n              name=\"scales\"\n              checked={data.original.checked}\n              onChange={this.handleRecipeChange.bind(null, data.original)}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: 'Recipe Name',\n        accessor: 'Name',\n        minWidth: 150,\n        Cell: (row) => <div onClick={() => onCellClick(row)}>{row.value}</div>,\n      },\n      {\n        Header: 'Quantity Sold',\n        accessor: 'QuantitySold',\n        maxWidth: 150,\n        Cell: (row) => (\n          <div onClick={() => onCellClick(row)} style={{ textAlign: 'right' }}>\n            {row.value}\n          </div>\n        ),\n      },\n      {\n        Header: 'Margin',\n        id: 'margin',\n        accessor: (d) => (d.MarginPercent ? d.MarginPercent.Value : 0),\n        Cell: (row) => (\n          <div onClick={() => onCellClick(row)} style={{ textAlign: 'right' }}>\n            {row.original.MarginPercent\n              ? row.original.MarginPercent.FormattedValue\n              : 0}\n          </div>\n        ),\n        maxWidth: 150,\n      },\n      {\n        Header: 'Sale Price',\n        id: 'salePrice',\n        accessor: (recipe) =>\n          Number((recipe.GrossPrice.Value / recipe.QuantitySold).toFixed(2)) ||\n          0,\n        Cell: (row) => (\n          <div onClick={() => onCellClick(row)} style={{ textAlign: 'right' }}>\n            {formatIntoDollars(\n              Number(\n                (\n                  row.original.GrossPrice.Value / row.original.QuantitySold\n                ).toFixed(2),\n              ) || 0,\n            )}\n          </div>\n        ),\n        maxWidth: 150,\n      },\n    ]\n\n    return <Table columns={columns} data={this.props.data} {...this.props} />\n  }\n}\n\nFourRTable.defaultProps = {}\n\nFourRTable.propTypes = {}\n\nconst mapStateToProps = (state) => {\n  const { reports, four_r } = state\n  return {\n    reports,\n    selectedRecipes: four_r.selectedRecipes,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  setSelectedRecipes,\n  updatedSelectedRecipes,\n})(FourRTable)\n","import _ from 'lodash'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  fetchReport,\r\n  pushHistory,\r\n  setChartType,\r\n  setCompanyData,\r\n  setDrilldownIndex,\r\n  setReportAttribute,\r\n  setWidgetState,\r\n  sliceHistory,\r\n} from 'actions'\r\nimport 'styles/FruitConsumptionWidget.css'\r\nimport { selectedDivisions, selectedUnits } from 'utils'\r\nimport moment from 'moment'\r\nimport Widget from '../Widget'\r\nimport BarChart from './BarChart'\r\nimport FourRMenuRecipeByTypeCompany from './FourRMenuRecipeByTypeCompany'\r\nimport TrendChart from './TrendChart'\r\nimport UnitsBarChart from './UnitsBarChart'\r\nimport UnitTrendTable from './UnitTrendTable'\r\n\r\nclass FourRWidget extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.renderChart = this.renderChart.bind(this)\r\n    this.wrapChart = this.wrapChart.bind(this)\r\n    this.getChart = this.getChart.bind(this)\r\n    this.drilldown = this.drilldown.bind(this)\r\n    this.fetchChartData = this.fetchChartData.bind(this)\r\n    this.params = this.params.bind(this)\r\n    this.unit_ids = this.unit_ids.bind(this)\r\n    this.byCompanyClick = this.byCompanyClick.bind(this)\r\n    this.byCompanyParams = this.byCompanyParams.bind(this)\r\n    this.byDivisionParams = this.byDivisionParams.bind(this)\r\n    this.companyReportSuccess = this.companyReportSuccess.bind(this)\r\n    this.handleRecipeTypeSelect = this.handleRecipeTypeSelect.bind(this)\r\n    this.byDivisionsClick = this.byDivisionsClick.bind(this)\r\n    this.byUnitsClick = this.byUnitsClick.bind(this)\r\n    this.trendParams = this.trendParams.bind(this)\r\n    this.onRecipeSelectAll = this.onRecipeSelectAll.bind(this)\r\n    this.showCompanyTrendClick = this.showCompanyTrendClick.bind(this)\r\n    this.showDivisionTrendClick = this.showDivisionTrendClick.bind(this)\r\n    this.onCompressClick = this.onCompressClick.bind(this)\r\n    this.goToInitialChart = this.goToInitialChart.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id, company, fullscreen } = this.props\r\n    const { group_id } = company\r\n\r\n    if (!fullscreen) {\r\n      // set breadcrumb in redux state\r\n      this.props.pushHistory(id, '4r_menu_recipe_by_type_company', `4r Chart`)\r\n      // set which chart is shown in redux state\r\n      this.props.setChartType(id, '4r_menu_recipe_by_type_company')\r\n      // call the api for the first chart\r\n      if (!_.isEmpty(company.locations)) {\r\n        this.props.fetchReport(\r\n          this.props.id,\r\n          '4r_menu_recipe_by_type_company',\r\n          this.byCompanyParams(),\r\n        )\r\n      } else {\r\n        this.props.setReportAttribute(id, { fetchingData: true })\r\n      }\r\n      this.props.fetchReport(\r\n        this.props.id,\r\n        'menu_recipe_types',\r\n        `?unitId=${group_id}`,\r\n        false,\r\n      )\r\n      this.props.setWidgetState(id, {\r\n        companyRecipeIndex: 0,\r\n        selectedRecipes: [],\r\n        fourRTableSelectAllChecked: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillUpdate(nextProps) {\r\n    const { id } = this.props\r\n    const {\r\n      dashboard: { fullscreenOpen },\r\n      byInvoiceDate,\r\n    } = nextProps\r\n    const byInvoiceDateChanged = this.props.byInvoiceDate !== byInvoiceDate\r\n    const { drillUp } = this.widget(nextProps)\r\n    const lastActiveWidgetId = this.props.dashboard.activeWidget\r\n      ? this.props.dashboard.activeWidget.id\r\n      : null\r\n    const fullscreenDidClose =\r\n      !fullscreenOpen &&\r\n      this.props.dashboard.fullscreenOpen &&\r\n      this.props.dashboard.updatedInFullscreen &&\r\n      this.props.id !== lastActiveWidgetId\r\n    const dateChanged =\r\n      this.props.startDate !== nextProps.startDate ||\r\n      this.props.endDate !== nextProps.endDate\r\n    const locationsChanged = !_.isEqual(\r\n      this.props.company.locations,\r\n      nextProps.company.locations,\r\n    )\r\n    const chartTypeChanged =\r\n      !_.isEqual(\r\n        this.widget(this.props).chartType,\r\n        this.widget(nextProps).chartType,\r\n      ) && drillUp\r\n    if (nextProps.fullscreen) return\r\n    // call the api with new dates or locations if changed\r\n    if (locationsChanged) {\r\n      this.goToInitialChart(nextProps)\r\n      this.props.fetchReport(\r\n        this.props.id,\r\n        '4r_menu_recipe_by_type_company',\r\n        this.byCompanyParams(nextProps),\r\n      )\r\n    }\r\n\r\n    if (\r\n      dateChanged ||\r\n      chartTypeChanged ||\r\n      fullscreenDidClose ||\r\n      byInvoiceDateChanged\r\n    ) {\r\n      this.props.fetchReport(\r\n        this.props.id,\r\n        this.widget(nextProps).chartType,\r\n        this.params(nextProps),\r\n      )\r\n      this.props.setWidgetState(id, { drillUp: false })\r\n    }\r\n    // debugger\r\n    if (this.companyReportSuccess(nextProps)) {\r\n      const { RecipeTypes = {} } =\r\n        nextProps?.reports[id]?.['4r_menu_recipe_by_type_company'] ?? {}\r\n      const recipeType = _.isEmpty(RecipeTypes) ? {} : RecipeTypes[0]\r\n      this.props.setWidgetState(id, {\r\n        recipeType,\r\n        selectedTypeId: recipeType.RecipeTypeId,\r\n      })\r\n    }\r\n\r\n    if (\r\n      !_.isEqual(this.widget().recipeType, this.widget(nextProps).recipeType)\r\n    ) {\r\n      const selectedRecipes = _.isEmpty(this.widget(nextProps).recipeType)\r\n        ? []\r\n        : this.mapSelectedRecipes(\r\n            this.widget(nextProps).recipeType.Recipes || [],\r\n          )\r\n      this.props.setWidgetState(id, {\r\n        selectedRecipes,\r\n      })\r\n    }\r\n  }\r\n\r\n  mapSelectedRecipes(recipes) {\r\n    return recipes.map((r) => ({ ...r, checked: true }))\r\n  }\r\n\r\n  companyReportSuccess(nextProps) {\r\n    const { id, reports } = this.props\r\n    if (!reports[id]) return false\r\n\r\n    const thisCompanyReport =\r\n      this.props.reports[id]?.['4r_menu_recipe_by_type_company']\r\n    const nextCompanyReport =\r\n      nextProps.reports[id]?.['4r_menu_recipe_by_type_company']\r\n\r\n    return !_.isEqual(thisCompanyReport, nextCompanyReport)\r\n  }\r\n\r\n  handleRecipeTypeSelect(event) {\r\n    const { reports, id } = this.props\r\n    const selectedTypeId = event.target.value\r\n    const recipeType = reports[id][\r\n      '4r_menu_recipe_by_type_company'\r\n    ]?.RecipeTypes.find((type) => type.RecipeTypeId === selectedTypeId)\r\n    const payload = { selectedTypeId, recipeType }\r\n    this.props.setWidgetState(id, payload)\r\n  }\r\n\r\n  params(props = this.props) {\r\n    switch (this.widget(props).chartType) {\r\n      case '4r_menu_recipe_by_type_company': {\r\n        return this.byCompanyParams(props)\r\n      }\r\n      case '4r_menu_recipe_by_divisions': {\r\n        return this.byDivisionParams(props)\r\n      }\r\n      case '4r_menu_recipe_by_units': {\r\n        return this.byUnitsParams(props)\r\n      }\r\n      case '4r_menu_recipe_trend_by_unit': {\r\n        return this.trendParams(props)\r\n      }\r\n      case '4r_menu_recipe_trend_by_company': {\r\n        return this.byDivisionParams(props)\r\n      }\r\n      case '4r_menu_recipe_trend_by_division': {\r\n        return this.byUnitsParams(props)\r\n      }\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  unit_ids(props = this.props) {\r\n    // return array of relevant selected user ids\r\n    const { division } = this.widget()\r\n    if (_.isEmpty(division)) {\r\n      return props.company.locations\r\n        .filter((l) => l.type === 'location' && l.checked)\r\n        .map((l) => l.unit_id)\r\n    }\r\n    return props.company.locations\r\n      .filter(\r\n        (l) => l.type === 'location' && l.checked && l.region === division,\r\n      )\r\n      .map((l) => l.unit_id)\r\n  }\r\n\r\n  fetchChartData(type, params = '') {\r\n    const formattedCategory = encodeURIComponent(this.widget().category)\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      type,\r\n      `?category=${formattedCategory}${this.getDateParams()}${params}`,\r\n    )\r\n  }\r\n\r\n  widget(props = this.props) {\r\n    const { id, widgets } = props\r\n    return widgets.find((w) => w.id === id)\r\n  }\r\n\r\n  getDateParams(props = this.props) {\r\n    // format date parameters from redux state\r\n    const { startDate, endDate } = props.reports\r\n    return `&startDate=${moment(startDate).format(\r\n      'MM/DD/YYYY',\r\n    )}&endDate=${moment(endDate).format('MM/DD/YYYY')}`\r\n  }\r\n\r\n  wrapChart(chart) {\r\n    // wrap chart in container for high charts functionality and styling\r\n    return <div className=\"fruit-main-chart\">{chart}</div>\r\n  }\r\n\r\n  renderChart() {\r\n    // put chart in container if its not a table\r\n    const { chartType } = this.widget()\r\n    const chartTypeSplit = chartType.split('_')\r\n    const isTable = chartTypeSplit[chartTypeSplit.length - 1] === 'table'\r\n    const chart = this.getChart(chartType)\r\n    if (isTable) return chart\r\n    return this.wrapChart(chart)\r\n  }\r\n\r\n  getChart(chartType) {\r\n    // return chart based on chart type in redux state\r\n    const { reports, id } = this.props\r\n    const container = `chart-${id}`\r\n    switch (chartType) {\r\n      case '4r_menu_recipe_by_type_company': {\r\n        const widget = this.widget()\r\n        const { selectedRecipes } = widget\r\n\r\n        return (\r\n          <FourRMenuRecipeByTypeCompany\r\n            id={id}\r\n            reports={reports}\r\n            widget={widget}\r\n            initialSelectedRecipes={selectedRecipes}\r\n            handleRecipeTypeSelect={this.handleRecipeTypeSelect}\r\n            byCompanyClick={this.byCompanyClick}\r\n            container={container}\r\n            chartType={chartType}\r\n            onRecipeSelectAll={this.onRecipeSelectAll}\r\n            {...this.props}\r\n          />\r\n        )\r\n      }\r\n      case '4r_menu_recipe_by_divisions': {\r\n        return (\r\n          <div>\r\n            <button\r\n              className=\"btn btn-small btn-primary btn-toggle\"\r\n              onClick={this.showCompanyTrendClick}\r\n            >\r\n              Show Company Trend\r\n            </button>\r\n            <BarChart\r\n              container={container}\r\n              type={chartType}\r\n              onDataClick={(event) => this.byDivisionsClick(event.point.name)}\r\n              widthRatio={0.85}\r\n              heightRatio={0.55}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n      case '4r_menu_recipe_by_units': {\r\n        return (\r\n          <div>\r\n            <button\r\n              className=\"btn btn-small btn-primary btn-toggle\"\r\n              onClick={this.showDivisionTrendClick}\r\n            >\r\n              Show Division Trend\r\n            </button>\r\n            <UnitsBarChart\r\n              container={container}\r\n              type={chartType}\r\n              onDataClick={this.byUnitsClick}\r\n              widthRatio={0.85}\r\n              heightRatio={0.55}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n      case '4r_menu_recipe_trend_by_unit': {\r\n        return (\r\n          <div>\r\n            <TrendChart\r\n              title={this.widget().recipeName}\r\n              container={container}\r\n              type={chartType}\r\n              widthRatio={0.85}\r\n              heightRatio={0.5}\r\n              {...this.props}\r\n            />\r\n            <UnitTrendTable\r\n              data={reports[id]['4r_menu_recipe_trend_by_unit']}\r\n              container={container}\r\n              type={chartType}\r\n              widthRatio={0.85}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n      case '4r_menu_recipe_trend_by_company': {\r\n        return (\r\n          <div>\r\n            <button\r\n              className=\"btn btn-small btn-primary btn-toggle\"\r\n              onClick={() =>\r\n                this.props.setChartType(\r\n                  this.props.id,\r\n                  '4r_menu_recipe_by_divisions',\r\n                )\r\n              }\r\n            >\r\n              Show Division Bar Chart\r\n            </button>\r\n            <TrendChart\r\n              title={this.widget().recipeName}\r\n              container={container}\r\n              type={chartType}\r\n              widthRatio={0.85}\r\n              heightRatio={0.5}\r\n              data={reports[id]['4r_menu_recipe_trend_by_company']}\r\n              {...this.props}\r\n            />\r\n            <UnitTrendTable\r\n              data={reports[id]['4r_menu_recipe_trend_by_company']}\r\n              container={container}\r\n              type={chartType}\r\n              widthRatio={0.85}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n      case '4r_menu_recipe_trend_by_division': {\r\n        return (\r\n          <div>\r\n            <button\r\n              className=\"btn btn-small btn-primary btn-toggle\"\r\n              onClick={() =>\r\n                this.props.setChartType(\r\n                  this.props.id,\r\n                  '4r_menu_recipe_by_units',\r\n                )\r\n              }\r\n            >\r\n              Show Division Bar Chart\r\n            </button>\r\n            <TrendChart\r\n              title={this.widget().recipeName}\r\n              container={container}\r\n              type={chartType}\r\n              widthRatio={0.85}\r\n              heightRatio={0.5}\r\n              data={reports[id]['4r_menu_recipe_trend_by_division']}\r\n              {...this.props}\r\n            />\r\n            <UnitTrendTable\r\n              data={reports[id]['4r_menu_recipe_trend_by_division']}\r\n              container={container}\r\n              type={chartType}\r\n              widthRatio={0.85}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n      default:\r\n        return <div>Whoops!</div>\r\n    }\r\n  }\r\n\r\n  drilldown(chartType, breadcrumb) {\r\n    // set chart type and breadcrumbs in redux\r\n    // called in every chart click with drilldown functionality\r\n    const { id } = this.props\r\n    this.props.onExpandClick(id)\r\n    this.props.setChartType(id, chartType)\r\n    this.props.pushHistory(id, chartType, breadcrumb)\r\n  }\r\n\r\n  // below are functions for handling drilldown events and\r\n  // defining parameters to be sent in api calls\r\n  byCompanyParams(props = this.props) {\r\n    return `?units=${this.unit_ids(props)}${this.getDateParams(props)}`\r\n  }\r\n\r\n  byCompanyClick(recipeId, name) {\r\n    // const { recipeId, name } = event.point\r\n\r\n    const { id, company } = this.props\r\n    this.props.setWidgetState(id, { recipeId, recipeName: name })\r\n    if (selectedUnits(company.locations).length === 1) {\r\n      this.recipeId = recipeId\r\n      this.handleOneUnitSelected()\r\n      return\r\n    }\r\n\r\n    if (selectedDivisions(company.locations).length === 1) {\r\n      this.handleOneDivisionSelected()\r\n      return\r\n    }\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      '4r_menu_recipe_by_divisions',\r\n      this.byDivisionParams(this.props, recipeId),\r\n    )\r\n    setTimeout(() => {\r\n      this.drilldown('4r_menu_recipe_by_divisions', name)\r\n    }, 100)\r\n  }\r\n\r\n  handleOneDivisionSelected() {\r\n    const division = selectedDivisions(this.props.company.locations)[0]\r\n    this.byDivisionsClick(division.name)\r\n  }\r\n\r\n  handleOneUnitSelected(locations = this.props.company.locations) {\r\n    const unit = selectedUnits(locations)[0]\r\n    const { name } = unit\r\n    const { id } = this.props\r\n\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      '4r_menu_recipe_trend_by_unit',\r\n      this.trendParams(this.props, unit.unit_id),\r\n    )\r\n    setTimeout(() => {\r\n      this.props.setWidgetState(id, { unitId: unit.unit_id })\r\n      this.drilldown('4r_menu_recipe_trend_by_unit', name)\r\n    }, 100)\r\n  }\r\n\r\n  byDivisionParams(props = this.props, recipeIdParam = null) {\r\n    const recipeId = recipeIdParam || this.widget().recipeId\r\n    return `?GroupRecipeId=${recipeId}${this.getDateParams(\r\n      props,\r\n    )}&units=${this.unit_ids(props)}`\r\n  }\r\n\r\n  byDivisionsClick(name) {\r\n    const { id, company } = this.props\r\n    const locations = company.locations.filter((loc) => loc.region === name)\r\n    this.props.setWidgetState(id, { divisionName: name })\r\n    if (selectedUnits(locations).length === 1) {\r\n      this.handleOneUnitSelected(locations)\r\n      return\r\n    }\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      '4r_menu_recipe_by_units',\r\n      this.byUnitsParams(this.props, name),\r\n    )\r\n    setTimeout(() => {\r\n      this.drilldown('4r_menu_recipe_by_units', name)\r\n    }, 100)\r\n  }\r\n\r\n  byUnitsParams(props = this.props, divisionName = this.widget().divisionName) {\r\n    const { recipeId } = this.widget()\r\n    const { locations } = props.company\r\n    const unitIds = locations\r\n      .filter((loc) => loc.checked && loc.region === divisionName)\r\n      .map((unit) => unit.unit_id)\r\n    console.log(recipeId)\r\n    return `?GroupRecipeId=${recipeId}${this.getDateParams(\r\n      props,\r\n    )}&units=${unitIds}`\r\n  }\r\n\r\n  byUnitsClick(event) {\r\n    const { name } = event.point\r\n    const { id } = this.props\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      '4r_menu_recipe_trend_by_unit',\r\n      this.trendParams(this.props, event.point.id),\r\n    )\r\n    setTimeout(() => {\r\n      this.props.setWidgetState(id, { unitId: event.point.id })\r\n      this.drilldown('4r_menu_recipe_trend_by_unit', name)\r\n    }, 100)\r\n  }\r\n\r\n  trendParams(props = this.props, unitId = this.widget().unitId) {\r\n    let { recipeId } = this.widget()\r\n    if (_.isEmpty(recipeId) && this.recipeId) {\r\n      recipeId = this.recipeId\r\n    }\r\n    return `?GroupRecipeId=${recipeId}${this.getDateParams(\r\n      props,\r\n    )}&units=${unitId}`\r\n  }\r\n\r\n  onRecipeSelectAll(event) {\r\n    const { checked } = event.target\r\n    const selectedRecipes = this.widget().selectedRecipes.map((recipe) => ({\r\n      ...recipe,\r\n      checked,\r\n    }))\r\n    this.props.setWidgetState(this.props.id, {\r\n      fourRTableSelectAllChecked: checked,\r\n      selectedRecipes,\r\n    })\r\n  }\r\n\r\n  showCompanyTrendClick() {\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      '4r_menu_recipe_trend_by_company',\r\n      this.byDivisionParams(),\r\n    )\r\n    setTimeout(() => {\r\n      this.props.setChartType(this.props.id, '4r_menu_recipe_trend_by_company')\r\n    }, 100)\r\n  }\r\n\r\n  showDivisionTrendClick() {\r\n    this.props.fetchReport(\r\n      this.props.id,\r\n      '4r_menu_recipe_trend_by_division',\r\n      this.byDivisionParams(),\r\n    )\r\n    setTimeout(() => {\r\n      this.props.setChartType(this.props.id, '4r_menu_recipe_trend_by_division')\r\n    }, 100)\r\n  }\r\n\r\n  onCompressClick() {\r\n    this.goToInitialChart()\r\n    this.props.onCompressClick()\r\n  }\r\n\r\n  goToInitialChart() {\r\n    const { id } = this.props\r\n    this.props.setChartType(id, '4r_menu_recipe_by_type_company')\r\n    this.props.sliceHistory(id, -1)\r\n    this.props.pushHistory(id, '4r_menu_recipe_by_type_company', `4r Chart`)\r\n  }\r\n\r\n  render() {\r\n    // const urlParams = `?unit_id=${userId}&group_id=stellands`\r\n    const { chartType } = this.widget()\r\n\r\n    if (!chartType) return <div></div>\r\n    return (\r\n      <Widget\r\n        title=\"4R Widget\"\r\n        type={chartType}\r\n        shouldFetch={false}\r\n        history={this.props.history}\r\n        {...this.props}\r\n        onCompressClick={this.onCompressClick}\r\n      >\r\n        {this.renderChart()}\r\n      </Widget>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  widgets: state.widgets.widgets,\r\n  reports: state.reports,\r\n  startDate: state.reports.startDate,\r\n  endDate: state.reports.endDate,\r\n  company: state.company,\r\n  dashboard: state.dashboard,\r\n  byInvoiceDate: state.widget_settings.four_r.byInvoiceDate,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  setDrilldownIndex,\r\n  setReportAttribute,\r\n  fetchReport,\r\n  pushHistory,\r\n  sliceHistory,\r\n  setChartType,\r\n  setCompanyData,\r\n  setWidgetState,\r\n})(FourRWidget)\r\n","import React from 'react'\nimport 'styles/GlSelector.css'\n\nconst RecipeTypeSelect = ({\n  recipeTypes,\n  handleSelect,\n  selectedTypeId,\n  visible,\n}) => {\n  if (!visible) return <div />\n  return (\n    <div className=\"gl-container\">\n      <label htmlFor=\"gl-selector\">Recipe Type</label>\n      <select id=\"gl-selector\" onChange={handleSelect} value={selectedTypeId}>\n        {recipeTypes.map((recipeType) => (\n          <option\n            value={recipeType.CorporateRecipeUsageTypeID}\n            key={recipeType.CorporateRecipeUsageTypeID}\n          >\n            {recipeType.Name}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\nexport default RecipeTypeSelect\n","import React from 'react'\nimport 'styles/GlSelector.css'\n\nconst RecipeTypeSelect = ({ options, handleSelect, selected, title }) => (\n  <div\n    className=\"gl-container\"\n    style={{ alignSelf: 'flex-end', marginTop: '-2em' }}\n  >\n    <label htmlFor=\"gl-selector\">{title}</label>\n    <select id=\"gl-selector\" onChange={handleSelect} value={selected}>\n      {options.map((option) => (\n        <option value={option} key={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  </div>\n)\n\nexport default RecipeTypeSelect\n","import _ from 'lodash'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(data, title, unit) {\n  if (_.isEmpty(data)) return {}\n  const chartConfig = {\n    chart: {\n      zoomType: 'xy',\n    },\n    title: {\n      text: `${title || ''} Trend`,\n    },\n    xAxis: [\n      {\n        categories: data.map((d) =>\n          moment(Date.parse(d.EndDate)).format('MM/DD/YYYY'),\n        ),\n        crosshair: true,\n      },\n    ],\n    yAxis: [\n      {\n        // Primary yAxis\n        labels: {\n          // format: '{value}°C',\n        },\n        title: {\n          text: 'Quantity Sold',\n        },\n      },\n      {\n        // Secondary yAxis\n        title: {\n          text: 'Cost Per Plate',\n        },\n        labels: {\n          // format: '{value} mm'\n        },\n        opposite: true,\n      },\n    ],\n    tooltip: {\n      shared: true,\n      formatter() {\n        return (\n          `<b>Date:<b><br>${this.x}<br>` +\n          `<b>Cost Per Plate:<b>` +\n          `<br>${formatIntoDollars(this.points[0].y)}<br>` +\n          `<br>` +\n          `<b>Quantity Sold:<b>` +\n          `<br>${this.points[1].y}`\n        )\n      },\n    },\n    series: [\n      {\n        name: 'Cost Per Plate',\n        type: 'spline',\n        yAxis: 1,\n        data: data.map((d) => ({\n          y: d.NetCost.Value / d.QuantitySold || 0,\n          className: 'no-pointer',\n        })),\n      },\n      {\n        name: 'Quantity Sold',\n        type: 'column',\n        data: data.map((d) => ({\n          y: d.QuantitySold,\n          className: 'no-pointer',\n        })),\n      },\n    ],\n  }\n  return chartConfig\n}\nclass TrendChart extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#33A8FF', '#64E572', '#6AF9C4']\n    const { reports, id, type, title } = this.props\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(reports[id][type])}\n        config={buildConfig(reports[id][type], title)}\n        modules={[]}\n        theme={theme}\n        fullscreenHeightRatio={0.7}\n        {...this.props}\n      />\n    )\n  }\n}\n\nTrendChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nTrendChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(TrendChart)\n","import moment from 'moment'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport Table from '../Table'\n\nclass UnitTrendTable extends Component {\n  render() {\n    const columns = [\n      {\n        Header: 'Week Ending',\n        accessor: 'EndDate',\n        Cell: (d) =>\n          moment(Date.parse(d.original.EndDate)).format('MM/DD/YYYY'),\n      },\n      {\n        Header: 'Quantity Sold',\n        accessor: 'QuantitySold',\n        Cell: (row) => (\n          <div style={{ textAlign: 'right' }}>\n            {row.original.QuantitySold || 0}\n          </div>\n        ),\n      },\n      {\n        Header: 'Sale Price',\n        id: 'salePrice',\n        accessor: (d) => (d.PurchasePrice ? d.PurchasePrice.Value : 0),\n        Cell: (row) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatIntoDollars(\n              row.original.PurchasePrice ? row.original.PurchasePrice.Value : 0,\n            )}\n          </div>\n        ),\n      },\n      {\n        Header: 'Net Sales',\n        id: 'netSales',\n        accessor: (d) => (d.GrossPrice ? d.GrossPrice.Value : 0),\n        Cell: (row) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatIntoDollars(\n              row.original.GrossPrice ? row.original.GrossPrice.Value : 0,\n            )}\n          </div>\n        ),\n      },\n      {\n        Header: 'Margin $/Item',\n        id: 'marginDollar',\n        accessor: (d) => (d.MarginDollars ? d.MarginDollars.Value : 0),\n        Cell: (row) => (\n          <div style={{ textAlign: 'right' }}>\n            {row.original.MarginDollars\n              ? row.original.MarginDollars.FormattedValue\n              : 0}\n          </div>\n        ),\n      },\n      {\n        Header: 'Margin %/Item',\n        id: 'marginPercent',\n        accessor: (d) => (d.MarginPercent ? d.MarginPercent.Value : 0),\n        Cell: (row) => (\n          <div style={{ textAlign: 'right' }}>\n            {row.original.MarginPercent\n              ? row.original.MarginPercent.FormattedValue\n              : 0}\n          </div>\n        ),\n      },\n    ]\n\n    return (\n      <Table\n        columns={columns}\n        data={this.props.data}\n        defaultPageSize={13}\n        showPagination={false}\n        {...this.props}\n      />\n    )\n  }\n}\n\nUnitTrendTable.defaultProps = {}\n\nUnitTrendTable.propTypes = {}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(UnitTrendTable)\n","import annotations from 'highcharts/modules/annotations'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/SpendByWeek.css'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\nimport Select from './Select'\n\nclass FourRBarChart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { selected: 'Margin' }\n    this.buildConfig = this.buildConfig.bind(this)\n    this.handleSelect = this.handleSelect.bind(this)\n  }\n\n  handleSelect(event) {\n    this.setState({ selected: event.target.value })\n  }\n\n  buildConfig(data) {\n    if (_.isEmpty(data)) return {}\n    const divisions = data.map((d) => {\n      const { UnitName, UnitId } = d\n      const re = new RegExp(UnitId, 'g')\n      const name = UnitName.replace(re, '')\n      return `${UnitId}<br/>${name}`\n    })\n    const { selected } = this.state\n\n    const sales = data.map((d) => {\n      if (d.Recipe) {\n        return {\n          y: d.Recipe.GrossPrice.Value,\n          name: d.UnitName,\n          id: d.UnitId,\n          marginPercent: d.Recipe.MarginPercent\n            ? d.Recipe.MarginPercent.FormattedValue\n            : '0%',\n          costPercent: d.Recipe.FoodCostPercent\n            ? d.Recipe.FoodCostPercent.FormattedValue\n            : '0%',\n          percentType: selected,\n        }\n      }\n      return { y: 0, name: d.UnitName, id: d.UnitId, marginPercent: '0%' }\n    })\n\n    const series2 = data.map((d) => {\n      if (d.Recipe) {\n        let y = 0\n        if (this.state.selected === 'Margin') {\n          y = d.Recipe.Impact.Value\n        } else {\n          y = d.Recipe.NetCost.Value\n        }\n        return {\n          y,\n          name: d.UnitName,\n          id: d.UnitId,\n          marginPercent: d.Recipe.MarginPercent\n            ? d.Recipe.MarginPercent.FormattedValue\n            : '0%',\n          costPercent: d.Recipe.FoodCostPercent\n            ? d.Recipe.FoodCostPercent.FormattedValue\n            : '0%',\n          percentType: selected,\n        }\n      }\n      return { y: 0, name: d.UnitName, id: d.UnitId, marginPercent: '0%' }\n    })\n\n    const chartConfig = {\n      force: true,\n      chart: {\n        type: 'column',\n      },\n      title: {\n        text: '',\n      },\n      xAxis: {\n        categories: divisions,\n        labels: {\n          style: {},\n        },\n        title: {\n          text: null,\n        },\n      },\n      yAxis: {\n        labels: {\n          overflow: 'justify',\n        },\n        title: {\n          text: 'Amount ($)',\n        },\n      },\n      tooltip: {\n        enabled: true,\n        formatter() {\n          const { marginPercent, costPercent, percentType } = this.point\n          const percent = percentType === 'Margin' ? marginPercent : costPercent\n          return (\n            `<b>${this.series.name}:<b>` +\n            `<br>${formatIntoDollars(this.y)}<br>` +\n            `<br>` +\n            `<b>${percentType} Percent:<b>` +\n            `<br>${percent}`\n          )\n        },\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true,\n          },\n        },\n      },\n      credits: {\n        enabled: false,\n      },\n      series: [\n        { data: sales, name: 'Sales' },\n        { data: series2, name: this.state.selected },\n      ],\n    }\n\n    return chartConfig\n  }\n\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { reports, id, type } = this.props\n    return (\n      <div className=\"spend-by-week\">\n        <Select\n          options={['Margin', 'Cost']}\n          handleSelect={this.handleSelect}\n          selected={this.state.selected}\n        />\n        <ChartWrapper\n          dataIsPresent={!_.isEmpty(reports[id][type])}\n          config={this.buildConfig(reports[id][type])}\n          modules={[annotations]}\n          theme={theme}\n          {...this.props}\n        />\n      </div>\n    )\n  }\n}\n\nFourRBarChart.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nFourRBarChart.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(FourRBarChart)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(report, fromByUnitChart) {\n  if (!report) return {}\n  const data = report.map((subcat) => ({\n    x: subcat.gl_name,\n    y: parseFloat(subcat.amount),\n    locations: subcat.locations,\n  }))\n  const series = [\n    {\n      name: 'GL Spend',\n      colorByPoint: true,\n      data: data.sort((a, b) => a.y - b.y),\n    },\n  ]\n\n  const chartConfig = {\n    chart: {\n      type: 'pie',\n    },\n    title: {\n      text: '',\n    },\n    subtitle: {\n      text: '',\n    },\n    plotOptions: {\n      pie: {\n        dataLabels: {\n          enabled: true,\n          formatter() {\n            return `${this.point.x}<br>${formatIntoDollars(this.y)}`\n          },\n        },\n      },\n    },\n\n    tooltip: {\n      formatter() {\n        if (!fromByUnitChart) {\n          return (\n            `<b>${this.point.x}</b>` +\n            `<br>${formatIntoDollars(\n              this.y,\n            )}<br><b>Units</b><br>${this.point.locations\n              .map(\n                (l) =>\n                  `<span>#${l.unit_id} ${l.name}   ${\n                    formatIntoDollars(l.amount) || ''\n                  }</span>`,\n              )\n              .join('<br>')}`\n          )\n        }\n        return `<b>${this.point.x}</b>` + `<br>${formatIntoDollars(this.y)}`\n      },\n    },\n    series,\n  }\n\n  return chartConfig\n}\nclass GlSpend extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { reports, id, type, fromByUnit } = this.props\n    const report = reports[id][type]\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(reports[id][type])}\n        config={buildConfig(report, fromByUnit)}\n        modules={[]}\n        theme={theme}\n        {...this.props}\n      />\n    )\n  }\n}\n\nGlSpend.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nGlSpend.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(GlSpend)\n","import _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport Table from '../Table'\n\nconst formatDate = (date) => {\n  if (_.isEmpty(date)) return ''\n  return moment(date).format('MM/DD/YYYY')\n}\n\nclass StatsByLocationPerItemTable extends Component {\n  constructor(props) {\n    super(props)\n    this.formatData = this.formatData.bind(this)\n  }\n\n  formatData() {\n    const { id, reports } = this.props\n    const data = reports[id].invoices_by_vendor_gl\n    if (_.isEmpty(data)) return []\n\n    return data.map((invoice) => {\n      const { amount } = invoice\n      return {\n        ...invoice,\n        amount: parseFloat(amount),\n      }\n    })\n  }\n\n  imageLink(url) {\n    if (!url) return <div />\n    return (\n      <a href={url} target=\"_blank\">\n        View Image\n      </a>\n    )\n  }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Invoice Number',\n        accessor: 'invoiceNumber',\n      },\n      {\n        Header: 'Invoice Date',\n        accessor: 'invoiceDate',\n        Cell: (data) => formatDate(data.row.invoiceDate),\n      },\n      {\n        Header: 'Submitted Date',\n        accessor: 'submittedDate',\n        Cell: (data) => formatDate(data.row.submittedDate),\n      },\n      {\n        Header: 'Check Date',\n        accessor: 'checkDate',\n        Cell: (data) => formatDate(data.row.checkDate),\n      },\n      {\n        Header: 'Check Number',\n        accessor: 'checkNumber',\n      },\n      {\n        Header: 'Terms',\n        accessor: 'terms',\n      },\n      {\n        Header: 'Amount',\n        accessor: 'amount',\n        Cell: (data) => (\n          <div style={{ textAlign: 'right' }}>\n            {formatIntoDollars(data.row.amount)}\n          </div>\n        ),\n      },\n      {\n        Header: 'Image',\n        accessor: 'imageLink',\n        Cell: (data) => this.imageLink(data.row.imageLink),\n      },\n    ]\n\n    const { id, widgets } = this.props\n    const widgetName = _.find(widgets, { id }).name\n    const { byInvoiceDate } = this.props.widget_settings[widgetName]\n    const defaultSort = byInvoiceDate ? 'invoiceDate' : 'submittedDate'\n\n    return (\n      <Table\n        columns={columns}\n        data={this.formatData()}\n        onDataClick={this.props.onDataClick}\n        defaultSorted={[{ id: defaultSort, desc: false }]}\n        defaultPageSize={\n          this.props.showPagination ? 20 : this.formatData().length\n        }\n        showPagination={this.props.showPagination}\n        printView={this.props.printView}\n      />\n    )\n  }\n}\n\nStatsByLocationPerItemTable.defaultProps = {}\n\nStatsByLocationPerItemTable.propTypes = {}\n\nconst mapStateToProps = (state) => ({\n  reports: state.reports,\n  widget_settings: state.widget_settings,\n})\n\nexport default connect(mapStateToProps)(StatsByLocationPerItemTable)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/MultiUnitVendorSpend.css'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(data) {\n  const vendors = data.map((d) => d.name)\n  const amounts = data.map((d) => d.amount)\n\n  const chartConfig = {\n    chart: {\n      type: 'bar',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      categories: vendors,\n      title: {\n        text: null,\n      },\n    },\n    yAxis: {\n      labels: {\n        overflow: 'justify',\n      },\n      title: {\n        text: 'Amount ($)',\n      },\n    },\n    tooltip: {\n      enabled: false,\n    },\n    plotOptions: {\n      bar: {\n        animation: false,\n        dataLabels: {\n          enabled: true,\n        },\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'Vendors',\n        data: amounts,\n        dataLabels: {\n          formatter() {\n            return formatIntoDollars(this.y)\n          },\n        },\n      },\n    ],\n  }\n\n  return chartConfig\n}\nclass MultiUnitVendorSpend extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { select: 10 }\n    this.handleSelectChange = this.handleSelectChange.bind(this)\n  }\n\n  handleSelectChange(event) {\n    this.setState({ select: event.target.value })\n  }\n\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { reports, id, type } = this.props\n    const { select } = this.state\n    const report = reports[id][type] || []\n    const numVendors = Math.min(report.length, select)\n    const data = report.slice(0, numVendors)\n    return (\n      <div>\n        <div className=\"num-vendors-container\">\n          <label htmlFor=\"num-vendors\">Number of Vendors</label>\n          <select\n            id=\"num-vendors\"\n            defaultValue=\"10\"\n            onChange={this.handleSelectChange}\n          >\n            <option value=\"1\">1</option>\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value={report.length}>All Vendors</option>\n          </select>\n        </div>\n        <ChartWrapper\n          dataIsPresent={!_.isEmpty(data)}\n          config={buildConfig(data)}\n          theme={theme}\n          {...this.props}\n        />\n      </div>\n    )\n  }\n}\n\nMultiUnitVendorSpend.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nMultiUnitVendorSpend.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(MultiUnitVendorSpend)\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\n\nfunction buildConfig(data) {\n  if (_.isEmpty(data)) return { }\n  const { vendor_spend } = data\n  const vendors = vendor_spend.map(d => d.name)\n  const amounts = vendor_spend.map(d => d.amount)\n\n  const chartConfig = {\n     chart: {\n         type: 'bar'\n     },\n     title: {\n         text: ''\n     },\n     xAxis: {\n         categories: vendors,\n         title: {\n             text: null\n         }\n     },\n     yAxis: {\n         labels: {\n             overflow: 'justify'\n         },\n         title: {\n             text: 'Amount ($)'\n         }\n     },\n     tooltip: {\n         enabled: false\n     },\n     plotOptions: {\n         bar: {\n             dataLabels: {\n                 enabled: true\n             }\n         }\n     },\n     credits: {\n         enabled: false\n     },\n     series: [{\n         name: 'Vendors',\n         data: amounts,\n         dataLabels: {\n             formatter: function () {\n               return formatIntoDollars(this.y)\n            }\n         }\n     }]\n };\n\n return chartConfig\n}\nclass SpendByUnit extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { select: 10 }\n    this.handleSelectChange = this.handleSelectChange.bind(this)\n  }\n\n  handleSelectChange(event) {\n    this.setState({ select: event.target.value })\n  }\n\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { reports, id } = this.props\n    const report = reports[id]['vendor_spend'] || []\n    return (\n      <ChartWrapper\n        dataIsPresent={!_.isEmpty(report)}\n        config={buildConfig(report)}\n        theme={theme}\n        {...this.props}\n      />\n    )\n  }\n}\n\nSpendByUnit.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7\n}\n\nSpendByUnit.propTypes = {\n  container: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => {\n  return { reports: state.reports }\n}\n\n\nexport default connect(mapStateToProps)(SpendByUnit)\n","import annotations from 'highcharts/modules/annotations'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport 'styles/SpendByWeek.css'\nimport { formatIntoDollars } from 'utils'\nimport ChartWrapper from '../ChartWrapper'\n\nfunction buildConfig(data) {\n  if (_.isEmpty(data)) {\n    data = []\n  }\n  const vendors = data.map((d) => moment(d.starting_week).format('MM/DD/YYYY'))\n  const amountData = data.map((d) => ({ y: d.amount, id: d.starting_week }))\n  const labels = data\n    .filter((d) => !d.complete)\n    .map((d) => ({\n      point: d.starting_week,\n      text: 'Partial Week',\n      style: { fontSize: '9px' },\n    }))\n\n  const chartConfig = {\n    chart: {\n      type: 'column',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      categories: vendors,\n      title: {\n        text: null,\n      },\n    },\n    yAxis: {\n      labels: {\n        overflow: 'justify',\n      },\n      title: {\n        text: 'Amount ($)',\n      },\n    },\n    tooltip: {\n      enabled: true,\n      formatter() {\n        return formatIntoDollars(this.y)\n      },\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          enabled: true,\n        },\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'Vendors',\n        data: amountData,\n        // dataLabels: {\n        //     enabled: true,\n        //     formatter: function () {\n        //       return formatIntoDollars(this.y)\n        //    }\n        // }\n      },\n    ],\n    annotations: [{ labels }],\n  }\n\n  return chartConfig\n}\nclass SpendByWeek extends Component {\n  render() {\n    const theme = ['#50B432', '#ED561B', '#64E572', '#FF9655', '#6AF9C4']\n    const { reports, id, type } = this.props\n    const { weeks } = reports[id][type]\n    return (\n      <div className=\"spend-by-week\">\n        <div className=\"sum\">\n          Total: {formatIntoDollars(reports[id][type].sum || 0)}\n        </div>\n        <ChartWrapper\n          dataIsPresent={\n            !_.isEmpty(reports[id][type]) && weeks && weeks.length > 0\n          }\n          config={buildConfig(weeks)}\n          modules={[annotations]}\n          theme={theme}\n          {...this.props}\n        />\n      </div>\n    )\n  }\n}\n\nSpendByWeek.defaultProps = {\n  widthRatio: 0.7,\n  heightRatio: 0.7,\n}\n\nSpendByWeek.propTypes = {\n  container: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({ reports: state.reports })\n\nexport default connect(mapStateToProps)(SpendByWeek)\n","// this widget renders a chart (or table) based on the chart type provided by the redux store\n// we set the intitial chart type in the componentWillMount react life cycle method\n// on a drilldown event (example: user clicks on data point) we call the api and\n// set the next chart type in redux\n// when the data for the next chart comes back from the api the component automatically\n// renders the next chart with the new data based on the chart type we set\n// we provide these functions to the given chart component through the onDataClick prop\n// when we change a date in the date picker or select/deselect locations\n// we call the api with the current chart type and the new locations or date\n// each chart type has its own function to handle a drilldown event (if applicable)\n// and a function to provide the parameters for the appropriate api call\n\n// charts:\n// top_vendor_spend_by_company\n// vendor_spend\n// vendor_spend_by_week\n// gl_spend\n// invoices_by_vendor_gl\n\nimport _ from 'lodash'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  fetchReport,\n  pushHistory,\n  setChartType,\n  setCompanyData,\n  setDrilldownIndex,\n  setReportAttribute,\n  setWidgetState,\n  sliceHistory,\n} from 'actions'\nimport 'styles/FruitConsumptionWidget.css'\nimport Widget from '../Widget'\nimport GlSpend from './GlSpend'\nimport InvoiceTable from './InvoiceTable'\nimport MultiUnitVendorSpend from './MultiUnitVendorSpend'\nimport SpendByUnit from './SpendByUnit'\nimport SpendByWeek from './SpendByWeek'\n\nconst contextRoutes = {\n  top_vendor_spend_by_company: 'top_vendor_spend_by_company',\n  vendor_spend: 'vendor_spend',\n  vendor_spend_by_week: 'vendor_spend_by_week',\n  gl_spend: 'gl_subcategory_spend',\n}\n\nclass VendorWidget extends Component {\n  constructor(props) {\n    super(props)\n    this.renderChart = this.renderChart.bind(this)\n    this.wrapChart = this.wrapChart.bind(this)\n    this.getChart = this.getChart.bind(this)\n    this.drilldown = this.drilldown.bind(this)\n    this.fetchChartData = this.fetchChartData.bind(this)\n    this.handleMultiUnitClick = this.handleMultiUnitClick.bind(this)\n    this.handleByUnitClick = this.handleByUnitClick.bind(this)\n    this.handleByWeekClick = this.handleByWeekClick.bind(this)\n    this.unit_ids = this.unit_ids.bind(this)\n    this.handleGlClick = this.handleGlClick.bind(this)\n    this.onCompressClick = this.onCompressClick.bind(this)\n    this.goToInitialChart = this.goToInitialChart.bind(this)\n  }\n\n  UNSAFE_componentWillMount() {\n    const { id, fullscreen } = this.props\n    // set breadcrumb in redux state\n    if (!fullscreen) {\n      this.props.pushHistory(\n        id,\n        'top_vendor_spend_by_company',\n        'top_vendor_spend_by_company',\n      )\n      // set which chart is shown in redux state\n      this.props.setChartType(id, 'top_vendor_spend_by_company')\n      // call the api for the first chart\n      this.props.fetchReport(\n        this.props.id,\n        'top_vendor_spend_by_company',\n        this.multiUnitParams(),\n      )\n    }\n  }\n\n  UNSAFE_componentWillUpdate(nextProps) {\n    const {\n      id,\n      dashboard: { fullscreenOpen },\n      byInvoiceDate,\n    } = nextProps\n    const byInvoiceDateChanged = this.props.byInvoiceDate !== byInvoiceDate\n    const lastActiveWidgetId = this.props.dashboard.activeWidget\n      ? this.props.dashboard.activeWidget.id\n      : null\n    const fullscreenDidClose =\n      !fullscreenOpen &&\n      this.props.dashboard.fullscreenOpen &&\n      this.props.dashboard.updatedInFullscreen &&\n      this.props.id !== lastActiveWidgetId\n    const { drillUp } = this.widget(nextProps)\n    const dateChanged =\n      this.props.startDate !== nextProps.startDate ||\n      this.props.endDate !== nextProps.endDate\n    const locationsChanged = !_.isEqual(\n      this.props.company.locations,\n      nextProps.company.locations,\n    )\n    const chartTypeChanged =\n      !_.isEqual(\n        this.widget(this.props).chartType,\n        this.widget(nextProps).chartType,\n      ) && drillUp\n    // call the api with new dates or locations if changed\n    if (nextProps.fullscreen) return\n    if (locationsChanged) {\n      this.goToInitialChart(nextProps)\n      if (this.widget(nextProps).chartType === 'top_vendor_spend_by_company') {\n        this.props.fetchReport(\n          this.props.id,\n          'top_vendor_spend_by_company',\n          this.multiUnitParams(nextProps),\n        )\n      }\n    }\n    if (\n      dateChanged ||\n      chartTypeChanged ||\n      fullscreenDidClose ||\n      byInvoiceDateChanged\n    ) {\n      this.props.fetchReport(\n        this.props.id,\n        this.widget(nextProps).chartType,\n        this.params(nextProps),\n      )\n      this.props.setWidgetState(id, { drillUp: false })\n    }\n  }\n\n  params(props = this.props) {\n    switch (this.widget(props).chartType) {\n      case 'top_vendor_spend_by_company':\n        return this.multiUnitParams(props)\n      case 'vendor_spend':\n        return this.byUnitParams(props)\n      case 'vendor_spend_by_week':\n        return this.byWeekParams(props)\n      case 'gl_spend':\n        return this.glParams(props)\n      case 'invoices_by_vendor_gl':\n        return this.invoicesParams(props)\n      default:\n        return ''\n    }\n  }\n\n  unit_ids(props = this.props) {\n    // return array of relevant selected user ids\n    return props.company.locations\n      .filter((l) => l.type === 'location' && l.checked)\n      .map((l) => l.unit_id)\n  }\n\n  fetchChartData(type, props = this.props) {\n    const { vendor_id } = this.widget()\n    this.props.fetchReport(\n      this.props.id,\n      type,\n      `?unit_ids=${this.unit_ids()}&vendor_id=${vendor_id}${this.getDateParams()}`,\n    )\n  }\n\n  widget(props = this.props) {\n    // get data for this widget from redux state\n    const { id, widgets } = props\n    return widgets.find((w) => w.id === id)\n  }\n\n  getDateParams(props = this.props) {\n    const { startDate, endDate } = props.reports\n    return `&start_date=${moment(startDate).format(\n      'MM/DD/YYYY',\n    )}&end_date=${moment(endDate).format('MM/DD/YYYY')}`\n  }\n\n  wrapChart(chart) {\n    // wrap chart in container for high charts functionality and styling\n    if (this.widget().chartType === 'invoices_by_vendor_gl') return chart\n    return <div className=\"fruit-main-chart\">{chart}</div>\n  }\n\n  renderChart() {\n    // put chart in container if its not a table\n    const { chartType } = this.widget()\n    const chartTypeSplit = chartType.split('_')\n    const isTable = chartTypeSplit[chartTypeSplit.length - 1] === 'table'\n    const chart = this.getChart(chartType)\n    if (isTable) return chart\n    return this.wrapChart(chart)\n  }\n\n  getChart(chartType) {\n    // return chart based on chart type in redux state\n    const container = `chart-${this.props.id}`\n\n    switch (chartType) {\n      case 'top_vendor_spend_by_company':\n        return (\n          <MultiUnitVendorSpend\n            onDataClick={this.handleMultiUnitClick}\n            container={container}\n            type={chartType}\n            widthRatio={0.85}\n            heightRatio={0.5}\n            {...this.props}\n          />\n        )\n      case 'vendor_spend':\n        return (\n          <div>\n            <button\n              className=\"btn btn-small btn-primary\"\n              onClick={() => this.toggleChart('vendor_spend_by_week')}\n            >\n              Show Vendor Spend By Week\n            </button>\n            <SpendByUnit\n              onDataClick={this.handleByUnitClick}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.55}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'vendor_spend_by_week':\n        return (\n          <div>\n            <button\n              className=\"btn btn-small btn-primary\"\n              onClick={() => this.toggleChart('vendor_spend')}\n            >\n              Show Vendor Spend By Unit\n            </button>\n            <SpendByWeek\n              onDataClick={this.handleByWeekClick}\n              container={container}\n              type={chartType}\n              widthRatio={0.85}\n              heightRatio={0.6}\n              {...this.props}\n            />\n          </div>\n        )\n      case 'gl_spend':\n        return (\n          <GlSpend\n            onDataClick={this.handleGlClick}\n            container={container}\n            type={chartType}\n            widthRatio={0.85}\n            heightRatio={0.68}\n            fromByUnit={this.widget().fromByUnit}\n            {...this.props}\n          />\n        )\n      case 'invoices_by_vendor_gl':\n        return (\n          <InvoiceTable\n            container={container}\n            type={chartType}\n            widthRatio={0.85}\n            heightRatio={0.75}\n            showPagination={!!this.props.fullscreen}\n            {...this.props}\n          />\n        )\n      default:\n        return <div>Whoops!</div>\n    }\n  }\n\n  drilldown(chartType, breadcrumb) {\n    // set chart type and breadcrumbs in redux\n    // called in every chart click with drilldown functionality\n    setTimeout(() => {\n      const { id } = this.props\n      this.props.onExpandClick(id)\n      this.props.setChartType(id, chartType)\n      this.props.pushHistory(id, chartType, breadcrumb)\n    }, 100)\n  }\n\n  // below are functions for handling drilldown events and\n  // defining parameters to be sent in api calls\n\n  multiUnitParams(props = this.props) {\n    return `?unit_ids=${this.unit_ids(props)}${this.getDateParams(props)}`\n  }\n\n  handleMultiUnitClick(event) {\n    const { id, reports } = this.props\n    const { category } = event.point\n    const data = reports[id].top_vendor_spend_by_company\n    const { vendor_id } = data.find((d) => d.name === category)\n    this.props.fetchReport(\n      this.props.id,\n      'vendor_spend',\n      `?unit_ids=${this.unit_ids()}&vendor_id=${vendor_id}${this.getDateParams()}`,\n    )\n    this.props.setWidgetState(id, { vendor_id, vendor_name: category })\n    this.drilldown('vendor_spend', category)\n  }\n\n  byUnitParams(props = this.props) {\n    const { vendor_id } = this.widget()\n    return `?unit_ids=${this.unit_ids(\n      props,\n    )}&vendor_id=${vendor_id}${this.getDateParams(props)}`\n  }\n\n  handleByUnitClick(event) {\n    const { id, reports } = this.props\n    const { category } = event.point\n    const { vendor_id } = this.widget()\n    const data = reports[id].vendor_spend.vendor_spend\n    const { unit_id } = data.find((d) => d.name === category)\n    this.props.fetchReport(\n      this.props.id,\n      'gl_spend',\n      `?unit_ids=${[unit_id]}&vendor_id=${vendor_id}${this.getDateParams()}`,\n    )\n    this.props.setWidgetState(id, { unit_id, fromByUnit: true })\n    this.drilldown('gl_spend', category)\n  }\n\n  byWeekParams(props = this.props) {\n    const { vendor_id } = this.widget()\n    return `?unit_ids=${this.unit_ids(\n      props,\n    )}&vendor_id=${vendor_id}${this.getDateParams(props)}`\n  }\n\n  handleByWeekClick(event) {\n    const { vendor_id } = this.widget()\n    const { category } = event.point\n    const startWeek = moment(category).format('MM/DD/YYYY')\n    const endWeek = moment(category).add(6, 'days').format('MM/DD/YYYY')\n    this.props.fetchReport(\n      this.props.id,\n      'gl_spend',\n      `?unit_ids=${this.unit_ids()}&vendor_id=${vendor_id}&start_date=${startWeek}&end_date=${endWeek}`,\n    )\n    this.props.setWidgetState(this.props.id, {\n      fromByUnit: false,\n      startWeek,\n      endWeek,\n    })\n    this.drilldown('gl_spend', event.point.category)\n  }\n\n  glParams(props = this.props) {\n    const { vendor_id, unit_id, fromByUnit } = this.widget()\n    const unit_ids = fromByUnit ? [unit_id] : this.unit_ids(props)\n    return `?unit_ids=${unit_ids}&vendor_id=${vendor_id}${this.getDateParams(\n      props,\n    )}`\n  }\n\n  handleGlClick(event) {\n    const { id, reports } = this.props\n    const { gl_code } = reports[id].gl_spend.find(\n      (gl) => gl.gl_name === event.point.x,\n    )\n    this.props.fetchReport(\n      this.props.id,\n      'invoices_by_vendor_gl',\n      this.invoicesParams(this.props, gl_code),\n    )\n    this.props.setWidgetState(id, { gl_code })\n    this.drilldown('invoices_by_vendor_gl', event.point.x)\n  }\n\n  invoicesParams(props = this.props, gl_code = this.widget().gl_code) {\n    const { vendor_id, unit_id, fromByUnit, startWeek, endWeek } = this.widget()\n    let unit_ids = []\n    let dateParams = ''\n    if (fromByUnit) {\n      unit_ids = [unit_id]\n      dateParams = this.getDateParams(props)\n    } else {\n      unit_ids = this.unit_ids(props)\n      dateParams = `&start_date=${startWeek}&end_date=${endWeek}`\n    }\n    return `?unit_ids=${unit_ids}&vendor_id=${vendor_id}&gl_code=${gl_code}${dateParams}`\n  }\n\n  toggleChart(chartType) {\n    const { id } = this.props\n    this.fetchChartData(contextRoutes[chartType])\n    setTimeout(() => {\n      this.props.sliceHistory(id, 0)\n      this.props.pushHistory(id, chartType, this.widget().vendor_name)\n      this.props.setChartType(id, chartType)\n    }, 100)\n  }\n\n  onCompressClick() {\n    this.goToInitialChart()\n    this.props.onCompressClick()\n  }\n\n  goToInitialChart() {\n    const { id } = this.props\n    this.props.setChartType(id, 'top_vendor_spend_by_company')\n    this.props.sliceHistory(id, -1)\n    this.props.pushHistory(\n      id,\n      'top_vendor_spend_by_company',\n      'top_vendor_spend_by_company',\n    )\n  }\n\n  render() {\n    // const urlParams = `?unit_id=${userId}&group_id=stellands`\n    const { chartType } = this.widget()\n\n    if (!chartType) return <div></div>\n    return (\n      <Widget\n        title=\"Vendor Spend\"\n        type={contextRoutes[chartType]}\n        shouldFetch={false}\n        history={this.props.history}\n        {...this.props}\n        onCompressClick={this.onCompressClick}\n      >\n        {this.renderChart()}\n      </Widget>\n    )\n  }\n}\n\nVendorWidget.propTypes = {}\n\nconst mapStateToProps = (state) => ({\n  widgets: state.widgets.widgets,\n  reports: state.reports,\n  startDate: state.reports.startDate,\n  endDate: state.reports.endDate,\n  company: state.company,\n  dashboard: state.dashboard,\n  byInvoiceDate: state.widget_settings.vendor_spend.byInvoiceDate,\n})\n\nexport default connect(mapStateToProps, {\n  setDrilldownIndex,\n  setReportAttribute,\n  fetchReport,\n  pushHistory,\n  sliceHistory,\n  setChartType,\n  setCompanyData,\n  setWidgetState,\n})(VendorWidget)\n","export default __webpack_public_path__ + \"images/rsi-logo.jpeg\";","var map = {\n\t\"./it\": 626,\n\t\"./it-ch\": 150,\n\t\"./it-ch.js\": 150,\n\t\"./it.js\": 626,\n\t\"./ja\": 9183,\n\t\"./ja.js\": 9183\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1599;"],"sourceRoot":""}